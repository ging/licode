{"version":3,"sources":["webpack://Erizo/webpack/bootstrap","webpack://Erizo/./src/utils/Logger.js","webpack://Erizo/../common/semanticSdp/SemanticSdp.js","webpack://Erizo/./src/utils/ConnectionHelpers.js","webpack://Erizo/../common/semanticSdp/DirectionWay.js","webpack://Erizo/../common/semanticSdp/Setup.js","webpack://Erizo/../common/semanticSdp/Enum.js","webpack://Erizo/../common/semanticSdp/Direction.js","webpack://Erizo/C:/workspace/www/licode/node_modules/sdp-transform/lib/grammar.js","webpack://Erizo/../common/semanticSdp/CandidateInfo.js","webpack://Erizo/../common/semanticSdp/CodecInfo.js","webpack://Erizo/../common/semanticSdp/DTLSInfo.js","webpack://Erizo/../common/semanticSdp/ICEInfo.js","webpack://Erizo/../common/semanticSdp/MediaInfo.js","webpack://Erizo/../common/semanticSdp/SimulcastInfo.js","webpack://Erizo/../common/semanticSdp/SourceGroupInfo.js","webpack://Erizo/../common/semanticSdp/SourceInfo.js","webpack://Erizo/../common/semanticSdp/StreamInfo.js","webpack://Erizo/../common/semanticSdp/TrackInfo.js","webpack://Erizo/(webpack)/buildin/global.js","webpack://Erizo/./lib/socket.io.js","webpack://Erizo/../common/semanticSdp/SDPInfo.js","webpack://Erizo/C:/workspace/www/licode/node_modules/sdp-transform/lib/index.js","webpack://Erizo/C:/workspace/www/licode/node_modules/sdp-transform/lib/parser.js","webpack://Erizo/C:/workspace/www/licode/node_modules/sdp-transform/lib/writer.js","webpack://Erizo/../common/semanticSdp/TrackEncodingInfo.js","webpack://Erizo/../common/semanticSdp/SimulcastStreamInfo.js","webpack://Erizo/../common/semanticSdp/RIDInfo.js","webpack://Erizo/(webpack)/buildin/harmony-module.js","webpack://Erizo/./lib/adapter.js-exposed","webpack://Erizo/./lib/adapter.js","webpack://Erizo/./src/utils/L.Resizer.js?d663","webpack://Erizo/C:/workspace/www/licode/node_modules/script-loader/addScript.js","webpack://Erizo/./src/utils/L.Resizer.js","webpack://Erizo/./src/utils/SdpHelpers.js","webpack://Erizo/./src/webrtc-stacks/BaseStack.js","webpack://Erizo/./src/webrtc-stacks/ChromeStableStack.js","webpack://Erizo/./src/webrtc-stacks/FirefoxStack.js","webpack://Erizo/./src/webrtc-stacks/FcStack.js","webpack://Erizo/./src/Events.js","webpack://Erizo/./src/utils/ErizoMap.js","webpack://Erizo/./src/ErizoConnectionManager.js","webpack://Erizo/./src/Socket.js","webpack://Erizo/./src/views/View.js","webpack://Erizo/./src/views/Speaker.js","webpack://Erizo/./src/views/Bar.js","webpack://Erizo/./src/views/VideoPlayer.js","webpack://Erizo/./src/views/AudioPlayer.js","webpack://Erizo/./src/Stream.js","webpack://Erizo/./src/utils/Base64.js","webpack://Erizo/./src/Room.js","webpack://Erizo/./src/Erizo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Logger","outputFunction","logPrefix","args","console","log","DEBUG","TRACE","INFO","WARNING","ERROR","NONE","setLogLevel","level","targetLevel","logLevel","setOutputFunction","newOutputFunction","setLogPrefix","newLogPrefix","out","tempArgs","concat","undefined","panel","tmp","idx","length","apply","debug","trace","info","warning","error","__webpack_exports__","SDPInfo","CandidateInfo","CodecInfo","DTLSInfo","ICEInfo","MediaInfo","Setup","SourceGroupInfo","SourceInfo","StreamInfo","TrackInfo","Direction","_Logger__WEBPACK_IMPORTED_MODULE_0__","getBrowser","browser","window","navigator","userAgent","match","ConnectionHelpers","GetUserMedia","config","callback","screenConfig","getUserMedia","userMediaConfig","cb","errorCb","mediaDevices","then","catch","screen","video","mandatory","chromeMediaSource","chromeMediaSourceId","desktopStreamId","mediaSource","audio","extensionId","chrome","runtime","sendMessage","getStream","response","code","theId","streamId","e","configureScreensharing","DirectionWay","Enum","byValue","direction","toUpperCase","toString","SEND","RECV","reverse","setup","ACTIVE","PASSIVE","ACTPASS","INACTIVE","this","Function","Array","slice","from","forEach","arg","for","SENDRECV","SENDONLY","RECVONLY","grammar","v","reg","names","format","u","z","b","push","a","rate","address","subtype","sessionConfig","str","raddr","tcptype","generation","attribute","maxMessageSize","RegExp","dir2","keys","obj","[object Object]","foundation","componentId","transport","priority","port","type","relAddr","relPort","plain","codec","encoding","params","feedback","cloned","rtx","setRTX","paramName","mapFromNames","codecs","Map","dyn","nameWithUpperCases","pt","toLowerCase","set","getCodec","hash","fingerprint","randomIntInc","low","high","range","random","Math","floor","randomBytes","size","numbers","Uint8Array","buf2hex","buffer","map","x","join","ufrag","pwd","opts","lite","endOfCandidates","setLite","setEndOfCandidates","generate","frag","SimulcastInfo","id","extensions","rids","simulcast","simulcast_03","bitrate","ice","dtls","connection","candidates","setDirection","setBitrate","setConnection","addCodec","clone","extension","addExtension","rid","addRID","setSimulcast","xGoogleFlag","setXGoogleFlag","setICE","setDTLS","candidate","addCandidate","setSetup","ridInfo","getId","codecInfo","getType","result","dtlsInfo","iceInfo","supported","answer","has","setType","hasRTX","getRTX","sendEntries","getSimulcastStreams","sendStreams","alternatives","sendStream","addSimulcastAlternativeStreams","recvEntries","recvStreams","recvStream","reversed","getDirection","send","recv","plainString","streams","stream","string","semantics","ssrcs","ssrc","parseInt","setCName","cname","setStreamId","setTrackId","trackId","label","mslabel","trackid","tracks","track","addTrack","media","getMedia","clear","groups","encodings","mediaId","setMediaId","addSSRC","group","addSourceGroup","entry","addAlternativeEncoding","schematics","getSemantics","g","eval","loaded","source","h","path","f","nsps","forceNew","multiplex","query","socket","iterator","constructor","managers","protocol","connect","Manager","Socket","location","host","charAt","test","indexOf","href","substring","replace","exec","authority","ipv6uri","storage","env","arguments","formatArgs","useColors","namespace","humanize","diff","color","splice","save","removeItem","load","process","document","documentElement","style","WebkitAppearance","firebug","exception","table","$1","local","localStorage","colors","formatters","j","JSON","stringify","message","enable","Error","setTimeout","y","run","clearTimeout","fun","array","nextTick","title","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","enabled","Date","prev","curr","coerce","unshift","charCodeAt","abs","init","stack","disable","skips","split","substr","ceil","String","parseFloat","isNaN","round","BINARY_EVENT","BINARY_ACK","attachments","nsp","data","reconstructor","Number","types","parse","reconPack","buffers","CONNECT","DISCONNECT","EVENT","ACK","Encoder","Decoder","encode","removeBlobs","deconstructPacket","packet","add","base64","takeBinaryData","destroy","finishedReconstruction","reconstructPacket","addEventListener","_callbacks","fn","removeEventListener","hasListeners","Blob","File","Buffer","isBuffer","ArrayBuffer","toJSON","isArray","_placeholder","num","FileReader","onload","readAsArrayBuffer","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","readyState","uri","connecting","lastPing","packetBuffer","parser","encoder","decoder","autoConnect","open","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","onopen","cleanup","close","onping","onpong","ondata","ondecoded","onerror","write","options","processPacketQueue","shift","disconnect","reset","onclose","duration","onreconnect","hostname","secure","agent","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","global","extraHeaders","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","Transport","createTransport","EIO","sid","requestTimeout","protocols","setTransport","onDrain","onPacket","onError","onClose","probe","supportsBinary","upgrading","pause","flush","onOpen","onHandshake","setPing","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","polling","xdomain","xscheme","websocket","XMLHttpRequest","XDomainRequest","xd","xs","method","async","isBinary","requests","abort","Request","request","doWrite","sendXhr","doPoll","onData","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","getResponseHeader","responseType","status","index","requestsCount","onSuccess","attachEvent","doOpen","poll","decodePayload","doClose","encodePayload","b64","description","decodePacket","packets","encodeBase64Packet","byteLength","encodePacket","k","pong","noop","w","strict","readAsDataURL","fromCharCode","btoa","decodeBase64Packet","encodePayloadAsBlob","encodePayloadAsArrayBuffer","decodePayloadAsBinary","reduce","count","webpackPolyfill","deprecate","paths","children","byteOffset","append","getBlob","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","encodeURIComponent","decodeURIComponent","___eio","script","parentNode","removeChild","form","iframe","createElement","src","getElementsByTagName","insertBefore","head","body","appendChild","iframeId","className","position","top","left","target","setAttribute","area","action","submit","usingBrowserWebSocket","WebSocket","MozWebSocket","check","headers","ws","supports","binary","addEventListeners","onmessage","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","flags","pop","onpacket","onconnect","onevent","onack","ondisconnect","ack","emitBuffered","ms","factor","pow","SDPTransform","TrackEncodingInfo","SimulcastStreamInfo","RIDInfo","medias","addMedia","addStream","origin","timing","msid","values","delete","sdp","username","sessionId","getTime","sessionVersion","netType","ipVer","getConnection","start","stop","getICE","isLite","icelite","iceOptions","getOpts","iceUfrag","getUfrag","icePwd","getPwd","msidSemantic","semantic","token","bundle","mids","getDTLS","getHash","getFingerprint","getSetup","md","getPort","fmtp","rtp","rtcpFb","ext","bandwidth","ssrcGroups","rtcpMux","getXGoogleFlag","mid","rtcp","getBitrate","limit","getCandidates","getFoundation","component","getComponentId","getTransport","getPriority","ip","getAddress","getRelAddr","getRelPort","getGeneration","isEndOfCandidates","getCodecs","payload","getRate","getEncoding","getParams","item","getFeedback","payloads","getExtensions","getRIDs","getFormats","param","prefix","getSimulcast","simulcast03","getSimulcast03","list","isPaused","getSimulcastPlainString","sort","m1","m2","getTracks","getMediaId","getSourceGroups","getSSRCs","getCName","getStreamId","getTrackId","getMSLabel","getLabel","getSimulcastDir","simulcastDir","simulcastList","parseSimulcastStreamList","scid","paused","processString","sdpInfo","setVersion","setTiming","setOrigin","fingerprintAttr","remoteHash","remoteFingerprint","mediaInfo","thisIce","apts","fmt","trim","apt","getCodecForType","extmaps","extmap","formats","parseParams","setFormats","setParams","sources","ssrcAttr","getSSRC","setMSLabel","setLabel","getTrack","setEncodings","ssrcGroupAttr","getRID","setSimulcastPlainString","getSimulcast3Dir","setSimulcast03","writer","parseFmtpConfig","parsePayloads","parseRemoteCandidates","parseImageAttributes","toIntIfInt","parseReg","content","needsBlank","keyLocation","rawName","attachProperties","validLine","session","filter","paramReducer","acc","expr","parts","formatRegExp","makeLine","formatStr","len","defaultOuterOrder","defaultInnerOrder","mLine","outerOrder","innerOrder","el","originalModule","require","1","SDPUtils","writeMediaSection","transceiver","caps","dtlsRole","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","rtpSender","rtpReceiver","sendEncodingParameters","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","headerExtensions","fecMechanisms","findCodecByPayloadType","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","rCodec","clockRate","numChannels","rtcpFeedback","fb","parameter","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","signalingState","offer","setLocalDescription","setRemoteDescription","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","find","remoteCandidate","addRemoteCandidate","edgeVersion","RTCPeerConnection","self","_eventTarget","createDocumentFragment","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","localDescription","remoteDescription","iceConnectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_emitGatheringStateChange","event","Event","dispatchEvent","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","hasBundleTransport","recvEncodingParameters","wantReceive","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","RTCRtpSender","clonedStream","clonedTrack","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","bufferCandidates","end","state","_gather","onlocalcandidate","evt","sdpMid","cand","writeCandidate","sections","splitSections","complete","every","RTCIceTransport","onicestatechange","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","compound","rtcpParameters","receive","sessionpart","Promise","resolve","reject","mediaSection","parseRtpParameters","isIceLite","matchPrefix","rejected","isRejected","isDatachannel","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","_updateSignalingState","TypeError","receiverList","lines","splitLines","getKind","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","parseCandidate","setRemoteCandidates","MediaStream","default","RTCRtpReceiver","getCapabilities","isNewTrack","receiver","trackEvent","newState","states","new","closed","checking","completed","failed","createOffer","offerOptions","numAudioTracks","numVideoTracks","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","hasRtx","reducedSize","addIceCandidate","err","candidateString","getStats","promises","results","all","res","stat","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","fixStatsType","2","blob","line","part","relatedAddress","relatedPort","tcpType","usernameFragment","parseIceOptions","parseRtpMap","parsed","writeRtpMap","parseExtmap","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parseRtcpFb","writeRtcpFb","parseSsrcMedia","sp","colon","parseFingerprint","algorithm","fingerprints","setupType","fp","iceParameters","password","mline","rtpmapline","fmtps","maxptime","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","encParam","codecPayloadType","fec","mechanism","maxBitrate","remoteSsrc","rsize","mux","spec","planB","sessId","sessVer","parseMLine","3","adapterFactory","./adapter_factory.js","4","utils","dependencies","shimChrome","shimFirefox","shimEdge","shimSafari","logging","browserDetails","detectBrowser","adapter","extractVersion","disableLog","disableWarnings","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","shimPeerConnection","browserShim","shimCreateObjectURL","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimRTCIceCandidate","shimReplaceTrack","shimRTCIceServerUrls","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimCreateOfferLegacy","./chrome/chrome_shim","./common_shim","./edge/edge_shim","./firefox/firefox_shim","./safari/safari_shim","./utils","5","webkitMediaStream","_ontrack","origSetRemoteDescription","pc","_ontrackpoly","te","shimSenderWithDtmf","dtmf","_dtmf","createDTMFSender","_pc","_senders","origAddTrack","sender","origRemoveTrack","removeTrack","origAddStream","origRemoveStream","origGetSenders","senders","URL","HTMLMediaElement","_srcObject","revokeObjectURL","createObjectURL","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","alreadyExists","DOMException","newStream","oldStream","nativeMethod","isLegacyCall","replaceInternalStreamId","origSetLocalDescription","internalId","externalStream","internalStream","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","isLocal","streamid","hasTrack","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","deprecated","generateCertificate","iceTransports","webkitRTCPeerConnection","origGetStats","selector","successCallback","errorCallback","fixChromeStats_","standardReport","reports","report","standardStats","timestamp","makeMapStats","stats","promise","RTCIceCandidate","nativeAddIceCandidate","../utils.js","./getusermedia","6","constraintsToChrome_","cc","ideal","exact","oldname_","oc","mix","advanced","shimConstraints_","constraints","func","remap","face","facingMode","matches","getSupportedFacingModeLies","getSupportedConstraints","enumerateDevices","devices","dev","some","deviceId","shimError_","PermissionDeniedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","constraint","constraintName","webkitGetUserMedia","getUserMediaPromise_","kinds","MediaStreamTrack","getSources","device","groupId","echoCancellation","frameRate","height","width","origGetUserMedia","cs","7","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","assign","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","wrappedCallback","_eventMap","nativeRemoveEventListener","unwrappedCb","wrapPeerConnectionEvent","nativeCreateObjectURL","nativeRevokeObjectURL","newId","dsc","srcObject","nativeSetAttribute","8","shimRTCPeerConnection","origMSTEnabled","ev","RTCDtmfSender","replaceTrack","setTrack","../utils","rtcpeerconnection-shim","9","10","RTCTrackEvent","mozSrcObject","mozRTCPeerConnection","newServer","credential","mozRTCSessionDescription","mozRTCIceCandidate","modernStatsTypes","nativeGetStats","onSucc","onErr","11","InternalError","NotSupportedError","SecurityError","The operation is insecure.","getUserMedia_","constraintsToFF37_","mozGetUserMedia","orgEnumerateDevices","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","12","_localStreams","getStreamById","_remoteStreams","_addTrack","_onaddstream","_onaddstreampoly","failureCallback","withCallback","errcb","RTCTransceiver","origCreateOffer","audioTransceiver","getTransceivers","addTransceiver","videoTransceiver","13","logDisabled_","deprecationWarnings_","bool","oldMethod","newMethod","uastring","pos","execScript","SdpHelpers","addSim","spatialLayers","spatialLayerId","addGroup","spatialLayerIdRtx","addSpatialLayer","setMaxBW","p2p","maxVideoBW","maxAudioBW","enableOpusNacks","sdpInput","sdpMatch","theLine","setParamForCodecs","mediaType","setParam","utils_SdpHelpers","webrtc_stacks_BaseStack","specInput","that","specBase","offerQueue","localDesc","remoteDesc","localSdp","remoteSdp","processOffer","isNegotiating","latestSessionVersion","con","forceTurn","remoteCandidates","localCandidates","remoteDescriptionSet","mediaConstraints","peerConnection","where","errorcb","checkOfferQueue","setLocalDescForAnswer","sessionDescription","SemanticSdp_default","msg","candidateObject","setStartVideoBW","setHardMinVideoBW","enableSimulcast","setVideo","setAudio","updateSpec","configInput","shouldApplyMaxVideoBWToSdp","shouldSendMaxVideoBWInOptions","limitMaxVideoBW","limitMaxAudioBW","Sdp","minVideoBW","slideShowMode","muteStream","qualityLayer","minLayer","isSubscribe","forceOfferToReceive","processSignalingMessage","msgInput","processAnswer","processNewCandidate","webrtc_stacks_ChromeStableStack","matchGroup","numSpatialLayers","baseSsrc","baseSsrcRtx","spatialLayersRtx","startVideoBW","hardMinVideoBW","webrtc_stacks_FirefoxStack","possibleLayers","scaleResolutionDownBy","totalLayers","getParameters","layer","setParameters","getSimulcastParameters","baseCreateOffer","webrtc_stacks_FcStack","signalCallback","sendSignalingMessage","setSignalingCallback","EventDispatcher","dispatcher","eventListeners","eventType","listener","LicodeEvent","ConnectionEvent","RoomEvent","StreamEvent","attrs","utils_ErizoMap","remove","EventEmitterConst","emitter","ErizoSessionId","ErizoConnectionManager_ErizoConnection","erizoId","super","streamsMap","newSpec","setSignallingCallback","getID","src_ErizoConnectionManager","ErizoConnectionsMap","singlePC","connectionEntry","newIo","defaultCallback","messageBuffer","CONNECTED","RECONNECTING","DISCONNECTED","IO","socket_io_default","SocketEvent","userOptions","closeCode","socketOnCloseFunction","closeEvent","reason","attemptNumber","clientId","respType","resp","addToBuffer","sendSDP","views_View","views_Speaker","lastVolume","elementID","div","icon","onclick","muted","picker","volume","step","oninput","show","displaying","offsetHeight","onmouseover","onmouseout","getElementById","views_Bar","waiting","bar","link","logo","display","hide","speaker","views_VideoPlayer","applyRatio","ratio","resizer","resize","container","offsetWidth","crop","containerWidth","containerHeight","loader","L","ResizeSensor","views_AudioPlayer","src_Stream","altConnectionHelpers","recording","room","showing","videoSize","videoFrameRate","audioMuted","videoMuted","onStreamAddedToPC","onStreamRemovedFroPC","onICEConnectionStateChange","streamID","getAttributes","attributes","setAttributes","updateLocalAttributes","hasAudio","hasVideo","hasData","hasScreen","hasMedia","isExternal","addPC","p2pKey","sendData","videoOpt","opt","fake","trackInput","onended","secondTrackInput","streamEvent","unpublish","play","optionsInput","player","getFrame","defaultView","getComputedStyle","getPropertyValue","divStyle","divWidth","divHeight","canvas","getContext","drawImage","getVideoFrameURL","toDataURL","getVideoFrame","getImageData","checkOptions","isUpdate","muteAudio","isMuted","muteVideo","_setStaticQualityLayer","spatialLayer","temporalLayer","_setDynamicQualityLayer","_setMinSpatialLayer","controlHandler","handlersInput","publisherSideInput","publisherSide","handlers","sendControlMessage","disableHandlers","enableHandlers","updateConfiguration","utils_Base64","base64Str","base64Count","base64Chars","reverseBase64Chars","setBase64Str","readBase64","readReverseBase64","nextCharacter","ntos","unescape","encodeBase64","lineCount","done","inBuffer","decodeBase64","src_Room","altIo","altConnectionManager","roomID","erizoConnectionManager","ErizoConnectionManager","streamInput","maybeCloseConnection","onStreamFailed","streamFailedEvt","unsubscribe","dispatchStreamSubscribed","evt2","getP2PConnectionOptions","peerSocket","getErizoConnectionOptions","isRemote","connectionOpts","nop2p","sendDataSocketFromStreamEvent","updateAttributesFromStreamEvent","socketEventToArgs","createSdpConstraints","metadata","populateStreamFunctions","publishErizo","scheme","getOrBuildErizoConnection","createLocalStreamErizoConnection","subscribeErizo","defaultVideoBW","getVideoConstraints","createRemoteStreamErizoConnection","streamList","roomId","streamIndices","connectEvt","disconnectEvt","publish","publishExternal","publishP2P","publishData","startRecording","to","stopRecording","recordingId","localStream","subscribe","subscribeData","getStreamStats","getStreamsByAttribute","Connection","peerId","mess","createRemoteStreamP2PConnection","createLocalStreamP2PConnection","myStream","removeLocalStreamP2PConnection","Erizo","Room","Stream"],"mappings":"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","file":"erizo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","/* global console */\r\n\r\n/*\r\n * API to write logs based on traditional logging mechanisms: debug, trace, info, warning, error\r\n */\r\nconst Logger = (() => {\r\n  const DEBUG = 0;\r\n  const TRACE = 1;\r\n  const INFO = 2;\r\n  const WARNING = 3;\r\n  const ERROR = 4;\r\n  const NONE = 5;\r\n  let logPrefix = '';\r\n  let outputFunction;\r\n\r\n    // It sets the new log level. We can set it to NONE if we do not want to print logs\r\n  const setLogLevel = (level) => {\r\n    let targetLevel = level;\r\n    if (level > Logger.NONE) {\r\n      targetLevel = Logger.NONE;\r\n    } else if (level < Logger.DEBUG) {\r\n      targetLevel = Logger.DEBUG;\r\n    }\r\n    Logger.logLevel = targetLevel;\r\n  };\r\n\r\n  outputFunction = (args) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(...args);\r\n  };\r\n\r\n  const setOutputFunction = (newOutputFunction) => {\r\n    outputFunction = newOutputFunction;\r\n  };\r\n\r\n  const setLogPrefix = (newLogPrefix) => {\r\n    logPrefix = newLogPrefix;\r\n  };\r\n\r\n    // Generic function to print logs for a given level:\r\n    //  Logger.[DEBUG, TRACE, INFO, WARNING, ERROR]\r\n  const log = (level, ...args) => {\r\n    let out = logPrefix;\r\n    if (level < Logger.logLevel) {\r\n      return;\r\n    }\r\n    if (level === Logger.DEBUG) {\r\n      out = `${out}DEBUG`;\r\n    } else if (level === Logger.TRACE) {\r\n      out = `${out}TRACE`;\r\n    } else if (level === Logger.INFO) {\r\n      out = `${out}INFO`;\r\n    } else if (level === Logger.WARNING) {\r\n      out = `${out}WARNING`;\r\n    } else if (level === Logger.ERROR) {\r\n      out = `${out}ERROR`;\r\n    }\r\n    out = `${out}: `;\r\n    const tempArgs = [out].concat(args);\r\n    if (Logger.panel !== undefined) {\r\n      let tmp = '';\r\n      for (let idx = 0; idx < tempArgs.length; idx += 1) {\r\n        tmp += tempArgs[idx];\r\n      }\r\n      Logger.panel.value = `${Logger.panel.value}\\n${tmp}`;\r\n    } else {\r\n      outputFunction.apply(Logger, [tempArgs]);\r\n    }\r\n  };\r\n\r\n  const debug = (...args) => {\r\n    Logger.log(Logger.DEBUG, ...args);\r\n  };\r\n\r\n  const trace = (...args) => {\r\n    Logger.log(Logger.TRACE, ...args);\r\n  };\r\n\r\n  const info = (...args) => {\r\n    Logger.log(Logger.INFO, ...args);\r\n  };\r\n\r\n  const warning = (...args) => {\r\n    Logger.log(Logger.WARNING, ...args);\r\n  };\r\n\r\n  const error = (...args) => {\r\n    Logger.log(Logger.ERROR, ...args);\r\n  };\r\n\r\n  return {\r\n    DEBUG,\r\n    TRACE,\r\n    INFO,\r\n    WARNING,\r\n    ERROR,\r\n    NONE,\r\n    setLogLevel,\r\n    setOutputFunction,\r\n    setLogPrefix,\r\n    log,\r\n    debug,\r\n    trace,\r\n    info,\r\n    warning,\r\n    error,\r\n  };\r\n})();\r\n\r\nexport default Logger;\r\n","const SDPInfo = require('./SDPInfo');\r\nconst CandidateInfo = require('./CandidateInfo');\r\nconst CodecInfo = require('./CodecInfo');\r\nconst DTLSInfo = require('./DTLSInfo');\r\nconst ICEInfo = require('./ICEInfo');\r\nconst MediaInfo = require('./MediaInfo');\r\nconst Setup = require('./Setup');\r\nconst SourceGroupInfo = require('./SourceGroupInfo');\r\nconst SourceInfo = require('./SourceInfo');\r\nconst StreamInfo = require('./StreamInfo');\r\nconst TrackInfo = require('./TrackInfo');\r\nconst Direction = require('./Direction');\r\n\r\nmodule.exports = {\r\n  SDPInfo,\r\n  CandidateInfo,\r\n  CodecInfo,\r\n  DTLSInfo,\r\n  ICEInfo,\r\n  MediaInfo,\r\n  Setup,\r\n  SourceGroupInfo,\r\n  SourceInfo,\r\n  StreamInfo,\r\n  TrackInfo,\r\n  Direction,\r\n};\r\n","/* global navigator, window, chrome */\r\nimport Logger from './Logger';\r\n\r\nconst getBrowser = () => {\r\n  let browser = 'none';\r\n\r\n  if ((typeof module !== 'undefined' && module.exports)) {\r\n    browser = 'fake';\r\n  } else if (window.navigator.userAgent.match('Firefox') !== null) {\r\n    // Firefox\r\n    browser = 'mozilla';\r\n  } else if (window.navigator.userAgent.match('Chrome') !== null) {\r\n    browser = 'chrome-stable';\r\n    if (window.navigator.userAgent.match('Electron') !== null) {\r\n      browser = 'electron';\r\n    }\r\n  } else if (window.navigator.userAgent.match('Safari') !== null) {\r\n    browser = 'safari';\r\n  } else if (window.navigator.userAgent.match('AppleWebKit') !== null) {\r\n    browser = 'safari';\r\n  }\r\n  return browser;\r\n};\r\n\r\nconst GetUserMedia = (config, callback = () => {}, error = () => {}) => {\r\n  let screenConfig;\r\n\r\n  const getUserMedia = (userMediaConfig, cb, errorCb) => {\r\n    navigator.mediaDevices.getUserMedia(userMediaConfig).then(cb).catch(errorCb);\r\n  };\r\n\r\n  const configureScreensharing = () => {\r\n    Logger.debug('Screen access requested');\r\n    switch (getBrowser()) {\r\n      case 'electron' :\r\n        Logger.debug('Screen sharing in Electron');\r\n        screenConfig = {};\r\n        screenConfig.video = config.video || {};\r\n        screenConfig.video.mandatory = config.video.mandatory || {};\r\n        screenConfig.video.mandatory.chromeMediaSource = 'desktop';\r\n        screenConfig.video.mandatory.chromeMediaSourceId = config.desktopStreamId;\r\n        getUserMedia(screenConfig, callback, error);\r\n        break;\r\n      case 'mozilla':\r\n        Logger.debug('Screen sharing in Firefox');\r\n        screenConfig = {};\r\n        if (config.video !== undefined) {\r\n          screenConfig.video = config.video;\r\n          if (!screenConfig.video.mediaSource) {\r\n            screenConfig.video.mediaSource = 'window' || 'screen';\r\n          }\r\n        } else {\r\n          screenConfig = {\r\n            audio: config.audio,\r\n            video: { mediaSource: 'window' || 'screen' },\r\n          };\r\n        }\r\n        getUserMedia(screenConfig, callback, error);\r\n        break;\r\n\r\n      case 'chrome-stable':\r\n        Logger.debug('Screen sharing in Chrome');\r\n        screenConfig = {};\r\n        if (config.desktopStreamId) {\r\n          screenConfig.video = config.video || { mandatory: {} };\r\n          screenConfig.video.mandatory = screenConfig.video.mandatory || {};\r\n          screenConfig.video.mandatory.chromeMediaSource = 'desktop';\r\n          screenConfig.video.mandatory.chromeMediaSourceId = config.desktopStreamId;\r\n          getUserMedia(screenConfig, callback, error);\r\n        } else {\r\n          // Default extensionId - this extension is only usable in our server,\r\n          // please make your own extension based on the code in\r\n          // erizo_controller/erizoClient/extras/chrome-extension\r\n          let extensionId = 'okeephmleflklcdebijnponpabbmmgeo';\r\n          if (config.extensionId) {\r\n            Logger.debug(`extensionId supplied, using ${config.extensionId}`);\r\n            extensionId = config.extensionId;\r\n          }\r\n          Logger.debug('Screen access on chrome stable, looking for extension');\r\n          try {\r\n            chrome.runtime.sendMessage(extensionId, { getStream: true },\r\n              (response) => {\r\n                if (response === undefined) {\r\n                  Logger.error('Access to screen denied');\r\n                  const theError = { code: 'Access to screen denied' };\r\n                  error(theError);\r\n                  return;\r\n                }\r\n                const theId = response.streamId;\r\n                if (config.video.mandatory !== undefined) {\r\n                  screenConfig.video = config.video || { mandatory: {} };\r\n                  screenConfig.video.mandatory.chromeMediaSource = 'desktop';\r\n                  screenConfig.video.mandatory.chromeMediaSourceId = theId;\r\n                } else {\r\n                  screenConfig = { video: { mandatory: { chromeMediaSource: 'desktop',\r\n                    chromeMediaSourceId: theId } } };\r\n                }\r\n                getUserMedia(screenConfig, callback, error);\r\n              });\r\n          } catch (e) {\r\n            Logger.debug('Screensharing plugin is not accessible ');\r\n            const theError = { code: 'no_plugin_present' };\r\n            error(theError);\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        Logger.error('This browser does not support ScreenSharing');\r\n    }\r\n  };\r\n\r\n  if (config.screen) {\r\n    configureScreensharing();\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    Logger.error('Video/audio streams not supported in erizofc yet');\r\n  } else {\r\n    Logger.debug('Calling getUserMedia with config', config);\r\n    getUserMedia(config, callback, error);\r\n  }\r\n};\r\n\r\n\r\nconst ConnectionHelpers = { GetUserMedia, getBrowser };\r\n\r\nexport default ConnectionHelpers;\r\n","const Enum = require('./Enum');\r\n\r\nconst DirectionWay = Enum('SEND', 'RECV');\r\n\r\nDirectionWay.byValue = direction => DirectionWay[direction.toUpperCase()];\r\n\r\nDirectionWay.toString = (direction) => {\r\n  switch (direction) {\r\n    case DirectionWay.SEND:\r\n      return 'send';\r\n    case DirectionWay.RECV:\r\n      return 'recv';\r\n    default:\r\n      return 'unknown';\r\n  }\r\n};\r\n\r\nDirectionWay.reverse = (direction) => {\r\n  switch (direction) {\r\n    case DirectionWay.SEND:\r\n      return DirectionWay.RECV;\r\n    case DirectionWay.RECV:\r\n      return DirectionWay.SEND;\r\n    default:\r\n      return DirectionWay.SEND;\r\n  }\r\n};\r\n\r\nmodule.exports = DirectionWay;\r\n","const Enum = require('./Enum');\r\n\r\nconst Setup = Enum('ACTIVE', 'PASSIVE', 'ACTPASS', 'INACTIVE');\r\n\r\nSetup.byValue = setup => Setup[setup.toUpperCase()];\r\n\r\nSetup.toString = (setup) => {\r\n  switch (setup) {\r\n    case Setup.ACTIVE:\r\n      return 'active';\r\n    case Setup.PASSIVE:\r\n      return 'passive';\r\n    case Setup.ACTPASS:\r\n      return 'actpass';\r\n    case Setup.INACTIVE:\r\n      return 'inactive';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nSetup.reverse = (setup) => {\r\n  switch (setup) {\r\n    case Setup.ACTIVE:\r\n      return Setup.PASSIVE;\r\n    case Setup.PASSIVE:\r\n      return Setup.ACTIVE;\r\n    case Setup.ACTPASS:\r\n      return Setup.PASSIVE;\r\n    case Setup.INACTIVE:\r\n      return Setup.INACTIVE;\r\n    default:\r\n      return Setup.ACTIVE;\r\n  }\r\n};\r\n\r\nmodule.exports = Setup;\r\n","\r\nfunction Enum(...args) {\r\n  if (!(this instanceof Enum)) {\r\n    return new (Function.prototype.bind.apply(Enum,\r\n      [null].concat(Array.prototype.slice.call(args))))();\r\n  }\r\n  Array.from(args).forEach((arg) => {\r\n    this[arg] = Symbol.for(`LICODE_SEMANTIC_SDP_${arg}`);\r\n  });\r\n}\r\n\r\nmodule.exports = Enum;\r\n","const Enum = require('./Enum');\r\n\r\nconst Direction = Enum('SENDRECV', 'SENDONLY', 'RECVONLY', 'INACTIVE');\r\n\r\nDirection.byValue = direction => Direction[direction.toUpperCase()];\r\n\r\n/**\r\n* Get Direction name\r\n* @memberOf Direction\r\n* @param {Direction} direction\r\n* @returns {String}\r\n*/\r\nDirection.toString = (direction) => {\r\n  switch (direction) {\r\n    case Direction.SENDRECV:\r\n      return 'sendrecv';\r\n    case Direction.SENDONLY:\r\n      return 'sendonly';\r\n    case Direction.RECVONLY:\r\n      return 'recvonly';\r\n    case Direction.INACTIVE:\r\n      return 'inactive';\r\n    default:\r\n      return 'unknown';\r\n  }\r\n};\r\n\r\nDirection.reverse = (direction) => {\r\n  switch (direction) {\r\n    case Direction.SENDRECV:\r\n      return Direction.SENDRECV;\r\n    case Direction.SENDONLY:\r\n      return Direction.RECVONLY;\r\n    case Direction.RECVONLY:\r\n      return Direction.SENDONLY;\r\n    case Direction.INACTIVE:\r\n      return Direction.INACTIVE;\r\n    default:\r\n      return Direction.SENDRECV;\r\n  }\r\n};\r\n\r\nmodule.exports = Direction;\r\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // RFC4570\n      //a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","class CandidateInfo {\r\n  constructor(foundation, componentId, transport, priority, address, port,\r\n    type, generation, relAddr, relPort) {\r\n    this.foundation = foundation;\r\n    this.componentId = componentId;\r\n    this.transport = transport;\r\n    this.priority = priority;\r\n    this.address = address;\r\n    this.port = port;\r\n    this.type = type;\r\n    this.generation = generation;\r\n    this.relAddr = relAddr;\r\n    this.relPort = relPort;\r\n  }\r\n\r\n  clone() {\r\n    return new CandidateInfo(this.foundation, this.componentId, this.transport, this.priority,\r\n              this.address, this.port, this.type, this.generation, this.relAddr, this.relPort);\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      foundation: this.foundation,\r\n      componentId: this.componentId,\r\n      transport: this.transport,\r\n      priority: this.priority,\r\n      address: this.address,\r\n      port: this.port,\r\n      type: this.type,\r\n      generation: this.generation,\r\n    };\r\n    if (this.relAddr) plain.relAddr = this.relAddr;\r\n    if (this.relPort) plain.relPort = this.relPort;\r\n    return plain;\r\n  }\r\n\r\n  getFoundation() {\r\n    return this.foundation;\r\n  }\r\n\r\n  getComponentId() {\r\n    return this.componentId;\r\n  }\r\n\r\n  getTransport() {\r\n    return this.transport;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getAddress() {\r\n    return this.address;\r\n  }\r\n\r\n  getPort() {\r\n    return this.port;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  getGeneration() {\r\n    return this.generation;\r\n  }\r\n\r\n  getRelAddr() {\r\n    return this.relAddr;\r\n  }\r\n\r\n  getRelPort() {\r\n    return this.relPort;\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = CandidateInfo;\r\n","class CodecInfo {\r\n\r\n  constructor(codec, type, rate, encoding, params, feedback) {\r\n    this.codec = codec;\r\n    this.type = type;\r\n    this.rate = rate;\r\n    this.encoding = encoding;\r\n    this.params = params || {};\r\n    this.feedback = feedback || [];\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new CodecInfo(this.codec, this.type, this.rate, this.encoding,\r\n      this.params, this.feedback);\r\n    if (this.rtx) {\r\n      cloned.setRTX(this.rtx);\r\n    }\r\n    return cloned;\r\n  }\r\n\r\n\r\n  plain() {\r\n    return {\r\n      codec: this.codec,\r\n      type: this.type,\r\n      rate: this.rate,\r\n      encoding: this.encoding,\r\n      params: this.params,\r\n      feedback: this.feedback,\r\n    };\r\n  }\r\n\r\n  setRTX(rtx) {\r\n    this.rtx = rtx;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  getCodec() {\r\n    return this.codec;\r\n  }\r\n\r\n  getParams() {\r\n    return this.params;\r\n  }\r\n\r\n  setParam(paramName, value) {\r\n    this.params[paramName] = value;\r\n  }\r\n\r\n  hasRTX() {\r\n    return this.rtx;\r\n  }\r\n\r\n  getRTX() {\r\n    return this.rtx;\r\n  }\r\n\r\n  getRate() {\r\n    return this.rate;\r\n  }\r\n\r\n  getEncoding() {\r\n    return this.encoding;\r\n  }\r\n\r\n  getFeedback() {\r\n    return this.feedback;\r\n  }\r\n}\r\n\r\nCodecInfo.mapFromNames = (names, rtx) => {\r\n  const codecs = new Map();\r\n\r\n  let dyn = 96;\r\n  names.forEach((nameWithUpperCases) => {\r\n    let pt;\r\n    const name = nameWithUpperCases.toLowerCase();\r\n    if (name === 'pcmu') pt = 0;\r\n    else if (name === 'pcma') pt = 8;\r\n    else {\r\n      dyn += 1;\r\n      pt = dyn;\r\n    }\r\n    const codec = new CodecInfo(name, pt);\r\n    if (rtx && name !== 'ulpfec' && name !== 'flexfec-03' && name !== 'red') {\r\n      dyn += 1;\r\n      codec.setRTX(dyn);\r\n    }\r\n    codecs.set(codec.getCodec().toLowerCase(), codec);\r\n  });\r\n  return codecs;\r\n};\r\n\r\nmodule.exports = CodecInfo;\r\n","const Setup = require('./Setup');\r\n\r\nclass DTLSInfo {\r\n  constructor(setup, hash, fingerprint) {\r\n    this.setup = setup;\r\n    this.hash = hash;\r\n    this.fingerprint = fingerprint;\r\n  }\r\n\r\n  clone() {\r\n    return new DTLSInfo(this.setup, this.hash, this.fingerprint);\r\n  }\r\n\r\n  plain() {\r\n    return {\r\n      setup: Setup.toString(this.setup),\r\n      hash: this.hash,\r\n      fingerprint: this.fingerprint,\r\n    };\r\n  }\r\n\r\n  getFingerprint() {\r\n    return this.fingerprint;\r\n  }\r\n\r\n  getHash() {\r\n    return this.hash;\r\n  }\r\n\r\n  getSetup() {\r\n    return this.setup;\r\n  }\r\n\r\n  setSetup(setup) {\r\n    this.setup = setup;\r\n  }\r\n}\r\n\r\nmodule.exports = DTLSInfo;\r\n","function randomIntInc(low, high) {\r\n  const range = (high - low) + 1;\r\n  const random = Math.random() * range;\r\n  return Math.floor(random + low);\r\n}\r\n\r\nfunction randomBytes(size) {\r\n  const numbers = new Uint8Array(size);\r\n\r\n  for (let i = 0; i < numbers.length; i += 1) {\r\n    numbers[i] = randomIntInc(0, 255);\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction buf2hex(buffer) {\r\n  return Array.prototype.map.call(new Uint8Array(buffer), (x) => {\r\n    const hexValue = x.toString(16);\r\n    return `00${hexValue}`.slice(-2);\r\n  }).join('');\r\n}\r\n\r\nclass ICEInfo {\r\n  constructor(ufrag, pwd, opts) {\r\n    this.ufrag = ufrag;\r\n    this.pwd = pwd;\r\n    this.opts = opts;\r\n    this.lite = false;\r\n    this.endOfCandidates = false;\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new ICEInfo(this.ufrag, this.pwd, this.opts);\r\n    cloned.setLite(this.lite);\r\n    cloned.setEndOfCandidates(this.endOfCandidates);\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      ufrag: this.ufrag,\r\n      pwd: this.pwd,\r\n    };\r\n    if (this.lite) plain.lite = this.lite;\r\n    if (this.endOfCandidates) plain.endOfCandidates = this.endOfCandidates;\r\n    return plain;\r\n  }\r\n\r\n  getUfrag() {\r\n    return this.ufrag;\r\n  }\r\n\r\n  getPwd() {\r\n    return this.pwd;\r\n  }\r\n\r\n  isLite() {\r\n    return this.lite;\r\n  }\r\n\r\n  getOpts() {\r\n    return this.opts;\r\n  }\r\n\r\n  setLite(lite) {\r\n    this.lite = lite;\r\n  }\r\n\r\n  isEndOfCandidates() {\r\n    return this.endOfCandidates;\r\n  }\r\n\r\n  setEndOfCandidates(endOfCandidates) {\r\n    this.endOfCandidates = endOfCandidates;\r\n  }\r\n\r\n}\r\n\r\nICEInfo.generate = () => {\r\n  const info = new ICEInfo();\r\n  const frag = randomBytes(8);\r\n  const pwd = randomBytes(24);\r\n  info.ufrag = buf2hex(frag);\r\n  info.pwd = buf2hex(pwd);\r\n  return info;\r\n};\r\n\r\nmodule.exports = ICEInfo;\r\n","const SimulcastInfo = require('./SimulcastInfo');\r\nconst Direction = require('./Direction');\r\nconst DirectionWay = require('./DirectionWay');\r\n\r\nclass MediaInfo {\r\n  constructor(id, port, type) {\r\n    this.id = id;\r\n    this.type = type;\r\n    this.port = port;\r\n    this.direction = Direction.SENDRECV;\r\n    this.extensions = new Map();\r\n    this.codecs = new Map();\r\n    this.rids = new Map();\r\n    this.simulcast = null;\r\n    this.simulcast_03 = null;\r\n    this.bitrate = 0;\r\n    this.ice = null;\r\n    this.dtls = null;\r\n    this.connection = null;\r\n    this.candidates = [];\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new MediaInfo(this.id, this.port, this.type);\r\n    cloned.setDirection(this.direction);\r\n    cloned.setBitrate(this.bitrate);\r\n    cloned.setConnection(this.connection);\r\n    this.codecs.forEach((codec) => {\r\n      cloned.addCodec(codec.clone());\r\n    });\r\n    this.extensions.forEach((extension, id) => {\r\n      cloned.addExtension(id, extension);\r\n    });\r\n    this.rids.forEach((rid, id) => {\r\n      cloned.addRID(id, rid.clone());\r\n    });\r\n    if (this.simulcast) {\r\n      cloned.setSimulcast(this.simulcast.clone());\r\n    }\r\n    if (this.xGoogleFlag) {\r\n      cloned.setXGoogleFlag(this.xGoogleFlag);\r\n    }\r\n    if (this.ice) {\r\n      cloned.setICE(this.ice.clone());\r\n    }\r\n    if (this.dtls) {\r\n      cloned.setDTLS(this.dtls.clone());\r\n    }\r\n    this.candidates.forEach((candidate) => {\r\n      cloned.addCandidate(candidate.clone());\r\n    });\r\n    if (this.setup) {\r\n      cloned.setSetup(this.setup);\r\n    }\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      id: this.id,\r\n      port: this.port,\r\n      type: this.type,\r\n      connection: this.connection,\r\n      direction: Direction.toString(this.direction),\r\n      xGoogleFlag: this.xGoogleFlag,\r\n      extensions: {},\r\n      rids: [],\r\n      codecs: [],\r\n      candidates: [],\r\n    };\r\n    if (this.bitrate) {\r\n      plain.bitrate = this.bitrate;\r\n    }\r\n    this.codecs.forEach((codec) => {\r\n      plain.codecs.push(codec.plain());\r\n    });\r\n    this.extensions.forEach((extension) => {\r\n      plain.extensions.push(extension.plain());\r\n    });\r\n    this.rids.forEach((rid) => {\r\n      plain.rids.push(rid.plain());\r\n    });\r\n    if (this.simulcast) {\r\n      plain.simulcast = this.simulcast.plain();\r\n    }\r\n    this.candidates.forEach((candidate) => {\r\n      plain.candidates.push(candidate.plain());\r\n    });\r\n    plain.ice = this.ice && this.ice.plain();\r\n    plain.dtls = this.dtls && this.dtls.plain();\r\n    return plain;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  getPort() {\r\n    return this.port;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  addExtension(id, name) {\r\n    this.extensions.set(id, name);\r\n  }\r\n\r\n  addRID(ridInfo) {\r\n    this.rids.set(ridInfo.getId(), ridInfo);\r\n  }\r\n\r\n  addCodec(codecInfo) {\r\n    this.codecs.set(codecInfo.getType(), codecInfo);\r\n  }\r\n\r\n  getCodecForType(type) {\r\n    return this.codecs.get(type);\r\n  }\r\n\r\n  getCodec(codec) {\r\n    let result;\r\n    this.codecs.forEach((info) => {\r\n      if (info.getCodec().toLowerCase() === codec.toLowerCase()) {\r\n        result = info;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  hasCodec(codec) {\r\n    return this.getCodec(codec) !== null;\r\n  }\r\n\r\n  getCodecs() {\r\n    return this.codecs;\r\n  }\r\n\r\n  getExtensions() {\r\n    return this.extensions;\r\n  }\r\n\r\n  getRIDs() {\r\n    return this.rids;\r\n  }\r\n\r\n  getRID(id) {\r\n    return this.rids.get(id);\r\n  }\r\n\r\n  getBitrate() {\r\n    return this.bitrate;\r\n  }\r\n\r\n  setBitrate(bitrate) {\r\n    this.bitrate = bitrate;\r\n  }\r\n\r\n  getDirection() {\r\n    return this.direction;\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.direction = direction;\r\n  }\r\n\r\n  getDTLS() {\r\n    return this.dtls;\r\n  }\r\n\r\n  setDTLS(dtlsInfo) {\r\n    this.dtls = dtlsInfo;\r\n  }\r\n\r\n  getICE() {\r\n    return this.ice;\r\n  }\r\n\r\n  setICE(iceInfo) {\r\n    this.ice = iceInfo;\r\n  }\r\n\r\n  addCandidate(candidate) {\r\n    this.candidates.push(candidate);\r\n  }\r\n\r\n  addCandidates(candidates) {\r\n    candidates.forEach((candidate) => {\r\n      this.addCandidate(candidate);\r\n    });\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  setXGoogleFlag(value) {\r\n    this.xGoogleFlag = value;\r\n  }\r\n\r\n  getXGoogleFlag() {\r\n    return this.xGoogleFlag;\r\n  }\r\n\r\n  getConnection() {\r\n    return this.connection;\r\n  }\r\n\r\n  setConnection(connection) {\r\n    this.connection = connection;\r\n  }\r\n\r\n  answer(supported) {\r\n    const answer = new MediaInfo(this.id, this.port, this.type);\r\n\r\n    answer.setDirection(Direction.reverse(this.direction));\r\n\r\n    if (supported.codecs) {\r\n      this.codecs.forEach((codec) => {\r\n        if (supported.codecs.has(codec.getCodec().toLowerCase())) {\r\n          const cloned = supported.codecs.get(codec.getCodec().toLowerCase()).clone();\r\n          cloned.setType(codec.getType());\r\n          if (cloned.hasRTX()) {\r\n            cloned.setRTX(codec.getRTX());\r\n          }\r\n          answer.addCodec(cloned);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.extensions.forEach((extension, id) => {\r\n      if (supported.extensions.has(id)) {\r\n        answer.addExtension(id, extension);\r\n      }\r\n    });\r\n\r\n    if (supported.simulcast && this.simulcast) {\r\n      const simulcast = new SimulcastInfo();\r\n      const sendEntries = this.simulcast.getSimulcastStreams(DirectionWay.SEND);\r\n      if (sendEntries) {\r\n        sendEntries.forEach((sendStreams) => {\r\n          const alternatives = [];\r\n          sendStreams.forEach((sendStream) => {\r\n            alternatives.push(sendStream.clone());\r\n          });\r\n          simulcast.addSimulcastAlternativeStreams(DirectionWay.RECV, alternatives);\r\n        });\r\n      }\r\n\r\n      const recvEntries = this.simulcast.getSimulcastStreams(DirectionWay.RECV);\r\n      if (recvEntries) {\r\n        recvEntries.forEach((recvStreams) => {\r\n          const alternatives = [];\r\n          recvStreams.forEach((recvStream) => {\r\n            alternatives.push(recvStream.clone());\r\n          });\r\n          simulcast.addSimulcastAlternativeStreams(DirectionWay.SEND, alternatives);\r\n        });\r\n      }\r\n\r\n      this.rids.forEach((rid) => {\r\n        const reversed = rid.clone();\r\n        reversed.setDirection(DirectionWay.reverse(rid.getDirection()));\r\n        answer.addRID(reversed);\r\n      });\r\n\r\n      answer.setSimulcast(simulcast);\r\n    }\r\n    return answer;\r\n  }\r\n\r\n  getSimulcast() {\r\n    return this.simulcast;\r\n  }\r\n\r\n  setSimulcast(simulcast) {\r\n    this.simulcast = simulcast;\r\n  }\r\n\r\n  getSimulcast03() {\r\n    return this.simulcast_03;\r\n  }\r\n\r\n  setSimulcast03(simulcast) {\r\n    this.simulcast_03 = simulcast;\r\n  }\r\n\r\n  getSetup() {\r\n    return this.setup;\r\n  }\r\n\r\n  setSetup(setup) {\r\n    this.setup = setup;\r\n  }\r\n}\r\n\r\nmodule.exports = MediaInfo;\r\n","const DirectionWay = require('./DirectionWay');\r\n\r\nclass SimulcastInfo {\r\n  constructor() {\r\n    this.send = [];\r\n    this.recv = [];\r\n    this.plainString = null;\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new SimulcastInfo();\r\n    this.send.forEach((sendStreams) => {\r\n      const alternatives = [];\r\n      sendStreams.forEach((sendStream) => {\r\n        alternatives.push(sendStream.clone());\r\n      });\r\n      cloned.addSimulcastAlternativeStreams(alternatives);\r\n    });\r\n    this.recv.forEach((recvStreams) => {\r\n      const alternatives = [];\r\n      recvStreams.forEach((recvStream) => {\r\n        alternatives.push(recvStream.clone());\r\n      });\r\n      cloned.addSimulcastAlternativeStreams(alternatives);\r\n    });\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      send: [],\r\n      recv: [],\r\n    };\r\n    this.send.forEach((sendStreams) => {\r\n      const alternatives = [];\r\n      sendStreams.forEach((sendStream) => {\r\n        alternatives.push(sendStream.plain());\r\n      });\r\n      plain.send.push(alternatives);\r\n    });\r\n    this.recv.forEach((recvStreams) => {\r\n      const alternatives = [];\r\n      recvStreams.forEach((recvStream) => {\r\n        alternatives.push(recvStream.plain());\r\n      });\r\n      plain.recv.push(alternatives);\r\n    });\r\n    return plain;\r\n  }\r\n\r\n  addSimulcastAlternativeStreams(direction, streams) {\r\n    if (direction === DirectionWay.SEND) {\r\n      return this.send.push(streams);\r\n    }\r\n    return this.recv.push(streams);\r\n  }\r\n\r\n  addSimulcastStream(direction, stream) {\r\n    if (direction === DirectionWay.SEND) {\r\n      return this.send.push([stream]);\r\n    }\r\n    return this.recv.push([stream]);\r\n  }\r\n\r\n  getSimulcastStreams(direction) {\r\n    if (direction === DirectionWay.SEND) {\r\n      return this.send;\r\n    }\r\n    return this.recv;\r\n  }\r\n\r\n  setSimulcastPlainString(string) {\r\n    this.plainString = string;\r\n  }\r\n\r\n  getSimulcastPlainString() {\r\n    return this.plainString;\r\n  }\r\n}\r\n\r\nmodule.exports = SimulcastInfo;\r\n","class SourceGroupInfo {\r\n  constructor(semantics, ssrcs) {\r\n    this.semantics = semantics;\r\n    this.ssrcs = [];\r\n    ssrcs.forEach((ssrc) => {\r\n      this.ssrcs.push(parseInt(ssrc, 10));\r\n    });\r\n  }\r\n\r\n  clone() {\r\n    return new SourceGroupInfo(this.semantics, this.ssrcs);\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      semantics: this.semantics,\r\n      ssrcs: [],\r\n    };\r\n    plain.ssrcs = this.ssrcs;\r\n    return plain;\r\n  }\r\n\r\n  getSemantics() {\r\n    return this.semantics;\r\n  }\r\n\r\n  getSSRCs() {\r\n    return this.ssrcs;\r\n  }\r\n}\r\n\r\nmodule.exports = SourceGroupInfo;\r\n","class SourceInfo {\r\n  constructor(ssrc) {\r\n    this.ssrc = ssrc;\r\n  }\r\n\r\n  clone() {\r\n    const clone = new SourceInfo(this.ssrc);\r\n    clone.setCName(this.cname);\r\n    clone.setStreamId(this.streamId);\r\n    this.setTrackId(this.trackId);\r\n  }\r\n\r\n\r\n  plain() {\r\n    const plain = {\r\n      ssrc: this.ssrc,\r\n    };\r\n    if (this.cname) plain.cname = this.cname;\r\n    if (this.label) plain.label = this.label;\r\n    if (this.mslabel) plain.mslabel = this.mslabel;\r\n    if (this.streamId) plain.streamId = this.streamId;\r\n    if (this.trackId) plain.trackid = this.trackId;\r\n    return plain;\r\n  }\r\n\r\n  getCName() {\r\n    return this.cname;\r\n  }\r\n\r\n  setCName(cname) {\r\n    this.cname = cname;\r\n  }\r\n\r\n  getStreamId() {\r\n    return this.streamId;\r\n  }\r\n\r\n  setStreamId(streamId) {\r\n    this.streamId = streamId;\r\n  }\r\n\r\n  getTrackId() {\r\n    return this.trackId;\r\n  }\r\n\r\n  setTrackId(trackId) {\r\n    this.trackId = trackId;\r\n  }\r\n\r\n  getMSLabel() {\r\n    return this.mslabel;\r\n  }\r\n\r\n  setMSLabel(mslabel) {\r\n    this.mslabel = mslabel;\r\n  }\r\n\r\n  getLabel() {\r\n    return this.label;\r\n  }\r\n\r\n  setLabel(label) {\r\n    this.label = label;\r\n  }\r\n\r\n  getSSRC() {\r\n    return this.ssrc;\r\n  }\r\n}\r\n\r\nmodule.exports = SourceInfo;\r\n","class StreamInfo {\r\n  constructor(id) {\r\n    this.id = id;\r\n    this.tracks = new Map();\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new StreamInfo(this.id);\r\n    this.tracks.forEach((track) => {\r\n      cloned.addTrack(track.clone());\r\n    });\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      id: this.id,\r\n      tracks: [],\r\n    };\r\n    this.tracks.forEach((track) => {\r\n      plain.tracks.push(track.plain());\r\n    });\r\n    return plain;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  addTrack(track) {\r\n    this.tracks.set(track.getId(), track);\r\n  }\r\n\r\n  getFirstTrack(media) {\r\n    let result;\r\n    this.tracks.forEach((track) => {\r\n      if (track.getMedia().toLowerCase() === media.toLowerCase()) {\r\n        result = track;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getTracks() {\r\n    return this.tracks;\r\n  }\r\n\r\n  removeAllTracks() {\r\n    this.tracks.clear();\r\n  }\r\n\r\n  getTrack(trackId) {\r\n    return this.tracks.get(trackId);\r\n  }\r\n}\r\n\r\nmodule.exports = StreamInfo;\r\n","class TrackInfo {\r\n  constructor(media, id) {\r\n    this.media = media;\r\n    this.id = id;\r\n    this.ssrcs = [];\r\n    this.groups = [];\r\n    this.encodings = [];\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new TrackInfo(this.media, this.id);\r\n    if (this.mediaId) {\r\n      cloned.setMediaId(this.mediaId);\r\n    }\r\n    this.ssrcs.forEach((ssrc) => {\r\n      cloned.addSSRC(ssrc);\r\n    });\r\n    this.groups.forEach((group) => {\r\n      cloned.addSourceGroup(group.clone());\r\n    });\r\n    this.encodings.forEach((encoding) => {\r\n      const alternatives = [];\r\n      encoding.forEach((entry) => {\r\n        alternatives.push(entry.cloned());\r\n      });\r\n      cloned.addAlternativeEncoding(alternatives);\r\n    });\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      media: this.media,\r\n      id: this.id,\r\n      ssrcs: [],\r\n      groups: [],\r\n      encodings: [],\r\n    };\r\n    if (this.mediaId) {\r\n      plain.mediaId = this.mediaId;\r\n    }\r\n    this.ssrcs.forEach((ssrc) => {\r\n      plain.ssrcs.push(ssrc);\r\n    });\r\n    this.groups.forEach((group) => {\r\n      plain.groups.push(group.plain());\r\n    });\r\n    this.encodings.forEach((encoding) => {\r\n      const alternatives = [];\r\n      encoding.forEach((entry) => {\r\n        alternatives.push(entry.plain());\r\n      });\r\n      plain.encodings.push(alternatives);\r\n    });\r\n    return plain;\r\n  }\r\n\r\n  getMedia() {\r\n    return this.media;\r\n  }\r\n\r\n  setMediaId(mediaId) {\r\n    this.mediaId = mediaId;\r\n  }\r\n\r\n  getMediaId() {\r\n    return this.mediaId;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  addSSRC(ssrc) {\r\n    this.ssrcs.push(ssrc);\r\n  }\r\n\r\n  getSSRCs() {\r\n    return this.ssrcs;\r\n  }\r\n\r\n  addSourceGroup(group) {\r\n    this.groups.push(group);\r\n  }\r\n\r\n  getSourceGroup(schematics) {\r\n    let result;\r\n    this.groups.forEach((group) => {\r\n      if (group.getSemantics().toLowerCase() === schematics.toLowerCase()) {\r\n        result = group;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getSourceGroups() {\r\n    return this.groups;\r\n  }\r\n\r\n  hasSourceGroup(schematics) {\r\n    let result = false;\r\n    this.groups.forEach((group) => {\r\n      if (group.getSemantics().toLowerCase() === schematics.toLowerCase()) {\r\n        result = true;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getEncodings() {\r\n    return this.encodings;\r\n  }\r\n\r\n  addAlternaticeEncodings(alternatives) {\r\n    this.encodings.push(alternatives);\r\n  }\r\n\r\n  setEncodings(encodings) {\r\n    this.encodings = encodings;\r\n  }\r\n}\r\n\r\nmodule.exports = TrackInfo;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.io=e():t.io=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t,e){\"object\"===(\"undefined\"==typeof t?\"undefined\":o(t))&&(e=t,t=void 0),e=e||{};var n,r=i(t),s=r.source,u=r.id,h=r.path,f=p[u]&&h in p[u].nsps,l=e.forceNew||e[\"force new connection\"]||!1===e.multiplex||f;return l?(c(\"ignoring socket cache for %s\",s),n=a(s,e)):(p[u]||(c(\"new io instance for %s\",s),p[u]=a(s,e)),n=p[u]),r.query&&!e.query&&(e.query=r.query),n.socket(r.path,e)}var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=n(1),s=n(7),a=n(13),c=n(3)(\"socket.io-client\");t.exports=e=r;var p=e.managers={};e.protocol=s.protocol,e.connect=r,e.Manager=n(13),e.Socket=n(39)},function(t,e,n){(function(e){\"use strict\";function r(t,n){var r=t;n=n||e.location,null==t&&(t=n.protocol+\"//\"+n.host),\"string\"==typeof t&&(\"/\"===t.charAt(0)&&(t=\"/\"===t.charAt(1)?n.protocol+t:n.host+t),/^(https?|wss?):\\/\\//.test(t)||(i(\"protocol-less url %s\",t),t=\"undefined\"!=typeof n?n.protocol+\"//\"+t:\"https://\"+t),i(\"parse %s\",t),r=o(t)),r.port||(/^(http|ws)$/.test(r.protocol)?r.port=\"80\":/^(http|ws)s$/.test(r.protocol)&&(r.port=\"443\")),r.path=r.path||\"/\";var s=r.host.indexOf(\":\")!==-1,a=s?\"[\"+r.host+\"]\":r.host;return r.id=r.protocol+\"://\"+a+\":\"+r.port,r.href=r.protocol+\"://\"+a+(n&&n.port===r.port?\"\":\":\"+r.port),r}var o=n(2),i=n(3)(\"socket.io-client:url\");t.exports=r}).call(e,function(){return this}())},function(t,e){var n=/^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,r=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];t.exports=function(t){var e=t,o=t.indexOf(\"[\"),i=t.indexOf(\"]\");o!=-1&&i!=-1&&(t=t.substring(0,o)+t.substring(o,i).replace(/:/g,\";\")+t.substring(i,t.length));for(var s=n.exec(t||\"\"),a={},c=14;c--;)a[r[c]]=s[c]||\"\";return o!=-1&&i!=-1&&(a.source=e,a.host=a.host.substring(1,a.host.length-1).replace(/;/g,\":\"),a.authority=a.authority.replace(\"[\",\"\").replace(\"]\",\"\").replace(/;/g,\":\"),a.ipv6uri=!0),a}},function(t,e,n){(function(r){function o(){return!(\"undefined\"==typeof window||!window.process||\"renderer\"!==window.process.type)||(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))}function i(t){var n=this.useColors;if(t[0]=(n?\"%c\":\"\")+this.namespace+(n?\" %c\":\" \")+t[0]+(n?\"%c \":\" \")+\"+\"+e.humanize(this.diff),n){var r=\"color: \"+this.color;t.splice(1,0,r,\"color: inherit\");var o=0,i=0;t[0].replace(/%[a-zA-Z%]/g,function(t){\"%%\"!==t&&(o++,\"%c\"===t&&(i=o))}),t.splice(i,0,r)}}function s(){return\"object\"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function a(t){try{null==t?e.storage.removeItem(\"debug\"):e.storage.debug=t}catch(n){}}function c(){var t;try{t=e.storage.debug}catch(n){}return!t&&\"undefined\"!=typeof r&&\"env\"in r&&(t=r.env.DEBUG),t}function p(){try{return window.localStorage}catch(t){}}e=t.exports=n(5),e.log=s,e.formatArgs=i,e.save=a,e.load=c,e.useColors=o,e.storage=\"undefined\"!=typeof chrome&&\"undefined\"!=typeof chrome.storage?chrome.storage.local:p(),e.colors=[\"lightseagreen\",\"forestgreen\",\"goldenrod\",\"dodgerblue\",\"darkorchid\",\"crimson\"],e.formatters.j=function(t){try{return JSON.stringify(t)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}},e.enable(c())}).call(e,n(4))},function(t,e){function n(){throw new Error(\"setTimeout has not been defined\")}function r(){throw new Error(\"clearTimeout has not been defined\")}function o(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(h===clearTimeout)return clearTimeout(t);if((h===r||!h)&&clearTimeout)return h=clearTimeout,clearTimeout(t);try{return h(t)}catch(e){try{return h.call(null,t)}catch(e){return h.call(this,t)}}}function s(){y&&l&&(y=!1,l.length?d=l.concat(d):m=-1,d.length&&a())}function a(){if(!y){var t=o(s);y=!0;for(var e=d.length;e;){for(l=d,d=[];++m<e;)l&&l[m].run();m=-1,e=d.length}l=null,y=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function p(){}var u,h,f=t.exports={};!function(){try{u=\"function\"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{h=\"function\"==typeof clearTimeout?clearTimeout:r}catch(t){h=r}}();var l,d=[],y=!1,m=-1;f.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];d.push(new c(t,e)),1!==d.length||y||o(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},f.title=\"browser\",f.browser=!0,f.env={},f.argv=[],f.version=\"\",f.versions={},f.on=p,f.addListener=p,f.once=p,f.off=p,f.removeListener=p,f.removeAllListeners=p,f.emit=p,f.prependListener=p,f.prependOnceListener=p,f.listeners=function(t){return[]},f.binding=function(t){throw new Error(\"process.binding is not supported\")},f.cwd=function(){return\"/\"},f.chdir=function(t){throw new Error(\"process.chdir is not supported\")},f.umask=function(){return 0}},function(t,e,n){function r(t){var n,r=0;for(n in t)r=(r<<5)-r+t.charCodeAt(n),r|=0;return e.colors[Math.abs(r)%e.colors.length]}function o(t){function n(){if(n.enabled){var t=n,r=+new Date,o=r-(p||r);t.diff=o,t.prev=p,t.curr=r,p=r;for(var i=new Array(arguments.length),s=0;s<i.length;s++)i[s]=arguments[s];i[0]=e.coerce(i[0]),\"string\"!=typeof i[0]&&i.unshift(\"%O\");var a=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,function(n,r){if(\"%%\"===n)return n;a++;var o=e.formatters[r];if(\"function\"==typeof o){var s=i[a];n=o.call(t,s),i.splice(a,1),a--}return n}),e.formatArgs.call(t,i);var c=n.log||e.log||console.log.bind(console);c.apply(t,i)}}return n.namespace=t,n.enabled=e.enabled(t),n.useColors=e.useColors(),n.color=r(t),\"function\"==typeof e.init&&e.init(n),n}function i(t){e.save(t),e.names=[],e.skips=[];for(var n=(\"string\"==typeof t?t:\"\").split(/[\\s,]+/),r=n.length,o=0;o<r;o++)n[o]&&(t=n[o].replace(/\\*/g,\".*?\"),\"-\"===t[0]?e.skips.push(new RegExp(\"^\"+t.substr(1)+\"$\")):e.names.push(new RegExp(\"^\"+t+\"$\")))}function s(){e.enable(\"\")}function a(t){var n,r;for(n=0,r=e.skips.length;n<r;n++)if(e.skips[n].test(t))return!1;for(n=0,r=e.names.length;n<r;n++)if(e.names[n].test(t))return!0;return!1}function c(t){return t instanceof Error?t.stack||t.message:t}e=t.exports=o.debug=o[\"default\"]=o,e.coerce=c,e.disable=s,e.enable=i,e.enabled=a,e.humanize=n(6),e.names=[],e.skips=[],e.formatters={};var p},function(t,e){function n(t){if(t=String(t),!(t.length>100)){var e=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if(e){var n=parseFloat(e[1]),r=(e[2]||\"ms\").toLowerCase();switch(r){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return n*u;case\"days\":case\"day\":case\"d\":return n*p;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return n*c;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return n*a;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return n*s;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return n;default:return}}}}function r(t){return t>=p?Math.round(t/p)+\"d\":t>=c?Math.round(t/c)+\"h\":t>=a?Math.round(t/a)+\"m\":t>=s?Math.round(t/s)+\"s\":t+\"ms\"}function o(t){return i(t,p,\"day\")||i(t,c,\"hour\")||i(t,a,\"minute\")||i(t,s,\"second\")||t+\" ms\"}function i(t,e,n){if(!(t<e))return t<1.5*e?Math.floor(t/e)+\" \"+n:Math.ceil(t/e)+\" \"+n+\"s\"}var s=1e3,a=60*s,c=60*a,p=24*c,u=365.25*p;t.exports=function(t,e){e=e||{};var i=typeof t;if(\"string\"===i&&t.length>0)return n(t);if(\"number\"===i&&isNaN(t)===!1)return e[\"long\"]?o(t):r(t);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(t))}},function(t,e,n){function r(){}function o(t){var n=\"\"+t.type;return e.BINARY_EVENT!==t.type&&e.BINARY_ACK!==t.type||(n+=t.attachments+\"-\"),t.nsp&&\"/\"!==t.nsp&&(n+=t.nsp+\",\"),null!=t.id&&(n+=t.id),null!=t.data&&(n+=JSON.stringify(t.data)),h(\"encoded %j as %s\",t,n),n}function i(t,e){function n(t){var n=d.deconstructPacket(t),r=o(n.packet),i=n.buffers;i.unshift(r),e(i)}d.removeBlobs(t,n)}function s(){this.reconstructor=null}function a(t){var n=0,r={type:Number(t.charAt(0))};if(null==e.types[r.type])return u();if(e.BINARY_EVENT===r.type||e.BINARY_ACK===r.type){for(var o=\"\";\"-\"!==t.charAt(++n)&&(o+=t.charAt(n),n!=t.length););if(o!=Number(o)||\"-\"!==t.charAt(n))throw new Error(\"Illegal attachments\");r.attachments=Number(o)}if(\"/\"===t.charAt(n+1))for(r.nsp=\"\";++n;){var i=t.charAt(n);if(\",\"===i)break;if(r.nsp+=i,n===t.length)break}else r.nsp=\"/\";var s=t.charAt(n+1);if(\"\"!==s&&Number(s)==s){for(r.id=\"\";++n;){var i=t.charAt(n);if(null==i||Number(i)!=i){--n;break}if(r.id+=t.charAt(n),n===t.length)break}r.id=Number(r.id)}return t.charAt(++n)&&(r=c(r,t.substr(n))),h(\"decoded %s as %j\",t,r),r}function c(t,e){try{t.data=JSON.parse(e)}catch(n){return u()}return t}function p(t){this.reconPack=t,this.buffers=[]}function u(){return{type:e.ERROR,data:\"parser error\"}}var h=n(3)(\"socket.io-parser\"),f=n(8),l=n(9),d=n(11),y=n(12);e.protocol=4,e.types=[\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"ACK\",\"ERROR\",\"BINARY_EVENT\",\"BINARY_ACK\"],e.CONNECT=0,e.DISCONNECT=1,e.EVENT=2,e.ACK=3,e.ERROR=4,e.BINARY_EVENT=5,e.BINARY_ACK=6,e.Encoder=r,e.Decoder=s,r.prototype.encode=function(t,n){if(t.type!==e.EVENT&&t.type!==e.ACK||!l(t.data)||(t.type=t.type===e.EVENT?e.BINARY_EVENT:e.BINARY_ACK),h(\"encoding packet %j\",t),e.BINARY_EVENT===t.type||e.BINARY_ACK===t.type)i(t,n);else{var r=o(t);n([r])}},f(s.prototype),s.prototype.add=function(t){var n;if(\"string\"==typeof t)n=a(t),e.BINARY_EVENT===n.type||e.BINARY_ACK===n.type?(this.reconstructor=new p(n),0===this.reconstructor.reconPack.attachments&&this.emit(\"decoded\",n)):this.emit(\"decoded\",n);else{if(!y(t)&&!t.base64)throw new Error(\"Unknown type: \"+t);if(!this.reconstructor)throw new Error(\"got binary data when not reconstructing a packet\");n=this.reconstructor.takeBinaryData(t),n&&(this.reconstructor=null,this.emit(\"decoded\",n))}},s.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},p.prototype.takeBinaryData=function(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){var e=d.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null},p.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},function(t,e,n){function r(t){if(t)return o(t)}function o(t){for(var e in r.prototype)t[e]=r.prototype[e];return t}t.exports=r,r.prototype.on=r.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+t]=this._callbacks[\"$\"+t]||[]).push(e),this},r.prototype.once=function(t,e){function n(){this.off(t,n),e.apply(this,arguments)}return n.fn=e,this.on(t,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n=this._callbacks[\"$\"+t];if(!n)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+t],this;for(var r,o=0;o<n.length;o++)if(r=n[o],r===e||r.fn===e){n.splice(o,1);break}return this},r.prototype.emit=function(t){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),n=this._callbacks[\"$\"+t];if(n){n=n.slice(0);for(var r=0,o=n.length;r<o;++r)n[r].apply(this,e)}return this},r.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+t]||[]},r.prototype.hasListeners=function(t){return!!this.listeners(t).length}},function(t,e,n){(function(e){function r(t){if(!t||\"object\"!=typeof t)return!1;if(o(t)){for(var n=0,i=t.length;n<i;n++)if(r(t[n]))return!0;return!1}if(\"function\"==typeof e.Buffer&&e.Buffer.isBuffer&&e.Buffer.isBuffer(t)||\"function\"==typeof e.ArrayBuffer&&t instanceof ArrayBuffer||s&&t instanceof Blob||a&&t instanceof File)return!0;if(t.toJSON&&\"function\"==typeof t.toJSON&&1===arguments.length)return r(t.toJSON(),!0);for(var c in t)if(Object.prototype.hasOwnProperty.call(t,c)&&r(t[c]))return!0;return!1}var o=n(10),i=Object.prototype.toString,s=\"function\"==typeof e.Blob||\"[object BlobConstructor]\"===i.call(e.Blob),a=\"function\"==typeof e.File||\"[object FileConstructor]\"===i.call(e.File);t.exports=r}).call(e,function(){return this}())},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},function(t,e,n){(function(t){function r(t,e){if(!t)return t;if(s(t)){var n={_placeholder:!0,num:e.length};return e.push(t),n}if(i(t)){for(var o=new Array(t.length),a=0;a<t.length;a++)o[a]=r(t[a],e);return o}if(\"object\"==typeof t&&!(t instanceof Date)){var o={};for(var c in t)o[c]=r(t[c],e);return o}return t}function o(t,e){if(!t)return t;if(t&&t._placeholder)return e[t.num];if(i(t))for(var n=0;n<t.length;n++)t[n]=o(t[n],e);else if(\"object\"==typeof t)for(var r in t)t[r]=o(t[r],e);return t}var i=n(10),s=n(12),a=Object.prototype.toString,c=\"function\"==typeof t.Blob||\"[object BlobConstructor]\"===a.call(t.Blob),p=\"function\"==typeof t.File||\"[object FileConstructor]\"===a.call(t.File);e.deconstructPacket=function(t){var e=[],n=t.data,o=t;return o.data=r(n,e),o.attachments=e.length,{packet:o,buffers:e}},e.reconstructPacket=function(t,e){return t.data=o(t.data,e),t.attachments=void 0,t},e.removeBlobs=function(t,e){function n(t,a,u){if(!t)return t;if(c&&t instanceof Blob||p&&t instanceof File){r++;var h=new FileReader;h.onload=function(){u?u[a]=this.result:o=this.result,--r||e(o)},h.readAsArrayBuffer(t)}else if(i(t))for(var f=0;f<t.length;f++)n(t[f],f,t);else if(\"object\"==typeof t&&!s(t))for(var l in t)n(t[l],l,t)}var r=0,o=t;n(o),r||e(o)}}).call(e,function(){return this}())},function(t,e){(function(e){function n(t){return e.Buffer&&e.Buffer.isBuffer(t)||e.ArrayBuffer&&t instanceof ArrayBuffer}t.exports=n}).call(e,function(){return this}())},function(t,e,n){\"use strict\";function r(t,e){if(!(this instanceof r))return new r(t,e);t&&\"object\"===(\"undefined\"==typeof t?\"undefined\":o(t))&&(e=t,t=void 0),e=e||{},e.path=e.path||\"/socket.io\",this.nsps={},this.subs=[],this.opts=e,this.reconnection(e.reconnection!==!1),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(e.randomizationFactor||.5),this.backoff=new l({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this.readyState=\"closed\",this.uri=t,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var n=e.parser||c;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this.autoConnect=e.autoConnect!==!1,this.autoConnect&&this.open()}var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=n(14),s=n(39),a=n(8),c=n(7),p=n(41),u=n(42),h=n(3)(\"socket.io-client:manager\"),f=n(37),l=n(43),d=Object.prototype.hasOwnProperty;t.exports=r,r.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var t in this.nsps)d.call(this.nsps,t)&&this.nsps[t].emit.apply(this.nsps[t],arguments)},r.prototype.updateSocketIds=function(){for(var t in this.nsps)d.call(this.nsps,t)&&(this.nsps[t].id=this.generateId(t))},r.prototype.generateId=function(t){return(\"/\"===t?\"\":t+\"#\")+this.engine.id},a(r.prototype),r.prototype.reconnection=function(t){return arguments.length?(this._reconnection=!!t,this):this._reconnection},r.prototype.reconnectionAttempts=function(t){return arguments.length?(this._reconnectionAttempts=t,this):this._reconnectionAttempts},r.prototype.reconnectionDelay=function(t){return arguments.length?(this._reconnectionDelay=t,this.backoff&&this.backoff.setMin(t),this):this._reconnectionDelay},r.prototype.randomizationFactor=function(t){return arguments.length?(this._randomizationFactor=t,this.backoff&&this.backoff.setJitter(t),this):this._randomizationFactor},r.prototype.reconnectionDelayMax=function(t){return arguments.length?(this._reconnectionDelayMax=t,this.backoff&&this.backoff.setMax(t),this):this._reconnectionDelayMax},r.prototype.timeout=function(t){return arguments.length?(this._timeout=t,this):this._timeout},r.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},r.prototype.open=r.prototype.connect=function(t,e){if(h(\"readyState %s\",this.readyState),~this.readyState.indexOf(\"open\"))return this;h(\"opening %s\",this.uri),this.engine=i(this.uri,this.opts);var n=this.engine,r=this;this.readyState=\"opening\",this.skipReconnect=!1;var o=p(n,\"open\",function(){r.onopen(),t&&t()}),s=p(n,\"error\",function(e){if(h(\"connect_error\"),r.cleanup(),r.readyState=\"closed\",r.emitAll(\"connect_error\",e),t){var n=new Error(\"Connection error\");n.data=e,t(n)}else r.maybeReconnectOnOpen()});if(!1!==this._timeout){var a=this._timeout;h(\"connect attempt will timeout after %d\",a);var c=setTimeout(function(){h(\"connect attempt timed out after %d\",a),o.destroy(),n.close(),n.emit(\"error\",\"timeout\"),r.emitAll(\"connect_timeout\",a)},a);this.subs.push({destroy:function(){clearTimeout(c)}})}return this.subs.push(o),this.subs.push(s),this},r.prototype.onopen=function(){h(\"open\"),this.cleanup(),this.readyState=\"open\",this.emit(\"open\");var t=this.engine;this.subs.push(p(t,\"data\",u(this,\"ondata\"))),this.subs.push(p(t,\"ping\",u(this,\"onping\"))),this.subs.push(p(t,\"pong\",u(this,\"onpong\"))),this.subs.push(p(t,\"error\",u(this,\"onerror\"))),this.subs.push(p(t,\"close\",u(this,\"onclose\"))),this.subs.push(p(this.decoder,\"decoded\",u(this,\"ondecoded\")))},r.prototype.onping=function(){this.lastPing=new Date,this.emitAll(\"ping\")},r.prototype.onpong=function(){this.emitAll(\"pong\",new Date-this.lastPing)},r.prototype.ondata=function(t){this.decoder.add(t)},r.prototype.ondecoded=function(t){this.emit(\"packet\",t)},r.prototype.onerror=function(t){h(\"error\",t),this.emitAll(\"error\",t)},r.prototype.socket=function(t,e){function n(){~f(o.connecting,r)||o.connecting.push(r)}var r=this.nsps[t];if(!r){r=new s(this,t,e),this.nsps[t]=r;var o=this;r.on(\"connecting\",n),r.on(\"connect\",function(){r.id=o.generateId(t)}),this.autoConnect&&n()}return r},r.prototype.destroy=function(t){var e=f(this.connecting,t);~e&&this.connecting.splice(e,1),this.connecting.length||this.close()},r.prototype.packet=function(t){h(\"writing packet %j\",t);var e=this;t.query&&0===t.type&&(t.nsp+=\"?\"+t.query),e.encoding?e.packetBuffer.push(t):(e.encoding=!0,this.encoder.encode(t,function(n){for(var r=0;r<n.length;r++)e.engine.write(n[r],t.options);e.encoding=!1,e.processPacketQueue()}))},r.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var t=this.packetBuffer.shift();this.packet(t)}},r.prototype.cleanup=function(){h(\"cleanup\");for(var t=this.subs.length,e=0;e<t;e++){var n=this.subs.shift();n.destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},r.prototype.close=r.prototype.disconnect=function(){h(\"disconnect\"),this.skipReconnect=!0,this.reconnecting=!1,\"opening\"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.engine&&this.engine.close()},r.prototype.onclose=function(t){h(\"onclose\"),this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.emit(\"close\",t),this._reconnection&&!this.skipReconnect&&this.reconnect()},r.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var t=this;if(this.backoff.attempts>=this._reconnectionAttempts)h(\"reconnect failed\"),this.backoff.reset(),this.emitAll(\"reconnect_failed\"),this.reconnecting=!1;else{var e=this.backoff.duration();h(\"will wait %dms before reconnect attempt\",e),this.reconnecting=!0;var n=setTimeout(function(){t.skipReconnect||(h(\"attempting reconnect\"),t.emitAll(\"reconnect_attempt\",t.backoff.attempts),t.emitAll(\"reconnecting\",t.backoff.attempts),t.skipReconnect||t.open(function(e){e?(h(\"reconnect attempt error\"),t.reconnecting=!1,t.reconnect(),t.emitAll(\"reconnect_error\",e.data)):(h(\"reconnect success\"),t.onreconnect())}))},e);this.subs.push({destroy:function(){clearTimeout(n)}})}},r.prototype.onreconnect=function(){var t=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll(\"reconnect\",t)}},function(t,e,n){t.exports=n(15)},function(t,e,n){t.exports=n(16),t.exports.parser=n(23)},function(t,e,n){(function(e){function r(t,n){if(!(this instanceof r))return new r(t,n);n=n||{},t&&\"object\"==typeof t&&(n=t,t=null),t?(t=u(t),n.hostname=t.host,n.secure=\"https\"===t.protocol||\"wss\"===t.protocol,n.port=t.port,t.query&&(n.query=t.query)):n.host&&(n.hostname=u(n.host).host),this.secure=null!=n.secure?n.secure:e.location&&\"https:\"===location.protocol,n.hostname&&!n.port&&(n.port=this.secure?\"443\":\"80\"),this.agent=n.agent||!1,this.hostname=n.hostname||(e.location?location.hostname:\"localhost\"),this.port=n.port||(e.location&&location.port?location.port:this.secure?443:80),this.query=n.query||{},\"string\"==typeof this.query&&(this.query=f.decode(this.query)),this.upgrade=!1!==n.upgrade,this.path=(n.path||\"/engine.io\").replace(/\\/$/,\"\")+\"/\",this.forceJSONP=!!n.forceJSONP,this.jsonp=!1!==n.jsonp,this.forceBase64=!!n.forceBase64,this.enablesXDR=!!n.enablesXDR,this.timestampParam=n.timestampParam||\"t\",this.timestampRequests=n.timestampRequests,this.transports=n.transports||[\"polling\",\"websocket\"],this.transportOptions=n.transportOptions||{},this.readyState=\"\",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=n.policyPort||843,this.rememberUpgrade=n.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=n.onlyBinaryUpgrades,this.perMessageDeflate=!1!==n.perMessageDeflate&&(n.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=n.pfx||null,this.key=n.key||null,this.passphrase=n.passphrase||null,this.cert=n.cert||null,this.ca=n.ca||null,this.ciphers=n.ciphers||null,this.rejectUnauthorized=void 0===n.rejectUnauthorized||n.rejectUnauthorized,this.forceNode=!!n.forceNode;var o=\"object\"==typeof e&&e;o.global===o&&(n.extraHeaders&&Object.keys(n.extraHeaders).length>0&&(this.extraHeaders=n.extraHeaders),n.localAddress&&(this.localAddress=n.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,this.open()}function o(t){var e={};for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}var i=n(17),s=n(8),a=n(3)(\"engine.io-client:socket\"),c=n(37),p=n(23),u=n(2),h=n(38),f=n(31);t.exports=r,r.priorWebsocketSuccess=!1,s(r.prototype),r.protocol=p.protocol,r.Socket=r,r.Transport=n(22),r.transports=n(17),r.parser=n(23),r.prototype.createTransport=function(t){a('creating transport \"%s\"',t);var e=o(this.query);e.EIO=p.protocol,e.transport=t;var n=this.transportOptions[t]||{};this.id&&(e.sid=this.id);var r=new i[t]({query:e,socket:this,agent:n.agent||this.agent,hostname:n.hostname||this.hostname,port:n.port||this.port,secure:n.secure||this.secure,path:n.path||this.path,forceJSONP:n.forceJSONP||this.forceJSONP,jsonp:n.jsonp||this.jsonp,forceBase64:n.forceBase64||this.forceBase64,enablesXDR:n.enablesXDR||this.enablesXDR,timestampRequests:n.timestampRequests||this.timestampRequests,timestampParam:n.timestampParam||this.timestampParam,policyPort:n.policyPort||this.policyPort,pfx:n.pfx||this.pfx,key:n.key||this.key,passphrase:n.passphrase||this.passphrase,cert:n.cert||this.cert,ca:n.ca||this.ca,ciphers:n.ciphers||this.ciphers,rejectUnauthorized:n.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:n.perMessageDeflate||this.perMessageDeflate,extraHeaders:n.extraHeaders||this.extraHeaders,forceNode:n.forceNode||this.forceNode,localAddress:n.localAddress||this.localAddress,requestTimeout:n.requestTimeout||this.requestTimeout,protocols:n.protocols||void 0});return r},r.prototype.open=function(){var t;if(this.rememberUpgrade&&r.priorWebsocketSuccess&&this.transports.indexOf(\"websocket\")!==-1)t=\"websocket\";else{if(0===this.transports.length){var e=this;return void setTimeout(function(){e.emit(\"error\",\"No transports available\")},0)}t=this.transports[0]}this.readyState=\"opening\";try{t=this.createTransport(t)}catch(n){return this.transports.shift(),void this.open()}t.open(),this.setTransport(t)},r.prototype.setTransport=function(t){a(\"setting transport %s\",t.name);var e=this;this.transport&&(a(\"clearing existing transport %s\",this.transport.name),this.transport.removeAllListeners()),this.transport=t,t.on(\"drain\",function(){e.onDrain()}).on(\"packet\",function(t){e.onPacket(t)}).on(\"error\",function(t){e.onError(t)}).on(\"close\",function(){e.onClose(\"transport close\")})},r.prototype.probe=function(t){function e(){if(f.onlyBinaryUpgrades){var e=!this.supportsBinary&&f.transport.supportsBinary;h=h||e}h||(a('probe transport \"%s\" opened',t),u.send([{type:\"ping\",data:\"probe\"}]),u.once(\"packet\",function(e){if(!h)if(\"pong\"===e.type&&\"probe\"===e.data){if(a('probe transport \"%s\" pong',t),f.upgrading=!0,f.emit(\"upgrading\",u),!u)return;r.priorWebsocketSuccess=\"websocket\"===u.name,a('pausing current transport \"%s\"',f.transport.name),f.transport.pause(function(){h||\"closed\"!==f.readyState&&(a(\"changing transport and sending upgrade packet\"),p(),f.setTransport(u),u.send([{type:\"upgrade\"}]),f.emit(\"upgrade\",u),u=null,f.upgrading=!1,f.flush())})}else{a('probe transport \"%s\" failed',t);var n=new Error(\"probe error\");n.transport=u.name,f.emit(\"upgradeError\",n)}}))}function n(){h||(h=!0,p(),u.close(),u=null)}function o(e){var r=new Error(\"probe error: \"+e);r.transport=u.name,n(),a('probe transport \"%s\" failed because of error: %s',t,e),f.emit(\"upgradeError\",r)}function i(){o(\"transport closed\")}function s(){o(\"socket closed\")}function c(t){u&&t.name!==u.name&&(a('\"%s\" works - aborting \"%s\"',t.name,u.name),n())}function p(){u.removeListener(\"open\",e),u.removeListener(\"error\",o),u.removeListener(\"close\",i),f.removeListener(\"close\",s),f.removeListener(\"upgrading\",c)}a('probing transport \"%s\"',t);var u=this.createTransport(t,{probe:1}),h=!1,f=this;r.priorWebsocketSuccess=!1,u.once(\"open\",e),u.once(\"error\",o),u.once(\"close\",i),this.once(\"close\",s),this.once(\"upgrading\",c),u.open()},r.prototype.onOpen=function(){if(a(\"socket open\"),this.readyState=\"open\",r.priorWebsocketSuccess=\"websocket\"===this.transport.name,this.emit(\"open\"),this.flush(),\"open\"===this.readyState&&this.upgrade&&this.transport.pause){a(\"starting upgrade probes\");for(var t=0,e=this.upgrades.length;t<e;t++)this.probe(this.upgrades[t])}},r.prototype.onPacket=function(t){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState)switch(a('socket receive: type \"%s\", data \"%s\"',t.type,t.data),this.emit(\"packet\",t),this.emit(\"heartbeat\"),t.type){case\"open\":this.onHandshake(h(t.data));break;case\"pong\":this.setPing(),this.emit(\"pong\");break;case\"error\":var e=new Error(\"server error\");e.code=t.data,this.onError(e);break;case\"message\":this.emit(\"data\",t.data),this.emit(\"message\",t.data)}else a('packet received with socket readyState \"%s\"',this.readyState)},r.prototype.onHandshake=function(t){this.emit(\"handshake\",t),this.id=t.sid,this.transport.query.sid=t.sid,this.upgrades=this.filterUpgrades(t.upgrades),this.pingInterval=t.pingInterval,this.pingTimeout=t.pingTimeout,this.onOpen(),\"closed\"!==this.readyState&&(this.setPing(),this.removeListener(\"heartbeat\",this.onHeartbeat),this.on(\"heartbeat\",this.onHeartbeat))},r.prototype.onHeartbeat=function(t){clearTimeout(this.pingTimeoutTimer);var e=this;e.pingTimeoutTimer=setTimeout(function(){\"closed\"!==e.readyState&&e.onClose(\"ping timeout\")},t||e.pingInterval+e.pingTimeout)},r.prototype.setPing=function(){var t=this;clearTimeout(t.pingIntervalTimer),t.pingIntervalTimer=setTimeout(function(){a(\"writing ping packet - expecting pong within %sms\",t.pingTimeout),t.ping(),t.onHeartbeat(t.pingTimeout)},t.pingInterval)},r.prototype.ping=function(){var t=this;this.sendPacket(\"ping\",function(){t.emit(\"ping\")})},r.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit(\"drain\"):this.flush()},r.prototype.flush=function(){\"closed\"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(a(\"flushing %d packets in socket\",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit(\"flush\"))},r.prototype.write=r.prototype.send=function(t,e,n){return this.sendPacket(\"message\",t,e,n),this},r.prototype.sendPacket=function(t,e,n,r){if(\"function\"==typeof e&&(r=e,e=void 0),\"function\"==typeof n&&(r=n,n=null),\"closing\"!==this.readyState&&\"closed\"!==this.readyState){n=n||{},n.compress=!1!==n.compress;var o={type:t,data:e,options:n};this.emit(\"packetCreate\",o),this.writeBuffer.push(o),r&&this.once(\"flush\",r),this.flush()}},r.prototype.close=function(){function t(){r.onClose(\"forced close\"),a(\"socket closing - telling transport to close\"),r.transport.close()}function e(){r.removeListener(\"upgrade\",e),r.removeListener(\"upgradeError\",e),t()}function n(){r.once(\"upgrade\",e),r.once(\"upgradeError\",e)}if(\"opening\"===this.readyState||\"open\"===this.readyState){this.readyState=\"closing\";var r=this;this.writeBuffer.length?this.once(\"drain\",function(){this.upgrading?n():t()}):this.upgrading?n():t()}return this},r.prototype.onError=function(t){a(\"socket error %j\",t),r.priorWebsocketSuccess=!1,this.emit(\"error\",t),this.onClose(\"transport error\",t)},r.prototype.onClose=function(t,e){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState){a('socket close with reason: \"%s\"',t);var n=this;clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners(\"close\"),this.transport.close(),this.transport.removeAllListeners(),this.readyState=\"closed\",this.id=null,this.emit(\"close\",t,e),n.writeBuffer=[],n.prevBufferLen=0}},r.prototype.filterUpgrades=function(t){for(var e=[],n=0,r=t.length;n<r;n++)~c(this.transports,t[n])&&e.push(t[n]);return e}}).call(e,function(){return this}())},function(t,e,n){(function(t){function r(e){var n,r=!1,a=!1,c=!1!==e.jsonp;if(t.location){var p=\"https:\"===location.protocol,u=location.port;u||(u=p?443:80),r=e.hostname!==location.hostname||u!==e.port,a=e.secure!==p}if(e.xdomain=r,e.xscheme=a,n=new o(e),\"open\"in n&&!e.forceJSONP)return new i(e);if(!c)throw new Error(\"JSONP disabled\");return new s(e)}var o=n(18),i=n(20),s=n(34),a=n(35);e.polling=r,e.websocket=a}).call(e,function(){return this}())},function(t,e,n){(function(e){var r=n(19);t.exports=function(t){var n=t.xdomain,o=t.xscheme,i=t.enablesXDR;try{if(\"undefined\"!=typeof XMLHttpRequest&&(!n||r))return new XMLHttpRequest}catch(s){}try{if(\"undefined\"!=typeof XDomainRequest&&!o&&i)return new XDomainRequest}catch(s){}if(!n)try{\r\nreturn new(e[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(s){}}}).call(e,function(){return this}())},function(t,e){try{t.exports=\"undefined\"!=typeof XMLHttpRequest&&\"withCredentials\"in new XMLHttpRequest}catch(n){t.exports=!1}},function(t,e,n){(function(e){function r(){}function o(t){if(c.call(this,t),this.requestTimeout=t.requestTimeout,this.extraHeaders=t.extraHeaders,e.location){var n=\"https:\"===location.protocol,r=location.port;r||(r=n?443:80),this.xd=t.hostname!==e.location.hostname||r!==t.port,this.xs=t.secure!==n}}function i(t){this.method=t.method||\"GET\",this.uri=t.uri,this.xd=!!t.xd,this.xs=!!t.xs,this.async=!1!==t.async,this.data=void 0!==t.data?t.data:null,this.agent=t.agent,this.isBinary=t.isBinary,this.supportsBinary=t.supportsBinary,this.enablesXDR=t.enablesXDR,this.requestTimeout=t.requestTimeout,this.pfx=t.pfx,this.key=t.key,this.passphrase=t.passphrase,this.cert=t.cert,this.ca=t.ca,this.ciphers=t.ciphers,this.rejectUnauthorized=t.rejectUnauthorized,this.extraHeaders=t.extraHeaders,this.create()}function s(){for(var t in i.requests)i.requests.hasOwnProperty(t)&&i.requests[t].abort()}var a=n(18),c=n(21),p=n(8),u=n(32),h=n(3)(\"engine.io-client:polling-xhr\");t.exports=o,t.exports.Request=i,u(o,c),o.prototype.supportsBinary=!0,o.prototype.request=function(t){return t=t||{},t.uri=this.uri(),t.xd=this.xd,t.xs=this.xs,t.agent=this.agent||!1,t.supportsBinary=this.supportsBinary,t.enablesXDR=this.enablesXDR,t.pfx=this.pfx,t.key=this.key,t.passphrase=this.passphrase,t.cert=this.cert,t.ca=this.ca,t.ciphers=this.ciphers,t.rejectUnauthorized=this.rejectUnauthorized,t.requestTimeout=this.requestTimeout,t.extraHeaders=this.extraHeaders,new i(t)},o.prototype.doWrite=function(t,e){var n=\"string\"!=typeof t&&void 0!==t,r=this.request({method:\"POST\",data:t,isBinary:n}),o=this;r.on(\"success\",e),r.on(\"error\",function(t){o.onError(\"xhr post error\",t)}),this.sendXhr=r},o.prototype.doPoll=function(){h(\"xhr poll\");var t=this.request(),e=this;t.on(\"data\",function(t){e.onData(t)}),t.on(\"error\",function(t){e.onError(\"xhr poll error\",t)}),this.pollXhr=t},p(i.prototype),i.prototype.create=function(){var t={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};t.pfx=this.pfx,t.key=this.key,t.passphrase=this.passphrase,t.cert=this.cert,t.ca=this.ca,t.ciphers=this.ciphers,t.rejectUnauthorized=this.rejectUnauthorized;var n=this.xhr=new a(t),r=this;try{h(\"xhr open %s: %s\",this.method,this.uri),n.open(this.method,this.uri,this.async);try{if(this.extraHeaders){n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0);for(var o in this.extraHeaders)this.extraHeaders.hasOwnProperty(o)&&n.setRequestHeader(o,this.extraHeaders[o])}}catch(s){}if(\"POST\"===this.method)try{this.isBinary?n.setRequestHeader(\"Content-type\",\"application/octet-stream\"):n.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\")}catch(s){}try{n.setRequestHeader(\"Accept\",\"*/*\")}catch(s){}\"withCredentials\"in n&&(n.withCredentials=!0),this.requestTimeout&&(n.timeout=this.requestTimeout),this.hasXDR()?(n.onload=function(){r.onLoad()},n.onerror=function(){r.onError(n.responseText)}):n.onreadystatechange=function(){if(2===n.readyState){var t;try{t=n.getResponseHeader(\"Content-Type\")}catch(e){}\"application/octet-stream\"===t&&(n.responseType=\"arraybuffer\")}4===n.readyState&&(200===n.status||1223===n.status?r.onLoad():setTimeout(function(){r.onError(n.status)},0))},h(\"xhr data %s\",this.data),n.send(this.data)}catch(s){return void setTimeout(function(){r.onError(s)},0)}e.document&&(this.index=i.requestsCount++,i.requests[this.index]=this)},i.prototype.onSuccess=function(){this.emit(\"success\"),this.cleanup()},i.prototype.onData=function(t){this.emit(\"data\",t),this.onSuccess()},i.prototype.onError=function(t){this.emit(\"error\",t),this.cleanup(!0)},i.prototype.cleanup=function(t){if(\"undefined\"!=typeof this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=r:this.xhr.onreadystatechange=r,t)try{this.xhr.abort()}catch(n){}e.document&&delete i.requests[this.index],this.xhr=null}},i.prototype.onLoad=function(){var t;try{var e;try{e=this.xhr.getResponseHeader(\"Content-Type\")}catch(n){}t=\"application/octet-stream\"===e?this.xhr.response||this.xhr.responseText:this.xhr.responseText}catch(n){this.onError(n)}null!=t&&this.onData(t)},i.prototype.hasXDR=function(){return\"undefined\"!=typeof e.XDomainRequest&&!this.xs&&this.enablesXDR},i.prototype.abort=function(){this.cleanup()},i.requestsCount=0,i.requests={},e.document&&(e.attachEvent?e.attachEvent(\"onunload\",s):e.addEventListener&&e.addEventListener(\"beforeunload\",s,!1))}).call(e,function(){return this}())},function(t,e,n){function r(t){var e=t&&t.forceBase64;u&&!e||(this.supportsBinary=!1),o.call(this,t)}var o=n(22),i=n(31),s=n(23),a=n(32),c=n(33),p=n(3)(\"engine.io-client:polling\");t.exports=r;var u=function(){var t=n(18),e=new t({xdomain:!1});return null!=e.responseType}();a(r,o),r.prototype.name=\"polling\",r.prototype.doOpen=function(){this.poll()},r.prototype.pause=function(t){function e(){p(\"paused\"),n.readyState=\"paused\",t()}var n=this;if(this.readyState=\"pausing\",this.polling||!this.writable){var r=0;this.polling&&(p(\"we are currently polling - waiting to pause\"),r++,this.once(\"pollComplete\",function(){p(\"pre-pause polling complete\"),--r||e()})),this.writable||(p(\"we are currently writing - waiting to pause\"),r++,this.once(\"drain\",function(){p(\"pre-pause writing complete\"),--r||e()}))}else e()},r.prototype.poll=function(){p(\"polling\"),this.polling=!0,this.doPoll(),this.emit(\"poll\")},r.prototype.onData=function(t){var e=this;p(\"polling got data %s\",t);var n=function(t,n,r){return\"opening\"===e.readyState&&e.onOpen(),\"close\"===t.type?(e.onClose(),!1):void e.onPacket(t)};s.decodePayload(t,this.socket.binaryType,n),\"closed\"!==this.readyState&&(this.polling=!1,this.emit(\"pollComplete\"),\"open\"===this.readyState?this.poll():p('ignoring poll - transport state \"%s\"',this.readyState))},r.prototype.doClose=function(){function t(){p(\"writing close packet\"),e.write([{type:\"close\"}])}var e=this;\"open\"===this.readyState?(p(\"transport open - closing\"),t()):(p(\"transport not open - deferring close\"),this.once(\"open\",t))},r.prototype.write=function(t){var e=this;this.writable=!1;var n=function(){e.writable=!0,e.emit(\"drain\")};s.encodePayload(t,this.supportsBinary,function(t){e.doWrite(t,n)})},r.prototype.uri=function(){var t=this.query||{},e=this.secure?\"https\":\"http\",n=\"\";!1!==this.timestampRequests&&(t[this.timestampParam]=c()),this.supportsBinary||t.sid||(t.b64=1),t=i.encode(t),this.port&&(\"https\"===e&&443!==Number(this.port)||\"http\"===e&&80!==Number(this.port))&&(n=\":\"+this.port),t.length&&(t=\"?\"+t);var r=this.hostname.indexOf(\":\")!==-1;return e+\"://\"+(r?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+t}},function(t,e,n){function r(t){this.path=t.path,this.hostname=t.hostname,this.port=t.port,this.secure=t.secure,this.query=t.query,this.timestampParam=t.timestampParam,this.timestampRequests=t.timestampRequests,this.readyState=\"\",this.agent=t.agent||!1,this.socket=t.socket,this.enablesXDR=t.enablesXDR,this.pfx=t.pfx,this.key=t.key,this.passphrase=t.passphrase,this.cert=t.cert,this.ca=t.ca,this.ciphers=t.ciphers,this.rejectUnauthorized=t.rejectUnauthorized,this.forceNode=t.forceNode,this.extraHeaders=t.extraHeaders,this.localAddress=t.localAddress}var o=n(23),i=n(8);t.exports=r,i(r.prototype),r.prototype.onError=function(t,e){var n=new Error(t);return n.type=\"TransportError\",n.description=e,this.emit(\"error\",n),this},r.prototype.open=function(){return\"closed\"!==this.readyState&&\"\"!==this.readyState||(this.readyState=\"opening\",this.doOpen()),this},r.prototype.close=function(){return\"opening\"!==this.readyState&&\"open\"!==this.readyState||(this.doClose(),this.onClose()),this},r.prototype.send=function(t){if(\"open\"!==this.readyState)throw new Error(\"Transport not open\");this.write(t)},r.prototype.onOpen=function(){this.readyState=\"open\",this.writable=!0,this.emit(\"open\")},r.prototype.onData=function(t){var e=o.decodePacket(t,this.socket.binaryType);this.onPacket(e)},r.prototype.onPacket=function(t){this.emit(\"packet\",t)},r.prototype.onClose=function(){this.readyState=\"closed\",this.emit(\"close\")}},function(t,e,n){(function(t){function r(t,n){var r=\"b\"+e.packets[t.type]+t.data.data;return n(r)}function o(t,n,r){if(!n)return e.encodeBase64Packet(t,r);var o=t.data,i=new Uint8Array(o),s=new Uint8Array(1+o.byteLength);s[0]=v[t.type];for(var a=0;a<i.length;a++)s[a+1]=i[a];return r(s.buffer)}function i(t,n,r){if(!n)return e.encodeBase64Packet(t,r);var o=new FileReader;return o.onload=function(){t.data=o.result,e.encodePacket(t,n,!0,r)},o.readAsArrayBuffer(t.data)}function s(t,n,r){if(!n)return e.encodeBase64Packet(t,r);if(g)return i(t,n,r);var o=new Uint8Array(1);o[0]=v[t.type];var s=new k([o.buffer,t.data]);return r(s)}function a(t){try{t=d.decode(t,{strict:!1})}catch(e){return!1}return t}function c(t,e,n){for(var r=new Array(t.length),o=l(t.length,n),i=function(t,n,o){e(n,function(e,n){r[t]=n,o(e,r)})},s=0;s<t.length;s++)i(s,t[s],o)}var p,u=n(24),h=n(9),f=n(25),l=n(26),d=n(27);t&&t.ArrayBuffer&&(p=n(29));var y=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),m=\"undefined\"!=typeof navigator&&/PhantomJS/i.test(navigator.userAgent),g=y||m;e.protocol=3;var v=e.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},b=u(v),w={type:\"error\",data:\"parser error\"},k=n(30);e.encodePacket=function(e,n,i,a){\"function\"==typeof n&&(a=n,n=!1),\"function\"==typeof i&&(a=i,i=null);var c=void 0===e.data?void 0:e.data.buffer||e.data;if(t.ArrayBuffer&&c instanceof ArrayBuffer)return o(e,n,a);if(k&&c instanceof t.Blob)return s(e,n,a);if(c&&c.base64)return r(e,a);var p=v[e.type];return void 0!==e.data&&(p+=i?d.encode(String(e.data),{strict:!1}):String(e.data)),a(\"\"+p)},e.encodeBase64Packet=function(n,r){var o=\"b\"+e.packets[n.type];if(k&&n.data instanceof t.Blob){var i=new FileReader;return i.onload=function(){var t=i.result.split(\",\")[1];r(o+t)},i.readAsDataURL(n.data)}var s;try{s=String.fromCharCode.apply(null,new Uint8Array(n.data))}catch(a){for(var c=new Uint8Array(n.data),p=new Array(c.length),u=0;u<c.length;u++)p[u]=c[u];s=String.fromCharCode.apply(null,p)}return o+=t.btoa(s),r(o)},e.decodePacket=function(t,n,r){if(void 0===t)return w;if(\"string\"==typeof t){if(\"b\"===t.charAt(0))return e.decodeBase64Packet(t.substr(1),n);if(r&&(t=a(t),t===!1))return w;var o=t.charAt(0);return Number(o)==o&&b[o]?t.length>1?{type:b[o],data:t.substring(1)}:{type:b[o]}:w}var i=new Uint8Array(t),o=i[0],s=f(t,1);return k&&\"blob\"===n&&(s=new k([s])),{type:b[o],data:s}},e.decodeBase64Packet=function(t,e){var n=b[t.charAt(0)];if(!p)return{type:n,data:{base64:!0,data:t.substr(1)}};var r=p.decode(t.substr(1));return\"blob\"===e&&k&&(r=new k([r])),{type:n,data:r}},e.encodePayload=function(t,n,r){function o(t){return t.length+\":\"+t}function i(t,r){e.encodePacket(t,!!s&&n,!1,function(t){r(null,o(t))})}\"function\"==typeof n&&(r=n,n=null);var s=h(t);return n&&s?k&&!g?e.encodePayloadAsBlob(t,r):e.encodePayloadAsArrayBuffer(t,r):t.length?void c(t,i,function(t,e){return r(e.join(\"\"))}):r(\"0:\")},e.decodePayload=function(t,n,r){if(\"string\"!=typeof t)return e.decodePayloadAsBinary(t,n,r);\"function\"==typeof n&&(r=n,n=null);var o;if(\"\"===t)return r(w,0,1);for(var i,s,a=\"\",c=0,p=t.length;c<p;c++){var u=t.charAt(c);if(\":\"===u){if(\"\"===a||a!=(i=Number(a)))return r(w,0,1);if(s=t.substr(c+1,i),a!=s.length)return r(w,0,1);if(s.length){if(o=e.decodePacket(s,n,!1),w.type===o.type&&w.data===o.data)return r(w,0,1);var h=r(o,c+i,p);if(!1===h)return}c+=i,a=\"\"}else a+=u}return\"\"!==a?r(w,0,1):void 0},e.encodePayloadAsArrayBuffer=function(t,n){function r(t,n){e.encodePacket(t,!0,!0,function(t){return n(null,t)})}return t.length?void c(t,r,function(t,e){var r=e.reduce(function(t,e){var n;return n=\"string\"==typeof e?e.length:e.byteLength,t+n.toString().length+n+2},0),o=new Uint8Array(r),i=0;return e.forEach(function(t){var e=\"string\"==typeof t,n=t;if(e){for(var r=new Uint8Array(t.length),s=0;s<t.length;s++)r[s]=t.charCodeAt(s);n=r.buffer}e?o[i++]=0:o[i++]=1;for(var a=n.byteLength.toString(),s=0;s<a.length;s++)o[i++]=parseInt(a[s]);o[i++]=255;for(var r=new Uint8Array(n),s=0;s<r.length;s++)o[i++]=r[s]}),n(o.buffer)}):n(new ArrayBuffer(0))},e.encodePayloadAsBlob=function(t,n){function r(t,n){e.encodePacket(t,!0,!0,function(t){var e=new Uint8Array(1);if(e[0]=1,\"string\"==typeof t){for(var r=new Uint8Array(t.length),o=0;o<t.length;o++)r[o]=t.charCodeAt(o);t=r.buffer,e[0]=0}for(var i=t instanceof ArrayBuffer?t.byteLength:t.size,s=i.toString(),a=new Uint8Array(s.length+1),o=0;o<s.length;o++)a[o]=parseInt(s[o]);if(a[s.length]=255,k){var c=new k([e.buffer,a.buffer,t]);n(null,c)}})}c(t,r,function(t,e){return n(new k(e))})},e.decodePayloadAsBinary=function(t,n,r){\"function\"==typeof n&&(r=n,n=null);for(var o=t,i=[];o.byteLength>0;){for(var s=new Uint8Array(o),a=0===s[0],c=\"\",p=1;255!==s[p];p++){if(c.length>310)return r(w,0,1);c+=s[p]}o=f(o,2+c.length),c=parseInt(c);var u=f(o,0,c);if(a)try{u=String.fromCharCode.apply(null,new Uint8Array(u))}catch(h){var l=new Uint8Array(u);u=\"\";for(var p=0;p<l.length;p++)u+=String.fromCharCode(l[p])}i.push(u),o=f(o,c)}var d=i.length;i.forEach(function(t,o){r(e.decodePacket(t,n,!0),o,d)})}}).call(e,function(){return this}())},function(t,e){t.exports=Object.keys||function(t){var e=[],n=Object.prototype.hasOwnProperty;for(var r in t)n.call(t,r)&&e.push(r);return e}},function(t,e){t.exports=function(t,e,n){var r=t.byteLength;if(e=e||0,n=n||r,t.slice)return t.slice(e,n);if(e<0&&(e+=r),n<0&&(n+=r),n>r&&(n=r),e>=r||e>=n||0===r)return new ArrayBuffer(0);for(var o=new Uint8Array(t),i=new Uint8Array(n-e),s=e,a=0;s<n;s++,a++)i[a]=o[s];return i.buffer}},function(t,e){function n(t,e,n){function o(t,r){if(o.count<=0)throw new Error(\"after called too many times\");--o.count,t?(i=!0,e(t),e=n):0!==o.count||i||e(null,r)}var i=!1;return n=n||r,o.count=t,0===t?e():o}function r(){}t.exports=n},function(t,e,n){var r;(function(t,o){!function(i){function s(t){for(var e,n,r=[],o=0,i=t.length;o<i;)e=t.charCodeAt(o++),e>=55296&&e<=56319&&o<i?(n=t.charCodeAt(o++),56320==(64512&n)?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),o--)):r.push(e);return r}function a(t){for(var e,n=t.length,r=-1,o=\"\";++r<n;)e=t[r],e>65535&&(e-=65536,o+=w(e>>>10&1023|55296),e=56320|1023&e),o+=w(e);return o}function c(t,e){if(t>=55296&&t<=57343){if(e)throw Error(\"Lone surrogate U+\"+t.toString(16).toUpperCase()+\" is not a scalar value\");return!1}return!0}function p(t,e){return w(t>>e&63|128)}function u(t,e){if(0==(4294967168&t))return w(t);var n=\"\";return 0==(4294965248&t)?n=w(t>>6&31|192):0==(4294901760&t)?(c(t,e)||(t=65533),n=w(t>>12&15|224),n+=p(t,6)):0==(4292870144&t)&&(n=w(t>>18&7|240),n+=p(t,12),n+=p(t,6)),n+=w(63&t|128)}function h(t,e){e=e||{};for(var n,r=!1!==e.strict,o=s(t),i=o.length,a=-1,c=\"\";++a<i;)n=o[a],c+=u(n,r);return c}function f(){if(b>=v)throw Error(\"Invalid byte index\");var t=255&g[b];if(b++,128==(192&t))return 63&t;throw Error(\"Invalid continuation byte\")}function l(t){var e,n,r,o,i;if(b>v)throw Error(\"Invalid byte index\");if(b==v)return!1;if(e=255&g[b],b++,0==(128&e))return e;if(192==(224&e)){if(n=f(),i=(31&e)<<6|n,i>=128)return i;throw Error(\"Invalid continuation byte\")}if(224==(240&e)){if(n=f(),r=f(),i=(15&e)<<12|n<<6|r,i>=2048)return c(i,t)?i:65533;throw Error(\"Invalid continuation byte\")}if(240==(248&e)&&(n=f(),r=f(),o=f(),i=(7&e)<<18|n<<12|r<<6|o,i>=65536&&i<=1114111))return i;throw Error(\"Invalid UTF-8 detected\")}function d(t,e){e=e||{};var n=!1!==e.strict;g=s(t),v=g.length,b=0;for(var r,o=[];(r=l(n))!==!1;)o.push(r);return a(o)}var y=\"object\"==typeof e&&e,m=(\"object\"==typeof t&&t&&t.exports==y&&t,\"object\"==typeof o&&o);m.global!==m&&m.window!==m||(i=m);var g,v,b,w=String.fromCharCode,k={version:\"2.1.2\",encode:h,decode:d};r=function(){return k}.call(e,n,e,t),!(void 0!==r&&(t.exports=r))}(this)}).call(e,n(28)(t),function(){return this}())},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}},function(t,e){!function(){\"use strict\";for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",n=new Uint8Array(256),r=0;r<t.length;r++)n[t.charCodeAt(r)]=r;e.encode=function(e){var n,r=new Uint8Array(e),o=r.length,i=\"\";for(n=0;n<o;n+=3)i+=t[r[n]>>2],i+=t[(3&r[n])<<4|r[n+1]>>4],i+=t[(15&r[n+1])<<2|r[n+2]>>6],i+=t[63&r[n+2]];return o%3===2?i=i.substring(0,i.length-1)+\"=\":o%3===1&&(i=i.substring(0,i.length-2)+\"==\"),i},e.decode=function(t){var e,r,o,i,s,a=.75*t.length,c=t.length,p=0;\"=\"===t[t.length-1]&&(a--,\"=\"===t[t.length-2]&&a--);var u=new ArrayBuffer(a),h=new Uint8Array(u);for(e=0;e<c;e+=4)r=n[t.charCodeAt(e)],o=n[t.charCodeAt(e+1)],i=n[t.charCodeAt(e+2)],s=n[t.charCodeAt(e+3)],h[p++]=r<<2|o>>4,h[p++]=(15&o)<<4|i>>2,h[p++]=(3&i)<<6|63&s;return u}}()},function(t,e){(function(e){function n(t){for(var e=0;e<t.length;e++){var n=t[e];if(n.buffer instanceof ArrayBuffer){var r=n.buffer;if(n.byteLength!==r.byteLength){var o=new Uint8Array(n.byteLength);o.set(new Uint8Array(r,n.byteOffset,n.byteLength)),r=o.buffer}t[e]=r}}}function r(t,e){e=e||{};var r=new i;n(t);for(var o=0;o<t.length;o++)r.append(t[o]);return e.type?r.getBlob(e.type):r.getBlob()}function o(t,e){return n(t),new Blob(t,e||{})}var i=e.BlobBuilder||e.WebKitBlobBuilder||e.MSBlobBuilder||e.MozBlobBuilder,s=function(){try{var t=new Blob([\"hi\"]);return 2===t.size}catch(e){return!1}}(),a=s&&function(){try{var t=new Blob([new Uint8Array([1,2])]);return 2===t.size}catch(e){return!1}}(),c=i&&i.prototype.append&&i.prototype.getBlob;t.exports=function(){return s?a?e.Blob:o:c?r:void 0}()}).call(e,function(){return this}())},function(t,e){e.encode=function(t){var e=\"\";for(var n in t)t.hasOwnProperty(n)&&(e.length&&(e+=\"&\"),e+=encodeURIComponent(n)+\"=\"+encodeURIComponent(t[n]));return e},e.decode=function(t){for(var e={},n=t.split(\"&\"),r=0,o=n.length;r<o;r++){var i=n[r].split(\"=\");e[decodeURIComponent(i[0])]=decodeURIComponent(i[1])}return e}},function(t,e){t.exports=function(t,e){var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e){\"use strict\";function n(t){var e=\"\";do e=s[t%a]+e,t=Math.floor(t/a);while(t>0);return e}function r(t){var e=0;for(u=0;u<t.length;u++)e=e*a+c[t.charAt(u)];return e}function o(){var t=n(+new Date);return t!==i?(p=0,i=t):t+\".\"+n(p++)}for(var i,s=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"),a=64,c={},p=0,u=0;u<a;u++)c[s[u]]=u;o.encode=n,o.decode=r,t.exports=o},function(t,e,n){(function(e){function r(){}function o(t){i.call(this,t),this.query=this.query||{},a||(e.___eio||(e.___eio=[]),a=e.___eio),this.index=a.length;var n=this;a.push(function(t){n.onData(t)}),this.query.j=this.index,e.document&&e.addEventListener&&e.addEventListener(\"beforeunload\",function(){n.script&&(n.script.onerror=r)},!1)}var i=n(21),s=n(32);t.exports=o;var a,c=/\\n/g,p=/\\\\n/g;s(o,i),o.prototype.supportsBinary=!1,o.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),i.prototype.doClose.call(this)},o.prototype.doPoll=function(){var t=this,e=document.createElement(\"script\");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),e.async=!0,e.src=this.uri(),e.onerror=function(e){t.onError(\"jsonp poll error\",e)};var n=document.getElementsByTagName(\"script\")[0];n?n.parentNode.insertBefore(e,n):(document.head||document.body).appendChild(e),this.script=e;var r=\"undefined\"!=typeof navigator&&/gecko/i.test(navigator.userAgent);r&&setTimeout(function(){var t=document.createElement(\"iframe\");document.body.appendChild(t),document.body.removeChild(t)},100)},o.prototype.doWrite=function(t,e){function n(){r(),e()}function r(){if(o.iframe)try{o.form.removeChild(o.iframe)}catch(t){o.onError(\"jsonp polling iframe removal error\",t)}try{var e='<iframe src=\"javascript:0\" name=\"'+o.iframeId+'\">';i=document.createElement(e)}catch(t){i=document.createElement(\"iframe\"),i.name=o.iframeId,i.src=\"javascript:0\"}i.id=o.iframeId,o.form.appendChild(i),o.iframe=i}var o=this;if(!this.form){var i,s=document.createElement(\"form\"),a=document.createElement(\"textarea\"),u=this.iframeId=\"eio_iframe_\"+this.index;s.className=\"socketio\",s.style.position=\"absolute\",s.style.top=\"-1000px\",s.style.left=\"-1000px\",s.target=u,s.method=\"POST\",s.setAttribute(\"accept-charset\",\"utf-8\"),a.name=\"d\",s.appendChild(a),document.body.appendChild(s),this.form=s,this.area=a}this.form.action=this.uri(),r(),t=t.replace(p,\"\\\\\\n\"),this.area.value=t.replace(c,\"\\\\n\");try{this.form.submit()}catch(h){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){\"complete\"===o.iframe.readyState&&n()}:this.iframe.onload=n}}).call(e,function(){return this}())},function(t,e,n){(function(e){function r(t){var e=t&&t.forceBase64;e&&(this.supportsBinary=!1),this.perMessageDeflate=t.perMessageDeflate,this.usingBrowserWebSocket=h&&!t.forceNode,this.protocols=t.protocols,this.usingBrowserWebSocket||(l=o),i.call(this,t)}var o,i=n(22),s=n(23),a=n(31),c=n(32),p=n(33),u=n(3)(\"engine.io-client:websocket\"),h=e.WebSocket||e.MozWebSocket;if(\"undefined\"==typeof window)try{o=n(36)}catch(f){}var l=h;l||\"undefined\"!=typeof window||(l=o),t.exports=r,c(r,i),r.prototype.name=\"websocket\",r.prototype.supportsBinary=!0,r.prototype.doOpen=function(){if(this.check()){var t=this.uri(),e=this.protocols,n={agent:this.agent,perMessageDeflate:this.perMessageDeflate};n.pfx=this.pfx,n.key=this.key,n.passphrase=this.passphrase,n.cert=this.cert,n.ca=this.ca,n.ciphers=this.ciphers,n.rejectUnauthorized=this.rejectUnauthorized,this.extraHeaders&&(n.headers=this.extraHeaders),this.localAddress&&(n.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket?e?new l(t,e):new l(t):new l(t,e,n)}catch(r){return this.emit(\"error\",r)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType=\"nodebuffer\"):this.ws.binaryType=\"arraybuffer\",this.addEventListeners()}},r.prototype.addEventListeners=function(){var t=this;this.ws.onopen=function(){t.onOpen()},this.ws.onclose=function(){t.onClose()},this.ws.onmessage=function(e){t.onData(e.data)},this.ws.onerror=function(e){t.onError(\"websocket error\",e)}},r.prototype.write=function(t){function n(){r.emit(\"flush\"),setTimeout(function(){r.writable=!0,r.emit(\"drain\")},0)}var r=this;this.writable=!1;for(var o=t.length,i=0,a=o;i<a;i++)!function(t){s.encodePacket(t,r.supportsBinary,function(i){if(!r.usingBrowserWebSocket){var s={};if(t.options&&(s.compress=t.options.compress),r.perMessageDeflate){var a=\"string\"==typeof i?e.Buffer.byteLength(i):i.length;a<r.perMessageDeflate.threshold&&(s.compress=!1)}}try{r.usingBrowserWebSocket?r.ws.send(i):r.ws.send(i,s)}catch(c){u(\"websocket closed before onclose event\")}--o||n()})}(t[i])},r.prototype.onClose=function(){i.prototype.onClose.call(this)},r.prototype.doClose=function(){\"undefined\"!=typeof this.ws&&this.ws.close()},r.prototype.uri=function(){var t=this.query||{},e=this.secure?\"wss\":\"ws\",n=\"\";this.port&&(\"wss\"===e&&443!==Number(this.port)||\"ws\"===e&&80!==Number(this.port))&&(n=\":\"+this.port),this.timestampRequests&&(t[this.timestampParam]=p()),this.supportsBinary||(t.b64=1),t=a.encode(t),t.length&&(t=\"?\"+t);var r=this.hostname.indexOf(\":\")!==-1;return e+\"://\"+(r?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+t},r.prototype.check=function(){return!(!l||\"__initialize\"in l&&this.name===r.prototype.name)}}).call(e,function(){return this}())},function(t,e){},function(t,e){var n=[].indexOf;t.exports=function(t,e){if(n)return t.indexOf(e);for(var r=0;r<t.length;++r)if(t[r]===e)return r;return-1}},function(t,e){(function(e){var n=/^[\\],:{}\\s]*$/,r=/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,o=/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,i=/(?:^|:|,)(?:\\s*\\[)+/g,s=/^\\s+/,a=/\\s+$/;t.exports=function(t){return\"string\"==typeof t&&t?(t=t.replace(s,\"\").replace(a,\"\"),e.JSON&&JSON.parse?JSON.parse(t):n.test(t.replace(r,\"@\").replace(o,\"]\").replace(i,\"\"))?new Function(\"return \"+t)():void 0):null}}).call(e,function(){return this}())},function(t,e,n){\"use strict\";function r(t,e,n){this.io=t,this.nsp=e,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,n&&n.query&&(this.query=n.query),this.io.autoConnect&&this.open()}var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=n(7),s=n(8),a=n(40),c=n(41),p=n(42),u=n(3)(\"socket.io-client:socket\"),h=n(31);t.exports=e=r;var f={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},l=s.prototype.emit;s(r.prototype),r.prototype.subEvents=function(){if(!this.subs){var t=this.io;this.subs=[c(t,\"open\",p(this,\"onopen\")),c(t,\"packet\",p(this,\"onpacket\")),c(t,\"close\",p(this,\"onclose\"))]}},r.prototype.open=r.prototype.connect=function(){return this.connected?this:(this.subEvents(),this.io.open(),\"open\"===this.io.readyState&&this.onopen(),this.emit(\"connecting\"),this)},r.prototype.send=function(){var t=a(arguments);return t.unshift(\"message\"),this.emit.apply(this,t),this},r.prototype.emit=function(t){if(f.hasOwnProperty(t))return l.apply(this,arguments),this;var e=a(arguments),n={type:i.EVENT,data:e};return n.options={},n.options.compress=!this.flags||!1!==this.flags.compress,\"function\"==typeof e[e.length-1]&&(u(\"emitting packet with ack id %d\",this.ids),this.acks[this.ids]=e.pop(),n.id=this.ids++),this.connected?this.packet(n):this.sendBuffer.push(n),delete this.flags,this},r.prototype.packet=function(t){t.nsp=this.nsp,this.io.packet(t)},r.prototype.onopen=function(){if(u(\"transport is open - connecting\"),\"/\"!==this.nsp)if(this.query){var t=\"object\"===o(this.query)?h.encode(this.query):this.query;u(\"sending connect packet with query %s\",t),this.packet({type:i.CONNECT,query:t})}else this.packet({type:i.CONNECT})},r.prototype.onclose=function(t){u(\"close (%s)\",t),this.connected=!1,this.disconnected=!0,delete this.id,this.emit(\"disconnect\",t)},r.prototype.onpacket=function(t){if(t.nsp===this.nsp)switch(t.type){case i.CONNECT:this.onconnect();break;case i.EVENT:this.onevent(t);break;case i.BINARY_EVENT:this.onevent(t);break;case i.ACK:this.onack(t);break;case i.BINARY_ACK:this.onack(t);break;case i.DISCONNECT:this.ondisconnect();break;case i.ERROR:this.emit(\"error\",t.data)}},r.prototype.onevent=function(t){var e=t.data||[];u(\"emitting event %j\",e),null!=t.id&&(u(\"attaching ack callback to event\"),e.push(this.ack(t.id))),this.connected?l.apply(this,e):this.receiveBuffer.push(e)},r.prototype.ack=function(t){var e=this,n=!1;return function(){if(!n){n=!0;var r=a(arguments);u(\"sending ack %j\",r),e.packet({type:i.ACK,id:t,data:r})}}},r.prototype.onack=function(t){var e=this.acks[t.id];\"function\"==typeof e?(u(\"calling ack %s with %j\",t.id,t.data),e.apply(this,t.data),delete this.acks[t.id]):u(\"bad ack %s\",t.id)},r.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit(\"connect\"),this.emitBuffered()},r.prototype.emitBuffered=function(){var t;for(t=0;t<this.receiveBuffer.length;t++)l.apply(this,this.receiveBuffer[t]);for(this.receiveBuffer=[],t=0;t<this.sendBuffer.length;t++)this.packet(this.sendBuffer[t]);this.sendBuffer=[]},r.prototype.ondisconnect=function(){u(\"server disconnect (%s)\",this.nsp),this.destroy(),this.onclose(\"io server disconnect\")},r.prototype.destroy=function(){if(this.subs){for(var t=0;t<this.subs.length;t++)this.subs[t].destroy();this.subs=null}this.io.destroy(this)},r.prototype.close=r.prototype.disconnect=function(){return this.connected&&(u(\"performing disconnect (%s)\",this.nsp),this.packet({type:i.DISCONNECT})),this.destroy(),this.connected&&this.onclose(\"io client disconnect\"),this},r.prototype.compress=function(t){return this.flags=this.flags||{},this.flags.compress=t,this}},function(t,e){function n(t,e){var n=[];e=e||0;for(var r=e||0;r<t.length;r++)n[r-e]=t[r];return n}t.exports=n},function(t,e){\"use strict\";function n(t,e,n){return t.on(e,n),{destroy:function(){t.removeListener(e,n)}}}t.exports=n},function(t,e){var n=[].slice;t.exports=function(t,e){if(\"string\"==typeof e&&(e=t[e]),\"function\"!=typeof e)throw new Error(\"bind() requires a function\");var r=n.call(arguments,2);return function(){return e.apply(t,r.concat(n.call(arguments)))}}},function(t,e){function n(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}t.exports=n,n.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),n=Math.floor(e*this.jitter*t);t=0==(1&Math.floor(10*e))?t-n:t+n}return 0|Math.min(t,this.max)},n.prototype.reset=function(){this.attempts=0},n.prototype.setMin=function(t){this.ms=t},n.prototype.setMax=function(t){this.max=t},n.prototype.setJitter=function(t){this.jitter=t}}])});\r\n//# sourceMappingURL=socket.io.js.map","const SDPTransform = require('sdp-transform');  // eslint-disable-line\r\nconst CandidateInfo = require('./CandidateInfo');\r\nconst CodecInfo = require('./CodecInfo');\r\nconst DTLSInfo = require('./DTLSInfo');\r\nconst ICEInfo = require('./ICEInfo');\r\nconst MediaInfo = require('./MediaInfo');\r\nconst Setup = require('./Setup');\r\nconst Direction = require('./Direction');\r\nconst DirectionWay = require('./DirectionWay');\r\nconst SourceGroupInfo = require('./SourceGroupInfo');\r\nconst SourceInfo = require('./SourceInfo');\r\nconst StreamInfo = require('./StreamInfo');\r\nconst TrackInfo = require('./TrackInfo');\r\nconst TrackEncodingInfo = require('./TrackEncodingInfo');\r\nconst SimulcastInfo = require('./SimulcastInfo');\r\nconst SimulcastStreamInfo = require('./SimulcastStreamInfo');\r\nconst RIDInfo = require('./RIDInfo');\r\n\r\nclass SDPInfo {\r\n  constructor(version) {\r\n    this.version = version || 1;\r\n    this.name = 'sdp-semantic';\r\n    this.streams = new Map();\r\n    this.medias = [];\r\n    this.candidates = [];\r\n    this.connection = null;\r\n    this.ice = null;\r\n    this.dtls = null;\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new SDPInfo(this.version);\r\n    cloned.name = this.name;\r\n    cloned.setConnection(this.connection);\r\n    this.medias.forEach((media) => {\r\n      cloned.addMedia(media.clone());\r\n    });\r\n    this.streams.forEach((stream) => {\r\n      cloned.addStream(stream.clone());\r\n    });\r\n    this.candidates.forEach((candidate) => {\r\n      cloned.addCandidate(candidate.clone());\r\n    });\r\n    cloned.setICE(this.ice.clone());\r\n    cloned.setDTLS(this.dtls.clone());\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      version: this.version,\r\n      name: this.name,\r\n      streams: [],\r\n      medias: [],\r\n      candidates: [],\r\n      connection: this.connection,\r\n    };\r\n    this.medias.forEach((media) => {\r\n      plain.medias.push(media.plain());\r\n    });\r\n    this.streams.forEach((stream) => {\r\n      plain.streams.push(stream.plain());\r\n    });\r\n    this.candidates.forEach((candidate) => {\r\n      plain.candidates.push(candidate.plain());\r\n    });\r\n    plain.ice = this.ice && this.ice.plain();\r\n    plain.dtls = this.dtls && this.dtls.plain();\r\n    return plain;\r\n  }\r\n\r\n  setVersion(version) {\r\n    this.version = version;\r\n  }\r\n\r\n  setOrigin(origin) {\r\n    this.origin = origin;\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  getConnection() {\r\n    return this.connection;\r\n  }\r\n\r\n  setConnection(connection) {\r\n    this.connection = connection;\r\n  }\r\n\r\n  setTiming(timing) {\r\n    this.timing = timing;\r\n  }\r\n\r\n  addMedia(media) {\r\n    this.medias.push(media);\r\n  }\r\n\r\n  getMedia(type) {\r\n    let result;\r\n    this.medias.forEach((media) => {\r\n      if (media.getType().toLowerCase() === type.toLowerCase()) {\r\n        result = media;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getMedias(type) {\r\n    if (!type) {\r\n      return this.medias;\r\n    }\r\n    const medias = [];\r\n    this.medias.forEach((media) => {\r\n      if (media.getType().toLowerCase() === type.toLowerCase()) {\r\n        medias.push(media);\r\n      }\r\n    });\r\n    return medias;\r\n  }\r\n\r\n  getMediaById(msid) {\r\n    let result;\r\n    this.medias.forEach((media) => {\r\n      if (media.getId().toLowerCase() === msid.toLowerCase()) {\r\n        result = media;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getVersion() {\r\n    return this.version;\r\n  }\r\n\r\n  getDTLS() {\r\n    return this.dtls;\r\n  }\r\n\r\n  setDTLS(dtlsInfo) {\r\n    this.dtls = dtlsInfo;\r\n  }\r\n\r\n  getICE() {\r\n    return this.ice;\r\n  }\r\n\r\n  setICE(iceInfo) {\r\n    this.ice = iceInfo;\r\n  }\r\n\r\n  addCandidate(candidate) {\r\n    this.candidates.push(candidate);\r\n  }\r\n\r\n  addCandidates(candidates) {\r\n    candidates.forEach((candidate) => {\r\n      this.addCandidate(candidate);\r\n    });\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  getStream(id) {\r\n    return this.streams.get(id);\r\n  }\r\n\r\n  getStreams() {\r\n    return this.streams;\r\n  }\r\n\r\n  getFirstStream() {\r\n    if (this.streams.values().length > 0) {\r\n      return this.streams.values()[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addStream(stream) {\r\n    this.streams.set(stream.getId(), stream);\r\n  }\r\n\r\n  removeStream(stream) {\r\n    this.streams.delete(stream.getId());\r\n  }\r\n\r\n  toJSON() {\r\n    const sdp = {\r\n      version: 0,\r\n      media: [],\r\n    };\r\n\r\n    sdp.version = this.version || 0;\r\n    sdp.origin = this.origin || {\r\n      username: '-',\r\n      sessionId: (new Date()).getTime(),\r\n      sessionVersion: this.version,\r\n      netType: 'IN',\r\n      ipVer: 4,\r\n      address: '127.0.0.1',\r\n    };\r\n\r\n    sdp.name = this.name || 'semantic-sdp';\r\n\r\n    sdp.connection = this.getConnection();\r\n    sdp.timing = this.timing || { start: 0, stop: 0 };\r\n\r\n    let ice = this.getICE();\r\n    if (ice) {\r\n      if (ice.isLite()) {\r\n        sdp.icelite = 'ice-lite';\r\n      }\r\n      sdp.iceOptions = ice.getOpts();\r\n      sdp.iceUfrag = ice.getUfrag();\r\n      sdp.icePwd = ice.getPwd();\r\n    }\r\n\r\n    sdp.msidSemantic = this.msidSemantic || { semantic: 'WMS', token: '*' };\r\n    sdp.groups = [];\r\n\r\n    const bundle = { type: 'BUNDLE', mids: [] };\r\n    let dtls = this.getDTLS();\r\n    if (dtls) {\r\n      sdp.fingerprint = {\r\n        type: dtls.getHash(),\r\n        hash: dtls.getFingerprint(),\r\n      };\r\n\r\n      sdp.setup = Setup.toString(dtls.getSetup());\r\n    }\r\n\r\n    this.medias.forEach((media) => {\r\n      const md = {\r\n        type: media.getType(),\r\n        port: media.getPort(),\r\n        protocol: 'UDP/TLS/RTP/SAVPF',\r\n        fmtp: [],\r\n        rtp: [],\r\n        rtcpFb: [],\r\n        ext: [],\r\n        bandwidth: [],\r\n        candidates: [],\r\n        ssrcGroups: [],\r\n        ssrcs: [],\r\n        rids: [],\r\n      };\r\n\r\n      md.direction = Direction.toString(media.getDirection());\r\n\r\n      md.rtcpMux = 'rtcp-mux';\r\n\r\n      md.connection = media.getConnection();\r\n\r\n      md.xGoogleFlag = media.getXGoogleFlag();\r\n\r\n      md.mid = media.getId();\r\n\r\n      bundle.mids.push(media.getId());\r\n      md.rtcp = media.rtcp;\r\n\r\n      if (media.getBitrate() > 0) {\r\n        md.bandwidth.push({\r\n          type: 'AS',\r\n          limit: media.getBitrate(),\r\n        });\r\n      }\r\n\r\n      const candidates = media.getCandidates();\r\n      candidates.forEach((candidate) => {\r\n        md.candidates.push({\r\n          foundation: candidate.getFoundation(),\r\n          component: candidate.getComponentId(),\r\n          transport: candidate.getTransport(),\r\n          priority: candidate.getPriority(),\r\n          ip: candidate.getAddress(),\r\n          port: candidate.getPort(),\r\n          type: candidate.getType(),\r\n          relAddr: candidate.getRelAddr(),\r\n          relPort: candidate.getRelPort(),\r\n          generation: candidate.getGeneration(),\r\n        });\r\n      });\r\n\r\n      ice = media.getICE();\r\n      if (ice) {\r\n        if (ice.isLite()) {\r\n          md.icelite = 'ice-lite';\r\n        }\r\n        md.iceOptions = ice.getOpts();\r\n        md.iceUfrag = ice.getUfrag();\r\n        md.icePwd = ice.getPwd();\r\n        if (ice.isEndOfCandidates()) {\r\n          md.endOfCandidates = ice.isEndOfCandidates();\r\n        }\r\n      }\r\n\r\n      dtls = media.getDTLS();\r\n      if (dtls) {\r\n        md.fingerprint = {\r\n          type: dtls.getHash(),\r\n          hash: dtls.getFingerprint(),\r\n        };\r\n\r\n        md.setup = Setup.toString(dtls.getSetup());\r\n      }\r\n\r\n      if (media.setup) {\r\n        md.setup = Setup.toString(media.setup);\r\n      }\r\n\r\n      media.getCodecs().forEach((codec) => {\r\n        md.rtp.push({\r\n          payload: codec.getType(),\r\n          codec: codec.getCodec(),\r\n          rate: codec.getRate(),\r\n          encoding: codec.getEncoding(),\r\n        });\r\n\r\n        const params = codec.getParams();\r\n        if (Object.keys(params).length > 0) {\r\n          md.fmtp.push({\r\n            payload: codec.getType(),\r\n            config: Object.keys(params)\r\n                          .map(item => item + (params[item] ? `=${params[item]}` : ''))\r\n                          .join(';'),\r\n          });\r\n        }\r\n\r\n        codec.getFeedback().forEach((rtcpFb) => {\r\n          md.rtcpFb.push({\r\n            payload: codec.getType(),\r\n            type: rtcpFb.type,\r\n            subtype: rtcpFb.subtype,\r\n          });\r\n        });\r\n\r\n        if (codec.hasRTX()) {\r\n          md.rtp.push({\r\n            payload: codec.getRTX(),\r\n            codec: 'rtx',\r\n            rate: codec.getRate(),\r\n            encoding: codec.getEncoding(),\r\n          });\r\n          md.fmtp.push({\r\n            payload: codec.getRTX(),\r\n            config: `apt=${codec.getType()}`,\r\n          });\r\n        }\r\n      });\r\n      const payloads = [];\r\n\r\n      md.rtp.forEach((rtp) => {\r\n        payloads.push(rtp.payload);\r\n      });\r\n\r\n      md.payloads = payloads.join(' ');\r\n\r\n      media.getExtensions().forEach((uri, value) => {\r\n        md.ext.push({\r\n          value,\r\n          uri,\r\n        });\r\n      });\r\n\r\n      media.getRIDs().forEach((ridInfo) => {\r\n        const rid = {\r\n          id: ridInfo.getId(),\r\n          direction: DirectionWay.toString(ridInfo.getDirection()),\r\n          params: '',\r\n        };\r\n        if (ridInfo.getFormats().length) {\r\n          rid.params = `pt=${ridInfo.getFormats().join(',')}`;\r\n        }\r\n        ridInfo.getParams().forEach((param, key) => {\r\n          const prefix = rid.params.length ? ';' : '';\r\n          rid.params += `${prefix}${key}=${param}`;\r\n        });\r\n\r\n        md.rids.push(rid);\r\n      });\r\n\r\n      const simulcast = media.getSimulcast();\r\n      const simulcast03 = media.getSimulcast03();\r\n\r\n      if (simulcast) {\r\n        let index = 1;\r\n        md.simulcast = {};\r\n        const send = simulcast.getSimulcastStreams(DirectionWay.SEND);\r\n        const recv = simulcast.getSimulcastStreams(DirectionWay.RECV);\r\n\r\n        if (send && send.length) {\r\n          let list = '';\r\n          send.forEach((stream) => {\r\n            let alternatives = '';\r\n            stream.forEach((entry) => {\r\n              alternatives +=\r\n                (alternatives.length ? ',' : '') + (entry.isPaused() ? '~' : '') + entry.getId();\r\n            });\r\n            list += (list.length ? ';' : '') + alternatives;\r\n          });\r\n          md.simulcast[`dir${index}`] = 'send';\r\n          md.simulcast[`list${index}`] = list;\r\n          index += 1;\r\n        }\r\n\r\n        if (recv && recv.length) {\r\n          let list = [];\r\n          recv.forEach((stream) => {\r\n            let alternatives = '';\r\n            stream.forEach((entry) => {\r\n              alternatives +=\r\n                (alternatives.length ? ',' : '') + (entry.isPaused() ? '~' : '') + entry.getId();\r\n            });\r\n            list += (list.length ? ';' : '') + alternatives;\r\n          });\r\n          md.simulcast[`dir${index}`] = 'recv';\r\n          md.simulcast[`list${index}`] = list;\r\n          index += 1;\r\n        }\r\n      }\r\n\r\n      if (simulcast03) {\r\n        md.simulcast_03 = {\r\n          value: simulcast03.getSimulcastPlainString(),\r\n        };\r\n      }\r\n\r\n      sdp.media.push(md);\r\n    });\r\n    bundle.mids.sort();\r\n    sdp.media.sort((m1, m2) => {\r\n      if (m1.mid < m2.mid) return -1;\r\n      if (m1.mid > m2.mid) return 1;\r\n      return 0;\r\n    });\r\n\r\n    for (const stream of this.streams.values()) { // eslint-disable-line no-restricted-syntax\r\n      for (const track of stream.getTracks().values()) { // eslint-disable-line no-restricted-syntax\r\n        for (const md of sdp.media) { // eslint-disable-line no-restricted-syntax\r\n          // Check if it is unified or plan B\r\n          if (track.getMediaId()) {\r\n            // Unified, check if it is bounded to an specific line\r\n            if (track.getMediaId() === md.mid) {\r\n              track.getSourceGroups().forEach((group) => {\r\n                md.ssrcGroups.push({\r\n                  semantics: group.getSemantics(),\r\n                  ssrcs: group.getSSRCs().join(' '),\r\n                });\r\n              });\r\n\r\n              track.getSSRCs().forEach((source) => {\r\n                md.ssrcs.push({\r\n                  id: source.ssrc,\r\n                  attribute: 'cname',\r\n                  value: source.getCName(),\r\n                });\r\n              });\r\n              if (stream.getId() && track.getId()) {\r\n                md.msid = `${stream.getId()} ${track.getId()}`;\r\n              }\r\n              break;\r\n            }\r\n          } else if (md.type.toLowerCase() === track.getMedia().toLowerCase()) {\r\n            // Plan B\r\n            track.getSourceGroups().forEach((group) => {\r\n              md.ssrcGroups.push({\r\n                semantics: group.getSemantics(),\r\n                ssrcs: group.getSSRCs().join(' '),\r\n              });\r\n            });\r\n\r\n            track.getSSRCs().forEach((source) => {\r\n              md.ssrcs.push({\r\n                id: source.ssrc,\r\n                attribute: 'cname',\r\n                value: source.getCName(),\r\n              });\r\n              if (source.getStreamId() && source.getTrackId()) {\r\n                md.ssrcs.push({\r\n                  id: source.ssrc,\r\n                  attribute: 'msid',\r\n                  value: `${source.getStreamId()} ${source.getTrackId()}`,\r\n                });\r\n              }\r\n              if (source.getMSLabel()) {\r\n                md.ssrcs.push({\r\n                  id: source.ssrc,\r\n                  attribute: 'mslabel',\r\n                  value: source.getMSLabel(),\r\n                });\r\n              }\r\n              if (source.getLabel()) {\r\n                md.ssrcs.push({\r\n                  id: source.ssrc,\r\n                  attribute: 'label',\r\n                  value: source.getLabel(),\r\n                });\r\n              }\r\n            });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    bundle.mids = bundle.mids.join(' ');\r\n    sdp.groups.push(bundle);\r\n\r\n    return sdp;\r\n  }\r\n\r\n  toString() {\r\n    const sdp = this.toJSON();\r\n    return SDPTransform.write(sdp);\r\n  }\r\n}\r\n\r\nfunction getFormats(mediaInfo, md) {\r\n  const apts = new Map();\r\n\r\n  md.rtp.forEach((fmt) => {\r\n    const type = fmt.payload;\r\n    const codec = fmt.codec;\r\n    const rate = fmt.rate;\r\n    const encoding = fmt.encoding;\r\n\r\n    const params = {};\r\n    const feedback = [];\r\n\r\n    md.fmtp.forEach((fmtp) => {\r\n      if (fmtp.payload === type) {\r\n        const list = fmtp.config.split(';');\r\n        list.forEach((entry) => {\r\n          const param = entry.split('=');\r\n          params[param[0].trim()] = (param[1] || '').trim();\r\n        });\r\n      }\r\n    });\r\n    if (md.rtcpFb) {\r\n      md.rtcpFb.forEach((rtcpFb) => {\r\n        if (rtcpFb.payload === type) {\r\n          feedback.push({ type: rtcpFb.type, subtype: rtcpFb.subtype });\r\n        }\r\n      });\r\n    }\r\n    if (codec.toUpperCase() === 'RTX') {\r\n      apts.set(parseInt(params.apt, 10), type);\r\n    } else {\r\n      mediaInfo.addCodec(new CodecInfo(codec, type, rate, encoding, params, feedback));\r\n    }\r\n  });\r\n\r\n  apts.forEach((apt, id) => {\r\n    const codecInfo = mediaInfo.getCodecForType(id);\r\n    if (codecInfo) {\r\n      codecInfo.setRTX(apt);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getRIDs(mediaInfo, md) {\r\n  const rids = md.rids;\r\n  if (!rids) {\r\n    return;\r\n  }\r\n  rids.forEach((rid) => {\r\n    const ridInfo = new RIDInfo(rid.id, DirectionWay.byValue(rid.direction));\r\n    let formats = [];\r\n    const params = new Map();\r\n    if (rid.params) {\r\n      const list = SDPTransform.parseParams(rid.params);\r\n      Object.keys(list).forEach((key) => {\r\n        if (key === 'pt') {\r\n          formats = list[key].split(',');\r\n        } else {\r\n          params.set(key, list[key]);\r\n        }\r\n      });\r\n      ridInfo.setFormats(formats);\r\n      ridInfo.setParams(params);\r\n    }\r\n    mediaInfo.addRID(ridInfo);\r\n  });\r\n}\r\n\r\nfunction getSimulcastDir(index, md, simulcast) {\r\n  const simulcastDir = md.simulcast[`dir${index}`];\r\n  const simulcastList = md.simulcast[`list${index}`];\r\n  if (simulcastDir) {\r\n    const direction = DirectionWay.byValue(simulcastDir);\r\n    const list = SDPTransform.parseSimulcastStreamList(simulcastList);\r\n    list.forEach((stream) => {\r\n      const alternatives = [];\r\n      stream.forEach((entry) => {\r\n        alternatives.push(new SimulcastStreamInfo(entry.scid, entry.paused));\r\n      });\r\n      simulcast.addSimulcastAlternativeStreams(direction, alternatives);\r\n    });\r\n  }\r\n}\r\n\r\nfunction getSimulcast3Dir(md, simulcast) {\r\n  simulcast.setSimulcastPlainString(md.simulcast_03.value);\r\n}\r\n\r\nfunction getSimulcast(mediaInfo, md) {\r\n  const encodings = [];\r\n  if (md.simulcast) {\r\n    const simulcast = new SimulcastInfo();\r\n    getSimulcastDir('1', md, simulcast);\r\n    getSimulcastDir('2', md, simulcast);\r\n\r\n    simulcast.getSimulcastStreams(DirectionWay.SEND).forEach((streams) => {\r\n      const alternatives = [];\r\n      streams.forEach((stream) => {\r\n        const encoding = new TrackEncodingInfo(stream.getId(), stream.isPaused());\r\n        const ridInfo = mediaInfo.getRID(encoding.getId());\r\n        if (ridInfo) {\r\n          const formats = ridInfo.getFormats();\r\n          formats.forEach((format) => {\r\n            const codecInfo = mediaInfo.getCodecForType(format);\r\n            if (codecInfo) {\r\n              encoding.addCodec(codecInfo);\r\n            }\r\n          });\r\n          encoding.setParams(ridInfo.getParams());\r\n          alternatives.push(encoding);\r\n        }\r\n      });\r\n      if (alternatives.length) {\r\n        encodings.push(alternatives);\r\n      }\r\n    });\r\n\r\n    mediaInfo.setSimulcast(simulcast);\r\n  }\r\n  if (md.simulcast_03) {\r\n    const simulcast = new SimulcastInfo();\r\n    getSimulcast3Dir(md, simulcast);\r\n    mediaInfo.setSimulcast03(simulcast);\r\n  }\r\n  return encodings;\r\n}\r\n\r\nfunction getTracks(encodings, sdpInfo, md) {\r\n  const sources = new Map();\r\n  const media = md.type;\r\n  if (md.ssrcs) {\r\n    let track;\r\n    let stream;\r\n    let source;\r\n    md.ssrcs.forEach((ssrcAttr) => {\r\n      const ssrc = ssrcAttr.id;\r\n      const key = ssrcAttr.attribute;\r\n      const value = ssrcAttr.value;\r\n      source = sources.get(ssrc);\r\n      if (!source) {\r\n        source = new SourceInfo(ssrc);\r\n        sources.set(source.getSSRC(), source);\r\n      }\r\n      if (key.toLowerCase() === 'cname') {\r\n        source.setCName(value);\r\n      } else if (key.toLowerCase() === 'mslabel') {\r\n        source.setMSLabel(value);\r\n      } else if (key.toLowerCase() === 'label') {\r\n        source.setLabel(value);\r\n      } else if (key.toLowerCase() === 'msid') {\r\n        const ids = value.split(' ');\r\n        const streamId = ids[0];\r\n        const trackId = ids[1];\r\n        source.setStreamId(streamId);\r\n        source.setTrackId(trackId);\r\n        stream = sdpInfo.getStream(streamId);\r\n        if (!stream) {\r\n          stream = new StreamInfo(streamId);\r\n          sdpInfo.addStream(stream);\r\n        }\r\n        track = stream.getTrack(trackId);\r\n        if (!track) {\r\n          track = new TrackInfo(media, trackId);\r\n          track.setEncodings(encodings);\r\n          stream.addTrack(track);\r\n        }\r\n        track.addSSRC(source);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (md.msid) {\r\n    const ids = md.msid.split(' ');\r\n    const streamId = ids[0];\r\n    const trackId = ids[1];\r\n\r\n    let stream = sdpInfo.getStream(streamId);\r\n    if (!stream) {\r\n      stream = new StreamInfo(streamId);\r\n      sdpInfo.addStream(stream);\r\n    }\r\n    let track = stream.getTrack(trackId);\r\n    if (!track) {\r\n      track = new TrackInfo(media, trackId);\r\n      track.setMediaId(md.mid);\r\n      track.setEncodings(encodings);\r\n      stream.addTrack(track);\r\n    }\r\n\r\n    sources.forEach((key, ssrc) => {\r\n      const source = sources.get(ssrc);\r\n      if (!source.getStreamId()) {\r\n        source.setStreamId(streamId);\r\n        source.setTrackId(trackId);\r\n        track.addSSRC(source);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (md.ssrcGroups) {\r\n    md.ssrcGroups.forEach((ssrcGroupAttr) => {\r\n      const ssrcs = ssrcGroupAttr.ssrcs.split(' ');\r\n      const group = new SourceGroupInfo(ssrcGroupAttr.semantics, ssrcs);\r\n      const source = sources.get(parseInt(ssrcs[0], 10));\r\n      sdpInfo\r\n        .getStream(source.getStreamId())\r\n        .getTrack(source.getTrackId())\r\n        .addSourceGroup(group);\r\n    });\r\n  }\r\n}\r\n\r\nSDPInfo.processString = (string) => {\r\n  const sdp = SDPTransform.parse(string);\r\n  return SDPInfo.process(sdp);\r\n};\r\n\r\n\r\nSDPInfo.process = (sdp) => {\r\n  const sdpInfo = new SDPInfo();\r\n\r\n  sdpInfo.setVersion(sdp.version);\r\n  sdpInfo.setTiming(sdp.timing);\r\n  sdpInfo.setConnection(sdp.connection);\r\n  sdpInfo.setOrigin(sdp.origin);\r\n  sdpInfo.msidSemantic = sdp.msidSemantic;\r\n  sdpInfo.name = sdp.name;\r\n\r\n  let ufrag = sdp.iceUfrag;\r\n  let pwd = sdp.icePwd;\r\n  let iceOptions = sdp.iceOptions;\r\n  if (ufrag || pwd || iceOptions) {\r\n    sdpInfo.setICE(new ICEInfo(ufrag, pwd, iceOptions));\r\n  }\r\n\r\n  let fingerprintAttr = sdp.fingerprint;\r\n  if (fingerprintAttr) {\r\n    const remoteHash = fingerprintAttr.type;\r\n    const remoteFingerprint = fingerprintAttr.hash;\r\n    let setup = null;\r\n    if (sdp.setup) {\r\n      setup = Setup.byValue(sdp.setup);\r\n    }\r\n\r\n    sdpInfo.setDTLS(new DTLSInfo(setup, remoteHash, remoteFingerprint));\r\n  }\r\n\r\n  sdp.media.forEach((md) => {\r\n    const media = md.type;\r\n    const mid = md.mid;\r\n    const port = md.port;\r\n    const mediaInfo = new MediaInfo(mid, port, media);\r\n    mediaInfo.setXGoogleFlag(md.xGoogleFlag);\r\n    mediaInfo.rtcp = md.rtcp;\r\n    mediaInfo.setConnection(md.connection);\r\n\r\n    if (md.bandwidth && md.bandwidth.length > 0) {\r\n      md.bandwidth.forEach((bandwidth) => {\r\n        if (bandwidth.type === 'AS') {\r\n          mediaInfo.setBitrate(bandwidth.limit);\r\n        }\r\n      });\r\n    }\r\n\r\n    ufrag = md.iceUfrag;\r\n    pwd = md.icePwd;\r\n    iceOptions = md.iceOptions;\r\n    if (ufrag || pwd || iceOptions) {\r\n      const thisIce = new ICEInfo(ufrag, pwd, iceOptions);\r\n      if (md.endOfCandidates) {\r\n        thisIce.setEndOfCandidates('end-of-candidates');\r\n      }\r\n      mediaInfo.setICE(thisIce);\r\n    }\r\n\r\n    fingerprintAttr = md.fingerprint;\r\n    if (fingerprintAttr) {\r\n      const remoteHash = fingerprintAttr.type;\r\n      const remoteFingerprint = fingerprintAttr.hash;\r\n      let setup = Setup.ACTPASS;\r\n      if (md.setup) {\r\n        setup = Setup.byValue(md.setup);\r\n      }\r\n\r\n      mediaInfo.setDTLS(new DTLSInfo(setup, remoteHash, remoteFingerprint));\r\n    }\r\n\r\n    if (md.setup) {\r\n      mediaInfo.setSetup(Setup.byValue(md.setup));\r\n    }\r\n\r\n    let direction = Direction.SENDRECV;\r\n\r\n    if (md.direction) {\r\n      direction = Direction.byValue(md.direction.toUpperCase());\r\n    }\r\n\r\n    mediaInfo.setDirection(direction);\r\n\r\n    const candidates = md.candidates;\r\n    if (candidates) {\r\n      candidates.forEach((candidate) => {\r\n        mediaInfo.addCandidate(new CandidateInfo(candidate.foundation, candidate.component,\r\n          candidate.transport, candidate.priority, candidate.ip, candidate.port, candidate.type,\r\n          candidate.generation, candidate.relAddr, candidate.relPort));\r\n      });\r\n    }\r\n\r\n    getFormats(mediaInfo, md);\r\n\r\n    const extmaps = md.ext;\r\n    if (extmaps) {\r\n      extmaps.forEach((extmap) => {\r\n        mediaInfo.addExtension(extmap.value, extmap.uri);\r\n      });\r\n    }\r\n\r\n    getRIDs(mediaInfo, md);\r\n\r\n    const encodings = getSimulcast(mediaInfo, md);\r\n\r\n    getTracks(encodings, sdpInfo, md);\r\n\r\n    sdpInfo.addMedia(mediaInfo);\r\n  });\r\n  return sdpInfo;\r\n};\r\n\r\nmodule.exports = SDPInfo;\r\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","class TrackEncodingInfo {\r\n  constructor(id, paused) {\r\n    this.id = id;\r\n    this.paused = paused;\r\n    this.codecs = new Map();\r\n    this.params = new Map();\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new TrackEncodingInfo(this.id, this.paused);\r\n    this.codecs.forEach((codec) => {\r\n      cloned.addCodec(codec.cloned());\r\n    });\r\n    cloned.setParams(this.params);\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      id: this.id,\r\n      paused: this.paused,\r\n      codecs: {},\r\n      params: {},\r\n    };\r\n    this.codecs.keys().forEach((id) => {\r\n      plain.codecs[id] = this.codecs.get(id).plain();\r\n    });\r\n    this.params.keys().forEach((id) => {\r\n      plain.params[id] = this.params.get(id).param;\r\n    });\r\n    return plain;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  getCodecs() {\r\n    return this.codecs;\r\n  }\r\n\r\n  addCodec(codec) {\r\n    this.codecs.set(codec.getType(), codec);\r\n  }\r\n\r\n  getParams() {\r\n    return this.params;\r\n  }\r\n\r\n  setParams(params) {\r\n    this.params = new Map(params);\r\n  }\r\n\r\n  isPaused() {\r\n    return this.paused;\r\n  }\r\n}\r\n\r\nmodule.exports = TrackEncodingInfo;\r\n","class SimulcastStreamInfo {\r\n  constructor(id, paused) {\r\n    this.paused = paused;\r\n    this.id = id;\r\n  }\r\n\r\n  clone() {\r\n    return new SimulcastStreamInfo(this.id, this.paused);\r\n  }\r\n\r\n  plain() {\r\n    return {\r\n      id: this.id,\r\n      paused: this.paused,\r\n    };\r\n  }\r\n\r\n  isPaused() {\r\n    return this.paused;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n}\r\n\r\nmodule.exports = SimulcastStreamInfo;\r\n","const DirectionWay = require('./DirectionWay');\r\n\r\nclass RIDInfo {\r\n  constructor(id, direction) {\r\n    this.id = id;\r\n    this.direction = direction;\r\n    this.formats = [];\r\n    this.params = new Map();\r\n  }\r\n\r\n  clone() {\r\n    const cloned = new RIDInfo(this.id, this.direction);\r\n    cloned.setFormats(this.formats);\r\n    cloned.setParams(this.params);\r\n    return cloned;\r\n  }\r\n\r\n  plain() {\r\n    const plain = {\r\n      id: this.id,\r\n      direction: DirectionWay.toString(this.direction),\r\n      formats: this.formats,\r\n      params: {},\r\n    };\r\n    this.params.forEach((param, id) => {\r\n      plain.params[id] = param;\r\n    });\r\n    return plain;\r\n  }\r\n\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  getDirection() {\r\n    return this.direction;\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.direction = direction;\r\n  }\r\n\r\n  getFormats() {\r\n    return this.formats;\r\n  }\r\n\r\n  setFormats(formats) {\r\n    this.formats = [];\r\n    formats.forEach((format) => {\r\n      this.formats.push(parseInt(format, 10));\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    return this.params;\r\n  }\r\n\r\n  setParams(params) {\r\n    this.params = new Map(params);\r\n  }\r\n}\r\n\r\nmodule.exports = RIDInfo;\r\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = global[\"adapter\"] = require(\"-!.\\\\adapter.js\");","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar SDPUtils = require('sdp');\r\n\r\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\r\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\r\n\r\n  // Map ICE parameters (ufrag, pwd) to SDP.\r\n  sdp += SDPUtils.writeIceParameters(\r\n      transceiver.iceGatherer.getLocalParameters());\r\n\r\n  // Map DTLS parameters to SDP.\r\n  sdp += SDPUtils.writeDtlsParameters(\r\n      transceiver.dtlsTransport.getLocalParameters(),\r\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\r\n\r\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\r\n\r\n  if (transceiver.direction) {\r\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\r\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\r\n    sdp += 'a=sendrecv\\r\\n';\r\n  } else if (transceiver.rtpSender) {\r\n    sdp += 'a=sendonly\\r\\n';\r\n  } else if (transceiver.rtpReceiver) {\r\n    sdp += 'a=recvonly\\r\\n';\r\n  } else {\r\n    sdp += 'a=inactive\\r\\n';\r\n  }\r\n\r\n  if (transceiver.rtpSender) {\r\n    // spec.\r\n    var msid = 'msid:' + stream.id + ' ' +\r\n        transceiver.rtpSender.track.id + '\\r\\n';\r\n    sdp += 'a=' + msid;\r\n\r\n    // for Chrome.\r\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\r\n        ' ' + msid;\r\n    if (transceiver.sendEncodingParameters[0].rtx) {\r\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n          ' ' + msid;\r\n      sdp += 'a=ssrc-group:FID ' +\r\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\r\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n          '\\r\\n';\r\n    }\r\n  }\r\n  // FIXME: this should be written by writeRtpDescription.\r\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\r\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\r\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\r\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\r\n  }\r\n  return sdp;\r\n}\r\n\r\n// Edge does not like\r\n// 1) stun: filtered after 14393 unless ?transport=udp is present\r\n// 2) turn: that does not have all of turn:host:port?transport=udp\r\n// 3) turn: with ipv6 addresses\r\n// 4) turn: occurring muliple times\r\nfunction filterIceServers(iceServers, edgeVersion) {\r\n  var hasTurn = false;\r\n  iceServers = JSON.parse(JSON.stringify(iceServers));\r\n  return iceServers.filter(function(server) {\r\n    if (server && (server.urls || server.url)) {\r\n      var urls = server.urls || server.url;\r\n      if (server.url && !server.urls) {\r\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\r\n      }\r\n      var isString = typeof urls === 'string';\r\n      if (isString) {\r\n        urls = [urls];\r\n      }\r\n      urls = urls.filter(function(url) {\r\n        var validTurn = url.indexOf('turn:') === 0 &&\r\n            url.indexOf('transport=udp') !== -1 &&\r\n            url.indexOf('turn:[') === -1 &&\r\n            !hasTurn;\r\n\r\n        if (validTurn) {\r\n          hasTurn = true;\r\n          return true;\r\n        }\r\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\r\n            url.indexOf('?transport=udp') === -1;\r\n      });\r\n\r\n      delete server.url;\r\n      server.urls = isString ? urls[0] : urls;\r\n      return !!urls.length;\r\n    }\r\n    return false;\r\n  });\r\n}\r\n\r\n// Determines the intersection of local and remote capabilities.\r\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\r\n  var commonCapabilities = {\r\n    codecs: [],\r\n    headerExtensions: [],\r\n    fecMechanisms: []\r\n  };\r\n\r\n  var findCodecByPayloadType = function(pt, codecs) {\r\n    pt = parseInt(pt, 10);\r\n    for (var i = 0; i < codecs.length; i++) {\r\n      if (codecs[i].payloadType === pt ||\r\n          codecs[i].preferredPayloadType === pt) {\r\n        return codecs[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\r\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\r\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\r\n    return lCodec && rCodec &&\r\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\r\n  };\r\n\r\n  localCapabilities.codecs.forEach(function(lCodec) {\r\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\r\n      var rCodec = remoteCapabilities.codecs[i];\r\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\r\n          lCodec.clockRate === rCodec.clockRate) {\r\n        if (lCodec.name.toLowerCase() === 'rtx' &&\r\n            lCodec.parameters && rCodec.parameters.apt) {\r\n          // for RTX we need to find the local rtx that has a apt\r\n          // which points to the same local codec as the remote one.\r\n          if (!rtxCapabilityMatches(lCodec, rCodec,\r\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\r\n            continue;\r\n          }\r\n        }\r\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\r\n        // number of channels is the highest common number of channels\r\n        rCodec.numChannels = Math.min(lCodec.numChannels,\r\n            rCodec.numChannels);\r\n        // push rCodec so we reply with offerer payload type\r\n        commonCapabilities.codecs.push(rCodec);\r\n\r\n        // determine common feedback mechanisms\r\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\r\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\r\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\r\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        });\r\n        // FIXME: also need to determine .parameters\r\n        //  see https://github.com/openpeer/ortc/issues/569\r\n        break;\r\n      }\r\n    }\r\n  });\r\n\r\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\r\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\r\n         i++) {\r\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\r\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\r\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n\r\n  // FIXME: fecMechanisms\r\n  return commonCapabilities;\r\n}\r\n\r\n// is action=setLocalDescription with type allowed in signalingState\r\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\r\n  return {\r\n    offer: {\r\n      setLocalDescription: ['stable', 'have-local-offer'],\r\n      setRemoteDescription: ['stable', 'have-remote-offer']\r\n    },\r\n    answer: {\r\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\r\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\r\n    }\r\n  }[type][action].indexOf(signalingState) !== -1;\r\n}\r\n\r\nfunction maybeAddCandidate(iceTransport, candidate) {\r\n  // Edge's internal representation adds some fields therefore\r\n  // not all fieldѕ are taken into account.\r\n  var alreadyAdded = iceTransport.getRemoteCandidates()\r\n      .find(function(remoteCandidate) {\r\n        return candidate.foundation === remoteCandidate.foundation &&\r\n            candidate.ip === remoteCandidate.ip &&\r\n            candidate.port === remoteCandidate.port &&\r\n            candidate.priority === remoteCandidate.priority &&\r\n            candidate.protocol === remoteCandidate.protocol &&\r\n            candidate.type === remoteCandidate.type;\r\n      });\r\n  if (!alreadyAdded) {\r\n    iceTransport.addRemoteCandidate(candidate);\r\n  }\r\n  return !alreadyAdded;\r\n}\r\n\r\nmodule.exports = function(window, edgeVersion) {\r\n  var RTCPeerConnection = function(config) {\r\n    var self = this;\r\n\r\n    var _eventTarget = document.createDocumentFragment();\r\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\r\n        .forEach(function(method) {\r\n          self[method] = _eventTarget[method].bind(_eventTarget);\r\n        });\r\n\r\n    this.onicecandidate = null;\r\n    this.onaddstream = null;\r\n    this.ontrack = null;\r\n    this.onremovestream = null;\r\n    this.onsignalingstatechange = null;\r\n    this.oniceconnectionstatechange = null;\r\n    this.onicegatheringstatechange = null;\r\n    this.onnegotiationneeded = null;\r\n    this.ondatachannel = null;\r\n    this.canTrickleIceCandidates = null;\r\n\r\n    this.needNegotiation = false;\r\n\r\n    this.localStreams = [];\r\n    this.remoteStreams = [];\r\n\r\n    this.localDescription = null;\r\n    this.remoteDescription = null;\r\n\r\n    this.signalingState = 'stable';\r\n    this.iceConnectionState = 'new';\r\n    this.iceGatheringState = 'new';\r\n\r\n    config = JSON.parse(JSON.stringify(config || {}));\r\n\r\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\r\n    if (config.rtcpMuxPolicy === 'negotiate') {\r\n      var e = new Error('rtcpMuxPolicy \\'negotiate\\' is not supported');\r\n      e.name = 'NotSupportedError';\r\n      throw(e);\r\n    } else if (!config.rtcpMuxPolicy) {\r\n      config.rtcpMuxPolicy = 'require';\r\n    }\r\n\r\n    switch (config.iceTransportPolicy) {\r\n      case 'all':\r\n      case 'relay':\r\n        break;\r\n      default:\r\n        config.iceTransportPolicy = 'all';\r\n        break;\r\n    }\r\n\r\n    switch (config.bundlePolicy) {\r\n      case 'balanced':\r\n      case 'max-compat':\r\n      case 'max-bundle':\r\n        break;\r\n      default:\r\n        config.bundlePolicy = 'balanced';\r\n        break;\r\n    }\r\n\r\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\r\n\r\n    this._iceGatherers = [];\r\n    if (config.iceCandidatePoolSize) {\r\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\r\n        this._iceGatherers = new window.RTCIceGatherer({\r\n          iceServers: config.iceServers,\r\n          gatherPolicy: config.iceTransportPolicy\r\n        });\r\n      }\r\n    } else {\r\n      config.iceCandidatePoolSize = 0;\r\n    }\r\n\r\n    this._config = config;\r\n\r\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\r\n    // everything that is needed to describe a SDP m-line.\r\n    this.transceivers = [];\r\n\r\n    this._sdpSessionId = SDPUtils.generateSessionId();\r\n    this._sdpSessionVersion = 0;\r\n\r\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\r\n  };\r\n\r\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\r\n    var event = new Event('icegatheringstatechange');\r\n    this.dispatchEvent(event);\r\n    if (typeof this.onicegatheringstatechange === 'function') {\r\n      this.onicegatheringstatechange(event);\r\n    }\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getConfiguration = function() {\r\n    return this._config;\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getLocalStreams = function() {\r\n    return this.localStreams;\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\r\n    return this.remoteStreams;\r\n  };\r\n\r\n  // internal helper to create a transceiver object.\r\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\r\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\r\n    var hasBundleTransport = this.transceivers.length > 0;\r\n    var transceiver = {\r\n      track: null,\r\n      iceGatherer: null,\r\n      iceTransport: null,\r\n      dtlsTransport: null,\r\n      localCapabilities: null,\r\n      remoteCapabilities: null,\r\n      rtpSender: null,\r\n      rtpReceiver: null,\r\n      kind: kind,\r\n      mid: null,\r\n      sendEncodingParameters: null,\r\n      recvEncodingParameters: null,\r\n      stream: null,\r\n      wantReceive: true\r\n    };\r\n    if (this.usingBundle && hasBundleTransport) {\r\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\r\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\r\n    } else {\r\n      var transports = this._createIceAndDtlsTransports();\r\n      transceiver.iceTransport = transports.iceTransport;\r\n      transceiver.dtlsTransport = transports.dtlsTransport;\r\n    }\r\n    this.transceivers.push(transceiver);\r\n    return transceiver;\r\n  };\r\n\r\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\r\n    var transceiver;\r\n    for (var i = 0; i < this.transceivers.length; i++) {\r\n      if (!this.transceivers[i].track &&\r\n          this.transceivers[i].kind === track.kind) {\r\n        transceiver = this.transceivers[i];\r\n      }\r\n    }\r\n    if (!transceiver) {\r\n      transceiver = this._createTransceiver(track.kind);\r\n    }\r\n\r\n    this._maybeFireNegotiationNeeded();\r\n\r\n    if (this.localStreams.indexOf(stream) === -1) {\r\n      this.localStreams.push(stream);\r\n    }\r\n\r\n    transceiver.track = track;\r\n    transceiver.stream = stream;\r\n    transceiver.rtpSender = new window.RTCRtpSender(track,\r\n        transceiver.dtlsTransport);\r\n    return transceiver.rtpSender;\r\n  };\r\n\r\n  RTCPeerConnection.prototype.addStream = function(stream) {\r\n    var self = this;\r\n    if (edgeVersion >= 15025) {\r\n      stream.getTracks().forEach(function(track) {\r\n        self.addTrack(track, stream);\r\n      });\r\n    } else {\r\n      // Clone is necessary for local demos mostly, attaching directly\r\n      // to two different senders does not work (build 10547).\r\n      // Fixed in 15025 (or earlier)\r\n      var clonedStream = stream.clone();\r\n      stream.getTracks().forEach(function(track, idx) {\r\n        var clonedTrack = clonedStream.getTracks()[idx];\r\n        track.addEventListener('enabled', function(event) {\r\n          clonedTrack.enabled = event.enabled;\r\n        });\r\n      });\r\n      clonedStream.getTracks().forEach(function(track) {\r\n        self.addTrack(track, clonedStream);\r\n      });\r\n    }\r\n  };\r\n\r\n  RTCPeerConnection.prototype.removeStream = function(stream) {\r\n    var idx = this.localStreams.indexOf(stream);\r\n    if (idx > -1) {\r\n      this.localStreams.splice(idx, 1);\r\n      this._maybeFireNegotiationNeeded();\r\n    }\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getSenders = function() {\r\n    return this.transceivers.filter(function(transceiver) {\r\n      return !!transceiver.rtpSender;\r\n    })\r\n    .map(function(transceiver) {\r\n      return transceiver.rtpSender;\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getReceivers = function() {\r\n    return this.transceivers.filter(function(transceiver) {\r\n      return !!transceiver.rtpReceiver;\r\n    })\r\n    .map(function(transceiver) {\r\n      return transceiver.rtpReceiver;\r\n    });\r\n  };\r\n\r\n\r\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\r\n      usingBundle) {\r\n    var self = this;\r\n    if (usingBundle && sdpMLineIndex > 0) {\r\n      return this.transceivers[0].iceGatherer;\r\n    } else if (this._iceGatherers.length) {\r\n      return this._iceGatherers.shift();\r\n    }\r\n    var iceGatherer = new window.RTCIceGatherer({\r\n      iceServers: this._config.iceServers,\r\n      gatherPolicy: this._config.iceTransportPolicy\r\n    });\r\n    Object.defineProperty(iceGatherer, 'state',\r\n        {value: 'new', writable: true}\r\n    );\r\n\r\n    this.transceivers[sdpMLineIndex].candidates = [];\r\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\r\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\r\n      // polyfill since RTCIceGatherer.state is not implemented in\r\n      // Edge 10547 yet.\r\n      iceGatherer.state = end ? 'completed' : 'gathering';\r\n      if (self.transceivers[sdpMLineIndex].candidates !== null) {\r\n        self.transceivers[sdpMLineIndex].candidates.push(event.candidate);\r\n      }\r\n    };\r\n    iceGatherer.addEventListener('localcandidate',\r\n      this.transceivers[sdpMLineIndex].bufferCandidates);\r\n    return iceGatherer;\r\n  };\r\n\r\n  // start gathering from an RTCIceGatherer.\r\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\r\n    var self = this;\r\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\r\n    if (iceGatherer.onlocalcandidate) {\r\n      return;\r\n    }\r\n    var candidates = this.transceivers[sdpMLineIndex].candidates;\r\n    this.transceivers[sdpMLineIndex].candidates = null;\r\n    iceGatherer.removeEventListener('localcandidate',\r\n      this.transceivers[sdpMLineIndex].bufferCandidates);\r\n    iceGatherer.onlocalcandidate = function(evt) {\r\n      if (self.usingBundle && sdpMLineIndex > 0) {\r\n        // if we know that we use bundle we can drop candidates with\r\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\r\n        // confused since we dispose the extra ice gatherer.\r\n        return;\r\n      }\r\n      var event = new Event('icecandidate');\r\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\r\n\r\n      var cand = evt.candidate;\r\n      // Edge emits an empty object for RTCIceCandidateComplete‥\r\n      var end = !cand || Object.keys(cand).length === 0;\r\n      if (end) {\r\n        // polyfill since RTCIceGatherer.state is not implemented in\r\n        // Edge 10547 yet.\r\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\r\n          iceGatherer.state = 'completed';\r\n        }\r\n      } else {\r\n        if (iceGatherer.state === 'new') {\r\n          iceGatherer.state = 'gathering';\r\n        }\r\n        // RTCIceCandidate doesn't have a component, needs to be added\r\n        cand.component = 1;\r\n        event.candidate.candidate = SDPUtils.writeCandidate(cand);\r\n      }\r\n\r\n      // update local description.\r\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\r\n      if (!end) {\r\n        sections[event.candidate.sdpMLineIndex + 1] +=\r\n            'a=' + event.candidate.candidate + '\\r\\n';\r\n      } else {\r\n        sections[event.candidate.sdpMLineIndex + 1] +=\r\n            'a=end-of-candidates\\r\\n';\r\n      }\r\n      self.localDescription.sdp = sections.join('');\r\n      var complete = self.transceivers.every(function(transceiver) {\r\n        return transceiver.iceGatherer &&\r\n            transceiver.iceGatherer.state === 'completed';\r\n      });\r\n\r\n      if (self.iceGatheringState !== 'gathering') {\r\n        self.iceGatheringState = 'gathering';\r\n        self._emitGatheringStateChange();\r\n      }\r\n\r\n      // Emit candidate. Also emit null candidate when all gatherers are\r\n      // complete.\r\n      if (!end) {\r\n        self.dispatchEvent(event);\r\n        if (typeof self.onicecandidate === 'function') {\r\n          self.onicecandidate(event);\r\n        }\r\n      }\r\n      if (complete) {\r\n        self.dispatchEvent(new Event('icecandidate'));\r\n        if (typeof self.onicecandidate === 'function') {\r\n          self.onicecandidate(new Event('icecandidate'));\r\n        }\r\n        self.iceGatheringState = 'complete';\r\n        self._emitGatheringStateChange();\r\n      }\r\n    };\r\n\r\n    // emit already gathered candidates.\r\n    window.setTimeout(function() {\r\n      candidates.forEach(function(candidate) {\r\n        var e = new Event('RTCIceGatherEvent');\r\n        e.candidate = candidate;\r\n        iceGatherer.onlocalcandidate(e);\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  // Create ICE transport and DTLS transport.\r\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\r\n    var self = this;\r\n    var iceTransport = new window.RTCIceTransport(null);\r\n    iceTransport.onicestatechange = function() {\r\n      self._updateConnectionState();\r\n    };\r\n\r\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\r\n    dtlsTransport.ondtlsstatechange = function() {\r\n      self._updateConnectionState();\r\n    };\r\n    dtlsTransport.onerror = function() {\r\n      // onerror does not set state to failed by itself.\r\n      Object.defineProperty(dtlsTransport, 'state',\r\n          {value: 'failed', writable: true});\r\n      self._updateConnectionState();\r\n    };\r\n\r\n    return {\r\n      iceTransport: iceTransport,\r\n      dtlsTransport: dtlsTransport\r\n    };\r\n  };\r\n\r\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\r\n  // Without triggering the callbacks.\r\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\r\n      sdpMLineIndex) {\r\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\r\n    if (iceGatherer) {\r\n      delete iceGatherer.onlocalcandidate;\r\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\r\n    }\r\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\r\n    if (iceTransport) {\r\n      delete iceTransport.onicestatechange;\r\n      delete this.transceivers[sdpMLineIndex].iceTransport;\r\n    }\r\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\r\n    if (dtlsTransport) {\r\n      delete dtlsTransport.ondtlsstatechange;\r\n      delete dtlsTransport.onerror;\r\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\r\n    }\r\n  };\r\n\r\n  // Start the RTP Sender and Receiver for a transceiver.\r\n  RTCPeerConnection.prototype._transceive = function(transceiver,\r\n      send, recv) {\r\n    var params = getCommonCapabilities(transceiver.localCapabilities,\r\n        transceiver.remoteCapabilities);\r\n    if (send && transceiver.rtpSender) {\r\n      params.encodings = transceiver.sendEncodingParameters;\r\n      params.rtcp = {\r\n        cname: SDPUtils.localCName,\r\n        compound: transceiver.rtcpParameters.compound\r\n      };\r\n      if (transceiver.recvEncodingParameters.length) {\r\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\r\n      }\r\n      transceiver.rtpSender.send(params);\r\n    }\r\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\r\n      // remove RTX field in Edge 14942\r\n      if (transceiver.kind === 'video'\r\n          && transceiver.recvEncodingParameters\r\n          && edgeVersion < 15019) {\r\n        transceiver.recvEncodingParameters.forEach(function(p) {\r\n          delete p.rtx;\r\n        });\r\n      }\r\n      params.encodings = transceiver.recvEncodingParameters;\r\n      params.rtcp = {\r\n        cname: transceiver.rtcpParameters.cname,\r\n        compound: transceiver.rtcpParameters.compound\r\n      };\r\n      if (transceiver.sendEncodingParameters.length) {\r\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\r\n      }\r\n      transceiver.rtpReceiver.receive(params);\r\n    }\r\n  };\r\n\r\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    if (!isActionAllowedInSignalingState('setLocalDescription',\r\n        description.type, this.signalingState)) {\r\n      return new Promise(function(resolve, reject) {\r\n        var e = new Error('Can not set local ' + description.type +\r\n            ' in state ' + self.signalingState);\r\n        e.name = 'InvalidStateError';\r\n        if (args.length > 2 && typeof args[2] === 'function') {\r\n          args[2].apply(null, [e]);\r\n        }\r\n        reject(e);\r\n      });\r\n    }\r\n\r\n    var sections;\r\n    var sessionpart;\r\n    if (description.type === 'offer') {\r\n      // VERY limited support for SDP munging. Limited to:\r\n      // * changing the order of codecs\r\n      sections = SDPUtils.splitSections(description.sdp);\r\n      sessionpart = sections.shift();\r\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\r\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\r\n        self.transceivers[sdpMLineIndex].localCapabilities = caps;\r\n      });\r\n\r\n      this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\r\n        self._gather(transceiver.mid, sdpMLineIndex);\r\n      });\r\n    } else if (description.type === 'answer') {\r\n      sections = SDPUtils.splitSections(self.remoteDescription.sdp);\r\n      sessionpart = sections.shift();\r\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\r\n          'a=ice-lite').length > 0;\r\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\r\n        var transceiver = self.transceivers[sdpMLineIndex];\r\n        var iceGatherer = transceiver.iceGatherer;\r\n        var iceTransport = transceiver.iceTransport;\r\n        var dtlsTransport = transceiver.dtlsTransport;\r\n        var localCapabilities = transceiver.localCapabilities;\r\n        var remoteCapabilities = transceiver.remoteCapabilities;\r\n\r\n        // treat bundle-only as not-rejected.\r\n        var rejected = SDPUtils.isRejected(mediaSection) &&\r\n            !SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 1;\r\n\r\n        if (!rejected && !transceiver.isDatachannel) {\r\n          var remoteIceParameters = SDPUtils.getIceParameters(\r\n              mediaSection, sessionpart);\r\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\r\n              mediaSection, sessionpart);\r\n          if (isIceLite) {\r\n            remoteDtlsParameters.role = 'server';\r\n          }\r\n\r\n          if (!self.usingBundle || sdpMLineIndex === 0) {\r\n            self._gather(transceiver.mid, sdpMLineIndex);\r\n            if (iceTransport.state === 'new') {\r\n              iceTransport.start(iceGatherer, remoteIceParameters,\r\n                  isIceLite ? 'controlling' : 'controlled');\r\n            }\r\n            if (dtlsTransport.state === 'new') {\r\n              dtlsTransport.start(remoteDtlsParameters);\r\n            }\r\n          }\r\n\r\n          // Calculate intersection of capabilities.\r\n          var params = getCommonCapabilities(localCapabilities,\r\n              remoteCapabilities);\r\n\r\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\r\n          // transceiver has already been started in setRemoteDescription.\r\n          self._transceive(transceiver,\r\n              params.codecs.length > 0,\r\n              false);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.localDescription = {\r\n      type: description.type,\r\n      sdp: description.sdp\r\n    };\r\n    switch (description.type) {\r\n      case 'offer':\r\n        this._updateSignalingState('have-local-offer');\r\n        break;\r\n      case 'answer':\r\n        this._updateSignalingState('stable');\r\n        break;\r\n      default:\r\n        throw new TypeError('unsupported type \"' + description.type +\r\n            '\"');\r\n    }\r\n\r\n    // If a success callback was provided, emit ICE candidates after it\r\n    // has been executed. Otherwise, emit callback after the Promise is\r\n    // resolved.\r\n    var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\r\n        arguments[1];\r\n    return new Promise(function(resolve) {\r\n      if (cb) {\r\n        cb.apply(null);\r\n      }\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\r\n        description.type, this.signalingState)) {\r\n      return new Promise(function(resolve, reject) {\r\n        var e = new Error('Can not set remote ' + description.type +\r\n            ' in state ' + self.signalingState);\r\n        e.name = 'InvalidStateError';\r\n        if (args.length > 2 && typeof args[2] === 'function') {\r\n          args[2].apply(null, [e]);\r\n        }\r\n        reject(e);\r\n      });\r\n    }\r\n\r\n    var streams = {};\r\n    this.remoteStreams.forEach(function(stream) {\r\n      streams[stream.id] = stream;\r\n    });\r\n    var receiverList = [];\r\n    var sections = SDPUtils.splitSections(description.sdp);\r\n    var sessionpart = sections.shift();\r\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\r\n        'a=ice-lite').length > 0;\r\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\r\n        'a=group:BUNDLE ').length > 0;\r\n    this.usingBundle = usingBundle;\r\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\r\n        'a=ice-options:')[0];\r\n    if (iceOptions) {\r\n      this.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\r\n          .indexOf('trickle') >= 0;\r\n    } else {\r\n      this.canTrickleIceCandidates = false;\r\n    }\r\n\r\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\r\n      var lines = SDPUtils.splitLines(mediaSection);\r\n      var kind = SDPUtils.getKind(mediaSection);\r\n      // treat bundle-only as not-rejected.\r\n      var rejected = SDPUtils.isRejected(mediaSection) &&\r\n          !SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 1;\r\n      var protocol = lines[0].substr(2).split(' ')[2];\r\n\r\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\r\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\r\n\r\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\r\n\r\n      // Reject datachannels which are not implemented yet.\r\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\r\n        self.transceivers[sdpMLineIndex] = {\r\n          mid: mid,\r\n          isDatachannel: true\r\n        };\r\n        return;\r\n      }\r\n\r\n      var transceiver;\r\n      var iceGatherer;\r\n      var iceTransport;\r\n      var dtlsTransport;\r\n      var rtpReceiver;\r\n      var sendEncodingParameters;\r\n      var recvEncodingParameters;\r\n      var localCapabilities;\r\n\r\n      var track;\r\n      // FIXME: ensure the mediaSection has rtcp-mux set.\r\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\r\n      var remoteIceParameters;\r\n      var remoteDtlsParameters;\r\n      if (!rejected) {\r\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\r\n            sessionpart);\r\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\r\n            sessionpart);\r\n        remoteDtlsParameters.role = 'client';\r\n      }\r\n      recvEncodingParameters =\r\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\r\n\r\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\r\n\r\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\r\n          'a=end-of-candidates', sessionpart).length > 0;\r\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\r\n          .map(function(cand) {\r\n            return SDPUtils.parseCandidate(cand);\r\n          })\r\n          .filter(function(cand) {\r\n            return cand.component === 1;\r\n          });\r\n\r\n      // Check if we can use BUNDLE and dispose transports.\r\n      if ((description.type === 'offer' || description.type === 'answer') &&\r\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\r\n          self.transceivers[sdpMLineIndex]) {\r\n        self._disposeIceAndDtlsTransports(sdpMLineIndex);\r\n        self.transceivers[sdpMLineIndex].iceGatherer =\r\n            self.transceivers[0].iceGatherer;\r\n        self.transceivers[sdpMLineIndex].iceTransport =\r\n            self.transceivers[0].iceTransport;\r\n        self.transceivers[sdpMLineIndex].dtlsTransport =\r\n            self.transceivers[0].dtlsTransport;\r\n        if (self.transceivers[sdpMLineIndex].rtpSender) {\r\n          self.transceivers[sdpMLineIndex].rtpSender.setTransport(\r\n              self.transceivers[0].dtlsTransport);\r\n        }\r\n        if (self.transceivers[sdpMLineIndex].rtpReceiver) {\r\n          self.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\r\n              self.transceivers[0].dtlsTransport);\r\n        }\r\n      }\r\n      if (description.type === 'offer' && !rejected) {\r\n        transceiver = self.transceivers[sdpMLineIndex] ||\r\n            self._createTransceiver(kind);\r\n        transceiver.mid = mid;\r\n\r\n        if (!transceiver.iceGatherer) {\r\n          transceiver.iceGatherer = self._createIceGatherer(sdpMLineIndex,\r\n              usingBundle);\r\n        }\r\n\r\n        if (cands.length && transceiver.iceTransport.state === 'new') {\r\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\r\n            transceiver.iceTransport.setRemoteCandidates(cands);\r\n          } else {\r\n            cands.forEach(function(candidate) {\r\n              maybeAddCandidate(transceiver.iceTransport, candidate);\r\n            });\r\n          }\r\n        }\r\n\r\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\r\n\r\n        // filter RTX until additional stuff needed for RTX is implemented\r\n        // in adapter.js\r\n        if (edgeVersion < 15019) {\r\n          localCapabilities.codecs = localCapabilities.codecs.filter(\r\n              function(codec) {\r\n                return codec.name !== 'rtx';\r\n              });\r\n        }\r\n\r\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\r\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\r\n        }];\r\n\r\n        var isNewTrack = false;\r\n        if (direction === 'sendrecv' || direction === 'sendonly') {\r\n          isNewTrack = !transceiver.rtpReceiver;\r\n          rtpReceiver = transceiver.rtpReceiver ||\r\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\r\n\r\n          if (isNewTrack) {\r\n            var stream;\r\n            track = rtpReceiver.track;\r\n            // FIXME: does not work with Plan B.\r\n            if (remoteMsid) {\r\n              if (!streams[remoteMsid.stream]) {\r\n                streams[remoteMsid.stream] = new window.MediaStream();\r\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\r\n                  get: function() {\r\n                    return remoteMsid.stream;\r\n                  }\r\n                });\r\n              }\r\n              Object.defineProperty(track, 'id', {\r\n                get: function() {\r\n                  return remoteMsid.track;\r\n                }\r\n              });\r\n              stream = streams[remoteMsid.stream];\r\n            } else {\r\n              if (!streams.default) {\r\n                streams.default = new window.MediaStream();\r\n              }\r\n              stream = streams.default;\r\n            }\r\n            stream.addTrack(track);\r\n            receiverList.push([track, rtpReceiver, stream]);\r\n          }\r\n        }\r\n\r\n        transceiver.localCapabilities = localCapabilities;\r\n        transceiver.remoteCapabilities = remoteCapabilities;\r\n        transceiver.rtpReceiver = rtpReceiver;\r\n        transceiver.rtcpParameters = rtcpParameters;\r\n        transceiver.sendEncodingParameters = sendEncodingParameters;\r\n        transceiver.recvEncodingParameters = recvEncodingParameters;\r\n\r\n        // Start the RTCRtpReceiver now. The RTPSender is started in\r\n        // setLocalDescription.\r\n        self._transceive(self.transceivers[sdpMLineIndex],\r\n            false,\r\n            isNewTrack);\r\n      } else if (description.type === 'answer' && !rejected) {\r\n        transceiver = self.transceivers[sdpMLineIndex];\r\n        iceGatherer = transceiver.iceGatherer;\r\n        iceTransport = transceiver.iceTransport;\r\n        dtlsTransport = transceiver.dtlsTransport;\r\n        rtpReceiver = transceiver.rtpReceiver;\r\n        sendEncodingParameters = transceiver.sendEncodingParameters;\r\n        localCapabilities = transceiver.localCapabilities;\r\n\r\n        self.transceivers[sdpMLineIndex].recvEncodingParameters =\r\n            recvEncodingParameters;\r\n        self.transceivers[sdpMLineIndex].remoteCapabilities =\r\n            remoteCapabilities;\r\n        self.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\r\n\r\n        if (cands.length && iceTransport.state === 'new') {\r\n          if ((isIceLite || isComplete) &&\r\n              (!usingBundle || sdpMLineIndex === 0)) {\r\n            iceTransport.setRemoteCandidates(cands);\r\n          } else {\r\n            cands.forEach(function(candidate) {\r\n              maybeAddCandidate(transceiver.iceTransport, candidate);\r\n            });\r\n          }\r\n        }\r\n\r\n        if (!usingBundle || sdpMLineIndex === 0) {\r\n          if (iceTransport.state === 'new') {\r\n            iceTransport.start(iceGatherer, remoteIceParameters,\r\n                'controlling');\r\n          }\r\n          if (dtlsTransport.state === 'new') {\r\n            dtlsTransport.start(remoteDtlsParameters);\r\n          }\r\n        }\r\n\r\n        self._transceive(transceiver,\r\n            direction === 'sendrecv' || direction === 'recvonly',\r\n            direction === 'sendrecv' || direction === 'sendonly');\r\n\r\n        if (rtpReceiver &&\r\n            (direction === 'sendrecv' || direction === 'sendonly')) {\r\n          track = rtpReceiver.track;\r\n          if (remoteMsid) {\r\n            if (!streams[remoteMsid.stream]) {\r\n              streams[remoteMsid.stream] = new window.MediaStream();\r\n            }\r\n            streams[remoteMsid.stream].addTrack(track);\r\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\r\n          } else {\r\n            if (!streams.default) {\r\n              streams.default = new window.MediaStream();\r\n            }\r\n            streams.default.addTrack(track);\r\n            receiverList.push([track, rtpReceiver, streams.default]);\r\n          }\r\n        } else {\r\n          // FIXME: actually the receiver should be created later.\r\n          delete transceiver.rtpReceiver;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this._dtlsRole === undefined) {\r\n      this._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\r\n    }\r\n\r\n    this.remoteDescription = {\r\n      type: description.type,\r\n      sdp: description.sdp\r\n    };\r\n    switch (description.type) {\r\n      case 'offer':\r\n        this._updateSignalingState('have-remote-offer');\r\n        break;\r\n      case 'answer':\r\n        this._updateSignalingState('stable');\r\n        break;\r\n      default:\r\n        throw new TypeError('unsupported type \"' + description.type +\r\n            '\"');\r\n    }\r\n    Object.keys(streams).forEach(function(sid) {\r\n      var stream = streams[sid];\r\n      if (stream.getTracks().length) {\r\n        if (self.remoteStreams.indexOf(stream) === -1) {\r\n          self.remoteStreams.push(stream);\r\n          var event = new Event('addstream');\r\n          event.stream = stream;\r\n          window.setTimeout(function() {\r\n            self.dispatchEvent(event);\r\n            if (typeof self.onaddstream === 'function') {\r\n              self.onaddstream(event);\r\n            }\r\n          });\r\n        }\r\n\r\n        receiverList.forEach(function(item) {\r\n          var track = item[0];\r\n          var receiver = item[1];\r\n          if (stream.id !== item[2].id) {\r\n            return;\r\n          }\r\n          var trackEvent = new Event('track');\r\n          trackEvent.track = track;\r\n          trackEvent.receiver = receiver;\r\n          trackEvent.transceiver = {receiver: receiver};\r\n          trackEvent.streams = [stream];\r\n          window.setTimeout(function() {\r\n            self.dispatchEvent(trackEvent);\r\n            if (typeof self.ontrack === 'function') {\r\n              self.ontrack(trackEvent);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    // check whether addIceCandidate({}) was called within four seconds after\r\n    // setRemoteDescription.\r\n    window.setTimeout(function() {\r\n      if (!(self && self.transceivers)) {\r\n        return;\r\n      }\r\n      self.transceivers.forEach(function(transceiver) {\r\n        if (transceiver.iceTransport &&\r\n            transceiver.iceTransport.state === 'new' &&\r\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\r\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\r\n              'an end-of-candidates notification');\r\n          transceiver.iceTransport.addRemoteCandidate({});\r\n        }\r\n      });\r\n    }, 4000);\r\n\r\n    return new Promise(function(resolve) {\r\n      if (args.length > 1 && typeof args[1] === 'function') {\r\n        args[1].apply(null);\r\n      }\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.close = function() {\r\n    this.transceivers.forEach(function(transceiver) {\r\n      /* not yet\r\n      if (transceiver.iceGatherer) {\r\n        transceiver.iceGatherer.close();\r\n      }\r\n      */\r\n      if (transceiver.iceTransport) {\r\n        transceiver.iceTransport.stop();\r\n      }\r\n      if (transceiver.dtlsTransport) {\r\n        transceiver.dtlsTransport.stop();\r\n      }\r\n      if (transceiver.rtpSender) {\r\n        transceiver.rtpSender.stop();\r\n      }\r\n      if (transceiver.rtpReceiver) {\r\n        transceiver.rtpReceiver.stop();\r\n      }\r\n    });\r\n    // FIXME: clean up tracks, local streams, remote streams, etc\r\n    this._updateSignalingState('closed');\r\n  };\r\n\r\n  // Update the signaling state.\r\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\r\n    this.signalingState = newState;\r\n    var event = new Event('signalingstatechange');\r\n    this.dispatchEvent(event);\r\n    if (typeof this.onsignalingstatechange === 'function') {\r\n      this.onsignalingstatechange(event);\r\n    }\r\n  };\r\n\r\n  // Determine whether to fire the negotiationneeded event.\r\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\r\n    var self = this;\r\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\r\n      return;\r\n    }\r\n    this.needNegotiation = true;\r\n    window.setTimeout(function() {\r\n      if (self.needNegotiation === false) {\r\n        return;\r\n      }\r\n      self.needNegotiation = false;\r\n      var event = new Event('negotiationneeded');\r\n      self.dispatchEvent(event);\r\n      if (typeof self.onnegotiationneeded === 'function') {\r\n        self.onnegotiationneeded(event);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  // Update the connection state.\r\n  RTCPeerConnection.prototype._updateConnectionState = function() {\r\n    var newState;\r\n    var states = {\r\n      'new': 0,\r\n      closed: 0,\r\n      connecting: 0,\r\n      checking: 0,\r\n      connected: 0,\r\n      completed: 0,\r\n      disconnected: 0,\r\n      failed: 0\r\n    };\r\n    this.transceivers.forEach(function(transceiver) {\r\n      states[transceiver.iceTransport.state]++;\r\n      states[transceiver.dtlsTransport.state]++;\r\n    });\r\n    // ICETransport.completed and connected are the same for this purpose.\r\n    states.connected += states.completed;\r\n\r\n    newState = 'new';\r\n    if (states.failed > 0) {\r\n      newState = 'failed';\r\n    } else if (states.connecting > 0 || states.checking > 0) {\r\n      newState = 'connecting';\r\n    } else if (states.disconnected > 0) {\r\n      newState = 'disconnected';\r\n    } else if (states.new > 0) {\r\n      newState = 'new';\r\n    } else if (states.connected > 0 || states.completed > 0) {\r\n      newState = 'connected';\r\n    }\r\n\r\n    if (newState !== this.iceConnectionState) {\r\n      this.iceConnectionState = newState;\r\n      var event = new Event('iceconnectionstatechange');\r\n      this.dispatchEvent(event);\r\n      if (typeof this.oniceconnectionstatechange === 'function') {\r\n        this.oniceconnectionstatechange(event);\r\n      }\r\n    }\r\n  };\r\n\r\n  RTCPeerConnection.prototype.createOffer = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    var offerOptions;\r\n    if (arguments.length === 1 && typeof arguments[0] !== 'function') {\r\n      offerOptions = arguments[0];\r\n    } else if (arguments.length === 3) {\r\n      offerOptions = arguments[2];\r\n    }\r\n\r\n    var numAudioTracks = this.transceivers.filter(function(t) {\r\n      return t.kind === 'audio';\r\n    }).length;\r\n    var numVideoTracks = this.transceivers.filter(function(t) {\r\n      return t.kind === 'video';\r\n    }).length;\r\n\r\n    // Determine number of audio and video tracks we need to send/recv.\r\n    if (offerOptions) {\r\n      // Reject Chrome legacy constraints.\r\n      if (offerOptions.mandatory || offerOptions.optional) {\r\n        throw new TypeError(\r\n            'Legacy mandatory/optional constraints not supported.');\r\n      }\r\n      if (offerOptions.offerToReceiveAudio !== undefined) {\r\n        if (offerOptions.offerToReceiveAudio === true) {\r\n          numAudioTracks = 1;\r\n        } else if (offerOptions.offerToReceiveAudio === false) {\r\n          numAudioTracks = 0;\r\n        } else {\r\n          numAudioTracks = offerOptions.offerToReceiveAudio;\r\n        }\r\n      }\r\n      if (offerOptions.offerToReceiveVideo !== undefined) {\r\n        if (offerOptions.offerToReceiveVideo === true) {\r\n          numVideoTracks = 1;\r\n        } else if (offerOptions.offerToReceiveVideo === false) {\r\n          numVideoTracks = 0;\r\n        } else {\r\n          numVideoTracks = offerOptions.offerToReceiveVideo;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.transceivers.forEach(function(transceiver) {\r\n      if (transceiver.kind === 'audio') {\r\n        numAudioTracks--;\r\n        if (numAudioTracks < 0) {\r\n          transceiver.wantReceive = false;\r\n        }\r\n      } else if (transceiver.kind === 'video') {\r\n        numVideoTracks--;\r\n        if (numVideoTracks < 0) {\r\n          transceiver.wantReceive = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Create M-lines for recvonly streams.\r\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\r\n      if (numAudioTracks > 0) {\r\n        this._createTransceiver('audio');\r\n        numAudioTracks--;\r\n      }\r\n      if (numVideoTracks > 0) {\r\n        this._createTransceiver('video');\r\n        numVideoTracks--;\r\n      }\r\n    }\r\n\r\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId,\r\n        this._sdpSessionVersion++);\r\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\r\n      // For each track, create an ice gatherer, ice transport,\r\n      // dtls transport, potentially rtpsender and rtpreceiver.\r\n      var track = transceiver.track;\r\n      var kind = transceiver.kind;\r\n      var mid = SDPUtils.generateIdentifier();\r\n      transceiver.mid = mid;\r\n\r\n      if (!transceiver.iceGatherer) {\r\n        transceiver.iceGatherer = self._createIceGatherer(sdpMLineIndex,\r\n            self.usingBundle);\r\n      }\r\n\r\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\r\n      // filter RTX until additional stuff needed for RTX is implemented\r\n      // in adapter.js\r\n      if (edgeVersion < 15019) {\r\n        localCapabilities.codecs = localCapabilities.codecs.filter(\r\n            function(codec) {\r\n              return codec.name !== 'rtx';\r\n            });\r\n      }\r\n      localCapabilities.codecs.forEach(function(codec) {\r\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\r\n        // by adding level-asymmetry-allowed=1\r\n        if (codec.name === 'H264' &&\r\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\r\n          codec.parameters['level-asymmetry-allowed'] = '1';\r\n        }\r\n      });\r\n\r\n      // generate an ssrc now, to be used later in rtpSender.send\r\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\r\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\r\n      }];\r\n      if (track) {\r\n        // add RTX\r\n        if (edgeVersion >= 15019 && kind === 'video' &&\r\n            !sendEncodingParameters[0].rtx) {\r\n          sendEncodingParameters[0].rtx = {\r\n            ssrc: sendEncodingParameters[0].ssrc + 1\r\n          };\r\n        }\r\n      }\r\n\r\n      if (transceiver.wantReceive) {\r\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\r\n            transceiver.dtlsTransport, kind);\r\n      }\r\n\r\n      transceiver.localCapabilities = localCapabilities;\r\n      transceiver.sendEncodingParameters = sendEncodingParameters;\r\n    });\r\n\r\n    // always offer BUNDLE and dispose on return if not supported.\r\n    if (this._config.bundlePolicy !== 'max-compat') {\r\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\r\n        return t.mid;\r\n      }).join(' ') + '\\r\\n';\r\n    }\r\n    sdp += 'a=ice-options:trickle\\r\\n';\r\n\r\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\r\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\r\n          'offer', transceiver.stream, self._dtlsRole);\r\n      sdp += 'a=rtcp-rsize\\r\\n';\r\n\r\n      if (transceiver.iceGatherer && self.iceGatheringState !== 'new' &&\r\n          (sdpMLineIndex === 0 || !self.usingBundle)) {\r\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\r\n          cand.component = 1;\r\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\r\n        });\r\n\r\n        if (transceiver.iceGatherer.state === 'completed') {\r\n          sdp += 'a=end-of-candidates\\r\\n';\r\n        }\r\n      }\r\n    });\r\n\r\n    var desc = new window.RTCSessionDescription({\r\n      type: 'offer',\r\n      sdp: sdp\r\n    });\r\n    return new Promise(function(resolve) {\r\n      if (args.length > 0 && typeof args[0] === 'function') {\r\n        args[0].apply(null, [desc]);\r\n        resolve();\r\n        return;\r\n      }\r\n      resolve(desc);\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.createAnswer = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId,\r\n        this._sdpSessionVersion++);\r\n    if (this.usingBundle) {\r\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\r\n        return t.mid;\r\n      }).join(' ') + '\\r\\n';\r\n    }\r\n    var mediaSectionsInOffer = SDPUtils.splitSections(\r\n        this.remoteDescription.sdp).length - 1;\r\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\r\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\r\n        return;\r\n      }\r\n      if (transceiver.isDatachannel) {\r\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\r\n            'c=IN IP4 0.0.0.0\\r\\n' +\r\n            'a=mid:' + transceiver.mid + '\\r\\n';\r\n        return;\r\n      }\r\n\r\n      // FIXME: look at direction.\r\n      if (transceiver.stream) {\r\n        var localTrack;\r\n        if (transceiver.kind === 'audio') {\r\n          localTrack = transceiver.stream.getAudioTracks()[0];\r\n        } else if (transceiver.kind === 'video') {\r\n          localTrack = transceiver.stream.getVideoTracks()[0];\r\n        }\r\n        if (localTrack) {\r\n          // add RTX\r\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\r\n              !transceiver.sendEncodingParameters[0].rtx) {\r\n            transceiver.sendEncodingParameters[0].rtx = {\r\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      // Calculate intersection of capabilities.\r\n      var commonCapabilities = getCommonCapabilities(\r\n          transceiver.localCapabilities,\r\n          transceiver.remoteCapabilities);\r\n\r\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\r\n        return c.name.toLowerCase() === 'rtx';\r\n      }).length;\r\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\r\n        delete transceiver.sendEncodingParameters[0].rtx;\r\n      }\r\n\r\n      sdp += writeMediaSection(transceiver, commonCapabilities,\r\n          'answer', transceiver.stream, self._dtlsRole);\r\n      if (transceiver.rtcpParameters &&\r\n          transceiver.rtcpParameters.reducedSize) {\r\n        sdp += 'a=rtcp-rsize\\r\\n';\r\n      }\r\n    });\r\n\r\n    var desc = new window.RTCSessionDescription({\r\n      type: 'answer',\r\n      sdp: sdp\r\n    });\r\n    return new Promise(function(resolve) {\r\n      if (args.length > 0 && typeof args[0] === 'function') {\r\n        args[0].apply(null, [desc]);\r\n        resolve();\r\n        return;\r\n      }\r\n      resolve(desc);\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\r\n    var err;\r\n    var sections;\r\n    if (!candidate || candidate.candidate === '') {\r\n      for (var j = 0; j < this.transceivers.length; j++) {\r\n        if (this.transceivers[j].isDatachannel) {\r\n          continue;\r\n        }\r\n        this.transceivers[j].iceTransport.addRemoteCandidate({});\r\n        sections = SDPUtils.splitSections(this.remoteDescription.sdp);\r\n        sections[j + 1] += 'a=end-of-candidates\\r\\n';\r\n        this.remoteDescription.sdp = sections.join('');\r\n        if (this.usingBundle) {\r\n          break;\r\n        }\r\n      }\r\n    } else if (!(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\r\n      throw new TypeError('sdpMLineIndex or sdpMid required');\r\n    } else if (!this.remoteDescription) {\r\n      err = new Error('Can not add ICE candidate without ' +\r\n          'a remote description');\r\n      err.name = 'InvalidStateError';\r\n    } else {\r\n      var sdpMLineIndex = candidate.sdpMLineIndex;\r\n      if (candidate.sdpMid) {\r\n        for (var i = 0; i < this.transceivers.length; i++) {\r\n          if (this.transceivers[i].mid === candidate.sdpMid) {\r\n            sdpMLineIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      var transceiver = this.transceivers[sdpMLineIndex];\r\n      if (transceiver) {\r\n        if (transceiver.isDatachannel) {\r\n          return Promise.resolve();\r\n        }\r\n        var cand = Object.keys(candidate.candidate).length > 0 ?\r\n            SDPUtils.parseCandidate(candidate.candidate) : {};\r\n        // Ignore Chrome's invalid candidates since Edge does not like them.\r\n        if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\r\n          return Promise.resolve();\r\n        }\r\n        // Ignore RTCP candidates, we assume RTCP-MUX.\r\n        if (cand.component && cand.component !== 1) {\r\n          return Promise.resolve();\r\n        }\r\n        // when using bundle, avoid adding candidates to the wrong\r\n        // ice transport. And avoid adding candidates added in the SDP.\r\n        if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\r\n            transceiver.iceTransport !== this.transceivers[0].iceTransport)) {\r\n          if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\r\n            err = new Error('Can not add ICE candidate');\r\n            err.name = 'OperationError';\r\n          }\r\n        }\r\n\r\n        if (!err) {\r\n          // update the remoteDescription.\r\n          var candidateString = candidate.candidate.trim();\r\n          if (candidateString.indexOf('a=') === 0) {\r\n            candidateString = candidateString.substr(2);\r\n          }\r\n          sections = SDPUtils.splitSections(this.remoteDescription.sdp);\r\n          sections[sdpMLineIndex + 1] += 'a=' +\r\n              (cand.type ? candidateString : 'end-of-candidates')\r\n              + '\\r\\n';\r\n          this.remoteDescription.sdp = sections.join('');\r\n        }\r\n      } else {\r\n        err = new Error('Can not add ICE candidate');\r\n        err.name = 'OperationError';\r\n      }\r\n    }\r\n    var args = arguments;\r\n    return new Promise(function(resolve, reject) {\r\n      if (err) {\r\n        if (args.length > 2 && typeof args[2] === 'function') {\r\n          args[2].apply(null, [err]);\r\n        }\r\n        reject(err);\r\n      } else {\r\n        if (args.length > 1 && typeof args[1] === 'function') {\r\n          args[1].apply(null);\r\n        }\r\n        resolve();\r\n      }\r\n    });\r\n  };\r\n\r\n  RTCPeerConnection.prototype.getStats = function() {\r\n    var promises = [];\r\n    this.transceivers.forEach(function(transceiver) {\r\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\r\n          'dtlsTransport'].forEach(function(method) {\r\n            if (transceiver[method]) {\r\n              promises.push(transceiver[method].getStats());\r\n            }\r\n          });\r\n    });\r\n    var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\r\n        arguments[1];\r\n    var fixStatsType = function(stat) {\r\n      return {\r\n        inboundrtp: 'inbound-rtp',\r\n        outboundrtp: 'outbound-rtp',\r\n        candidatepair: 'candidate-pair',\r\n        localcandidate: 'local-candidate',\r\n        remotecandidate: 'remote-candidate'\r\n      }[stat.type] || stat.type;\r\n    };\r\n    return new Promise(function(resolve) {\r\n      // shim getStats with maplike support\r\n      var results = new Map();\r\n      Promise.all(promises).then(function(res) {\r\n        res.forEach(function(result) {\r\n          Object.keys(result).forEach(function(id) {\r\n            result[id].type = fixStatsType(result[id]);\r\n            results.set(id, result[id]);\r\n          });\r\n        });\r\n        if (cb) {\r\n          cb.apply(null, results);\r\n        }\r\n        resolve(results);\r\n      });\r\n    });\r\n  };\r\n  return RTCPeerConnection;\r\n};\r\n\r\n},{\"sdp\":2}],2:[function(require,module,exports){\r\n /* eslint-env node */\r\n'use strict';\r\n\r\n// SDP helpers.\r\nvar SDPUtils = {};\r\n\r\n// Generate an alphanumeric identifier for cname or mids.\r\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\r\nSDPUtils.generateIdentifier = function() {\r\n  return Math.random().toString(36).substr(2, 10);\r\n};\r\n\r\n// The RTCP CNAME used by all peerconnections from the same JS.\r\nSDPUtils.localCName = SDPUtils.generateIdentifier();\r\n\r\n// Splits SDP into lines, dealing with both CRLF and LF.\r\nSDPUtils.splitLines = function(blob) {\r\n  return blob.trim().split('\\n').map(function(line) {\r\n    return line.trim();\r\n  });\r\n};\r\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\r\nSDPUtils.splitSections = function(blob) {\r\n  var parts = blob.split('\\nm=');\r\n  return parts.map(function(part, index) {\r\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\r\n  });\r\n};\r\n\r\n// Returns lines that start with a certain prefix.\r\nSDPUtils.matchPrefix = function(blob, prefix) {\r\n  return SDPUtils.splitLines(blob).filter(function(line) {\r\n    return line.indexOf(prefix) === 0;\r\n  });\r\n};\r\n\r\n// Parses an ICE candidate line. Sample input:\r\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\r\n// rport 55996\"\r\nSDPUtils.parseCandidate = function(line) {\r\n  var parts;\r\n  // Parse both variants.\r\n  if (line.indexOf('a=candidate:') === 0) {\r\n    parts = line.substring(12).split(' ');\r\n  } else {\r\n    parts = line.substring(10).split(' ');\r\n  }\r\n\r\n  var candidate = {\r\n    foundation: parts[0],\r\n    component: parseInt(parts[1], 10),\r\n    protocol: parts[2].toLowerCase(),\r\n    priority: parseInt(parts[3], 10),\r\n    ip: parts[4],\r\n    port: parseInt(parts[5], 10),\r\n    // skip parts[6] == 'typ'\r\n    type: parts[7]\r\n  };\r\n\r\n  for (var i = 8; i < parts.length; i += 2) {\r\n    switch (parts[i]) {\r\n      case 'raddr':\r\n        candidate.relatedAddress = parts[i + 1];\r\n        break;\r\n      case 'rport':\r\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\r\n        break;\r\n      case 'tcptype':\r\n        candidate.tcpType = parts[i + 1];\r\n        break;\r\n      case 'ufrag':\r\n        candidate.ufrag = parts[i + 1]; // for backward compability.\r\n        candidate.usernameFragment = parts[i + 1];\r\n        break;\r\n      default: // extension handling, in particular ufrag\r\n        candidate[parts[i]] = parts[i + 1];\r\n        break;\r\n    }\r\n  }\r\n  return candidate;\r\n};\r\n\r\n// Translates a candidate object into SDP candidate attribute.\r\nSDPUtils.writeCandidate = function(candidate) {\r\n  var sdp = [];\r\n  sdp.push(candidate.foundation);\r\n  sdp.push(candidate.component);\r\n  sdp.push(candidate.protocol.toUpperCase());\r\n  sdp.push(candidate.priority);\r\n  sdp.push(candidate.ip);\r\n  sdp.push(candidate.port);\r\n\r\n  var type = candidate.type;\r\n  sdp.push('typ');\r\n  sdp.push(type);\r\n  if (type !== 'host' && candidate.relatedAddress &&\r\n      candidate.relatedPort) {\r\n    sdp.push('raddr');\r\n    sdp.push(candidate.relatedAddress); // was: relAddr\r\n    sdp.push('rport');\r\n    sdp.push(candidate.relatedPort); // was: relPort\r\n  }\r\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\r\n    sdp.push('tcptype');\r\n    sdp.push(candidate.tcpType);\r\n  }\r\n  if (candidate.ufrag) {\r\n    sdp.push('ufrag');\r\n    sdp.push(candidate.ufrag);\r\n  }\r\n  return 'candidate:' + sdp.join(' ');\r\n};\r\n\r\n// Parses an ice-options line, returns an array of option tags.\r\n// a=ice-options:foo bar\r\nSDPUtils.parseIceOptions = function(line) {\r\n  return line.substr(14).split(' ');\r\n}\r\n\r\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\r\n// a=rtpmap:111 opus/48000/2\r\nSDPUtils.parseRtpMap = function(line) {\r\n  var parts = line.substr(9).split(' ');\r\n  var parsed = {\r\n    payloadType: parseInt(parts.shift(), 10) // was: id\r\n  };\r\n\r\n  parts = parts[0].split('/');\r\n\r\n  parsed.name = parts[0];\r\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\r\n  // was: channels\r\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\r\n  return parsed;\r\n};\r\n\r\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\r\n// RTCRtpCodecParameters.\r\nSDPUtils.writeRtpMap = function(codec) {\r\n  var pt = codec.payloadType;\r\n  if (codec.preferredPayloadType !== undefined) {\r\n    pt = codec.preferredPayloadType;\r\n  }\r\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\r\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\r\n};\r\n\r\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\r\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\r\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\r\nSDPUtils.parseExtmap = function(line) {\r\n  var parts = line.substr(9).split(' ');\r\n  return {\r\n    id: parseInt(parts[0], 10),\r\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\r\n    uri: parts[1]\r\n  };\r\n};\r\n\r\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\r\n// RTCRtpHeaderExtension.\r\nSDPUtils.writeExtmap = function(headerExtension) {\r\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\r\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\r\n          ? '/' + headerExtension.direction\r\n          : '') +\r\n      ' ' + headerExtension.uri + '\\r\\n';\r\n};\r\n\r\n// Parses an ftmp line, returns dictionary. Sample input:\r\n// a=fmtp:96 vbr=on;cng=on\r\n// Also deals with vbr=on; cng=on\r\nSDPUtils.parseFmtp = function(line) {\r\n  var parsed = {};\r\n  var kv;\r\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\r\n  for (var j = 0; j < parts.length; j++) {\r\n    kv = parts[j].trim().split('=');\r\n    parsed[kv[0].trim()] = kv[1];\r\n  }\r\n  return parsed;\r\n};\r\n\r\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\r\nSDPUtils.writeFmtp = function(codec) {\r\n  var line = '';\r\n  var pt = codec.payloadType;\r\n  if (codec.preferredPayloadType !== undefined) {\r\n    pt = codec.preferredPayloadType;\r\n  }\r\n  if (codec.parameters && Object.keys(codec.parameters).length) {\r\n    var params = [];\r\n    Object.keys(codec.parameters).forEach(function(param) {\r\n      params.push(param + '=' + codec.parameters[param]);\r\n    });\r\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\r\n  }\r\n  return line;\r\n};\r\n\r\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\r\n// a=rtcp-fb:98 nack rpsi\r\nSDPUtils.parseRtcpFb = function(line) {\r\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\r\n  return {\r\n    type: parts.shift(),\r\n    parameter: parts.join(' ')\r\n  };\r\n};\r\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\r\nSDPUtils.writeRtcpFb = function(codec) {\r\n  var lines = '';\r\n  var pt = codec.payloadType;\r\n  if (codec.preferredPayloadType !== undefined) {\r\n    pt = codec.preferredPayloadType;\r\n  }\r\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\r\n    // FIXME: special handling for trr-int?\r\n    codec.rtcpFeedback.forEach(function(fb) {\r\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\r\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\r\n          '\\r\\n';\r\n    });\r\n  }\r\n  return lines;\r\n};\r\n\r\n// Parses an RFC 5576 ssrc media attribute. Sample input:\r\n// a=ssrc:3735928559 cname:something\r\nSDPUtils.parseSsrcMedia = function(line) {\r\n  var sp = line.indexOf(' ');\r\n  var parts = {\r\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\r\n  };\r\n  var colon = line.indexOf(':', sp);\r\n  if (colon > -1) {\r\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\r\n    parts.value = line.substr(colon + 1);\r\n  } else {\r\n    parts.attribute = line.substr(sp + 1);\r\n  }\r\n  return parts;\r\n};\r\n\r\n// Extracts the MID (RFC 5888) from a media section.\r\n// returns the MID or undefined if no mid line was found.\r\nSDPUtils.getMid = function(mediaSection) {\r\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\r\n  if (mid) {\r\n    return mid.substr(6);\r\n  }\r\n}\r\n\r\nSDPUtils.parseFingerprint = function(line) {\r\n  var parts = line.substr(14).split(' ');\r\n  return {\r\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\r\n    value: parts[1]\r\n  };\r\n};\r\n\r\n// Extracts DTLS parameters from SDP media section or sessionpart.\r\n// FIXME: for consistency with other functions this should only\r\n//   get the fingerprint line as input. See also getIceParameters.\r\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\r\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\r\n      'a=fingerprint:');\r\n  // Note: a=setup line is ignored since we use the 'auto' role.\r\n  // Note2: 'algorithm' is not case sensitive except in Edge.\r\n  return {\r\n    role: 'auto',\r\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\r\n  };\r\n};\r\n\r\n// Serializes DTLS parameters to SDP.\r\nSDPUtils.writeDtlsParameters = function(params, setupType) {\r\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\r\n  params.fingerprints.forEach(function(fp) {\r\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\r\n  });\r\n  return sdp;\r\n};\r\n// Parses ICE information from SDP media section or sessionpart.\r\n// FIXME: for consistency with other functions this should only\r\n//   get the ice-ufrag and ice-pwd lines as input.\r\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\r\n  var lines = SDPUtils.splitLines(mediaSection);\r\n  // Search in session part, too.\r\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\r\n  var iceParameters = {\r\n    usernameFragment: lines.filter(function(line) {\r\n      return line.indexOf('a=ice-ufrag:') === 0;\r\n    })[0].substr(12),\r\n    password: lines.filter(function(line) {\r\n      return line.indexOf('a=ice-pwd:') === 0;\r\n    })[0].substr(10)\r\n  };\r\n  return iceParameters;\r\n};\r\n\r\n// Serializes ICE parameters to SDP.\r\nSDPUtils.writeIceParameters = function(params) {\r\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\r\n      'a=ice-pwd:' + params.password + '\\r\\n';\r\n};\r\n\r\n// Parses the SDP media section and returns RTCRtpParameters.\r\nSDPUtils.parseRtpParameters = function(mediaSection) {\r\n  var description = {\r\n    codecs: [],\r\n    headerExtensions: [],\r\n    fecMechanisms: [],\r\n    rtcp: []\r\n  };\r\n  var lines = SDPUtils.splitLines(mediaSection);\r\n  var mline = lines[0].split(' ');\r\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\r\n    var pt = mline[i];\r\n    var rtpmapline = SDPUtils.matchPrefix(\r\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\r\n    if (rtpmapline) {\r\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\r\n      var fmtps = SDPUtils.matchPrefix(\r\n          mediaSection, 'a=fmtp:' + pt + ' ');\r\n      // Only the first a=fmtp:<pt> is considered.\r\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\r\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\r\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\r\n        .map(SDPUtils.parseRtcpFb);\r\n      description.codecs.push(codec);\r\n      // parse FEC mechanisms from rtpmap lines.\r\n      switch (codec.name.toUpperCase()) {\r\n        case 'RED':\r\n        case 'ULPFEC':\r\n          description.fecMechanisms.push(codec.name.toUpperCase());\r\n          break;\r\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\r\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\r\n  });\r\n  // FIXME: parse rtcp.\r\n  return description;\r\n};\r\n\r\n// Generates parts of the SDP media section describing the capabilities /\r\n// parameters.\r\nSDPUtils.writeRtpDescription = function(kind, caps) {\r\n  var sdp = '';\r\n\r\n  // Build the mline.\r\n  sdp += 'm=' + kind + ' ';\r\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\r\n  sdp += ' UDP/TLS/RTP/SAVPF ';\r\n  sdp += caps.codecs.map(function(codec) {\r\n    if (codec.preferredPayloadType !== undefined) {\r\n      return codec.preferredPayloadType;\r\n    }\r\n    return codec.payloadType;\r\n  }).join(' ') + '\\r\\n';\r\n\r\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\r\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\r\n\r\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\r\n  caps.codecs.forEach(function(codec) {\r\n    sdp += SDPUtils.writeRtpMap(codec);\r\n    sdp += SDPUtils.writeFmtp(codec);\r\n    sdp += SDPUtils.writeRtcpFb(codec);\r\n  });\r\n  var maxptime = 0;\r\n  caps.codecs.forEach(function(codec) {\r\n    if (codec.maxptime > maxptime) {\r\n      maxptime = codec.maxptime;\r\n    }\r\n  });\r\n  if (maxptime > 0) {\r\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\r\n  }\r\n  sdp += 'a=rtcp-mux\\r\\n';\r\n\r\n  caps.headerExtensions.forEach(function(extension) {\r\n    sdp += SDPUtils.writeExtmap(extension);\r\n  });\r\n  // FIXME: write fecMechanisms.\r\n  return sdp;\r\n};\r\n\r\n// Parses the SDP media section and returns an array of\r\n// RTCRtpEncodingParameters.\r\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\r\n  var encodingParameters = [];\r\n  var description = SDPUtils.parseRtpParameters(mediaSection);\r\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\r\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\r\n\r\n  // filter a=ssrc:... cname:, ignore PlanB-msid\r\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\r\n  .map(function(line) {\r\n    return SDPUtils.parseSsrcMedia(line);\r\n  })\r\n  .filter(function(parts) {\r\n    return parts.attribute === 'cname';\r\n  });\r\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\r\n  var secondarySsrc;\r\n\r\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\r\n  .map(function(line) {\r\n    var parts = line.split(' ');\r\n    parts.shift();\r\n    return parts.map(function(part) {\r\n      return parseInt(part, 10);\r\n    });\r\n  });\r\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\r\n    secondarySsrc = flows[0][1];\r\n  }\r\n\r\n  description.codecs.forEach(function(codec) {\r\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\r\n      var encParam = {\r\n        ssrc: primarySsrc,\r\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\r\n        rtx: {\r\n          ssrc: secondarySsrc\r\n        }\r\n      };\r\n      encodingParameters.push(encParam);\r\n      if (hasRed) {\r\n        encParam = JSON.parse(JSON.stringify(encParam));\r\n        encParam.fec = {\r\n          ssrc: secondarySsrc,\r\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\r\n        };\r\n        encodingParameters.push(encParam);\r\n      }\r\n    }\r\n  });\r\n  if (encodingParameters.length === 0 && primarySsrc) {\r\n    encodingParameters.push({\r\n      ssrc: primarySsrc\r\n    });\r\n  }\r\n\r\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\r\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\r\n  if (bandwidth.length) {\r\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\r\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\r\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\r\n      // use formula from JSEP to convert b=AS to TIAS value.\r\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\r\n          - (50 * 40 * 8);\r\n    } else {\r\n      bandwidth = undefined;\r\n    }\r\n    encodingParameters.forEach(function(params) {\r\n      params.maxBitrate = bandwidth;\r\n    });\r\n  }\r\n  return encodingParameters;\r\n};\r\n\r\n// parses http://draft.ortc.org/#rtcrtcpparameters*\r\nSDPUtils.parseRtcpParameters = function(mediaSection) {\r\n  var rtcpParameters = {};\r\n\r\n  var cname;\r\n  // Gets the first SSRC. Note that with RTX there might be multiple\r\n  // SSRCs.\r\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\r\n      .map(function(line) {\r\n        return SDPUtils.parseSsrcMedia(line);\r\n      })\r\n      .filter(function(obj) {\r\n        return obj.attribute === 'cname';\r\n      })[0];\r\n  if (remoteSsrc) {\r\n    rtcpParameters.cname = remoteSsrc.value;\r\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\r\n  }\r\n\r\n  // Edge uses the compound attribute instead of reducedSize\r\n  // compound is !reducedSize\r\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\r\n  rtcpParameters.reducedSize = rsize.length > 0;\r\n  rtcpParameters.compound = rsize.length === 0;\r\n\r\n  // parses the rtcp-mux attrіbute.\r\n  // Note that Edge does not support unmuxed RTCP.\r\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\r\n  rtcpParameters.mux = mux.length > 0;\r\n\r\n  return rtcpParameters;\r\n};\r\n\r\n// parses either a=msid: or a=ssrc:... msid lines and returns\r\n// the id of the MediaStream and MediaStreamTrack.\r\nSDPUtils.parseMsid = function(mediaSection) {\r\n  var parts;\r\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\r\n  if (spec.length === 1) {\r\n    parts = spec[0].substr(7).split(' ');\r\n    return {stream: parts[0], track: parts[1]};\r\n  }\r\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\r\n  .map(function(line) {\r\n    return SDPUtils.parseSsrcMedia(line);\r\n  })\r\n  .filter(function(parts) {\r\n    return parts.attribute === 'msid';\r\n  });\r\n  if (planB.length > 0) {\r\n    parts = planB[0].value.split(' ');\r\n    return {stream: parts[0], track: parts[1]};\r\n  }\r\n};\r\n\r\n// Generate a session ID for SDP.\r\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\r\n// recommends using a cryptographically random +ve 64-bit value\r\n// but right now this should be acceptable and within the right range\r\nSDPUtils.generateSessionId = function() {\r\n  return Math.random().toString().substr(2, 21);\r\n};\r\n\r\n// Write boilder plate for start of SDP\r\n// sessId argument is optional - if not supplied it will\r\n// be generated randomly\r\n// sessVersion is optional and defaults to 2\r\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer) {\r\n  var sessionId;\r\n  var version = sessVer !== undefined ? sessVer : 2;\r\n  if (sessId) {\r\n    sessionId = sessId;\r\n  } else {\r\n    sessionId = SDPUtils.generateSessionId();\r\n  }\r\n  // FIXME: sess-id should be an NTP timestamp.\r\n  return 'v=0\\r\\n' +\r\n      'o=thisisadapterortc ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' +\r\n      's=-\\r\\n' +\r\n      't=0 0\\r\\n';\r\n};\r\n\r\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\r\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\r\n\r\n  // Map ICE parameters (ufrag, pwd) to SDP.\r\n  sdp += SDPUtils.writeIceParameters(\r\n      transceiver.iceGatherer.getLocalParameters());\r\n\r\n  // Map DTLS parameters to SDP.\r\n  sdp += SDPUtils.writeDtlsParameters(\r\n      transceiver.dtlsTransport.getLocalParameters(),\r\n      type === 'offer' ? 'actpass' : 'active');\r\n\r\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\r\n\r\n  if (transceiver.direction) {\r\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\r\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\r\n    sdp += 'a=sendrecv\\r\\n';\r\n  } else if (transceiver.rtpSender) {\r\n    sdp += 'a=sendonly\\r\\n';\r\n  } else if (transceiver.rtpReceiver) {\r\n    sdp += 'a=recvonly\\r\\n';\r\n  } else {\r\n    sdp += 'a=inactive\\r\\n';\r\n  }\r\n\r\n  if (transceiver.rtpSender) {\r\n    // spec.\r\n    var msid = 'msid:' + stream.id + ' ' +\r\n        transceiver.rtpSender.track.id + '\\r\\n';\r\n    sdp += 'a=' + msid;\r\n\r\n    // for Chrome.\r\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\r\n        ' ' + msid;\r\n    if (transceiver.sendEncodingParameters[0].rtx) {\r\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n          ' ' + msid;\r\n      sdp += 'a=ssrc-group:FID ' +\r\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\r\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n          '\\r\\n';\r\n    }\r\n  }\r\n  // FIXME: this should be written by writeRtpDescription.\r\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\r\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\r\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\r\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\r\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\r\n  }\r\n  return sdp;\r\n};\r\n\r\n// Gets the direction from the mediaSection or the sessionpart.\r\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\r\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\r\n  var lines = SDPUtils.splitLines(mediaSection);\r\n  for (var i = 0; i < lines.length; i++) {\r\n    switch (lines[i]) {\r\n      case 'a=sendrecv':\r\n      case 'a=sendonly':\r\n      case 'a=recvonly':\r\n      case 'a=inactive':\r\n        return lines[i].substr(2);\r\n      default:\r\n        // FIXME: What should happen here?\r\n    }\r\n  }\r\n  if (sessionpart) {\r\n    return SDPUtils.getDirection(sessionpart);\r\n  }\r\n  return 'sendrecv';\r\n};\r\n\r\nSDPUtils.getKind = function(mediaSection) {\r\n  var lines = SDPUtils.splitLines(mediaSection);\r\n  var mline = lines[0].split(' ');\r\n  return mline[0].substr(2);\r\n};\r\n\r\nSDPUtils.isRejected = function(mediaSection) {\r\n  return mediaSection.split(' ', 2)[1] === '0';\r\n};\r\n\r\nSDPUtils.parseMLine = function(mediaSection) {\r\n  var lines = SDPUtils.splitLines(mediaSection);\r\n  var mline = lines[0].split(' ');\r\n  return {\r\n    kind: mline[0].substr(2),\r\n    port: parseInt(mline[1], 10),\r\n    protocol: mline[2],\r\n    fmt: mline.slice(3).join(' ')\r\n  };\r\n};\r\n\r\n// Expose public methods.\r\nif (typeof module === 'object') {\r\n  module.exports = SDPUtils;\r\n}\r\n\r\n},{}],3:[function(require,module,exports){\r\n(function (global){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n\r\n'use strict';\r\n\r\nvar adapterFactory = require('./adapter_factory.js');\r\nmodule.exports = adapterFactory({window: global.window});\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./adapter_factory.js\":4}],4:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n\r\n'use strict';\r\n\r\nvar utils = require('./utils');\r\n// Shimming starts here.\r\nmodule.exports = function(dependencies, opts) {\r\n  var window = dependencies && dependencies.window;\r\n\r\n  var options = {\r\n    shimChrome: true,\r\n    shimFirefox: true,\r\n    shimEdge: true,\r\n    shimSafari: true,\r\n  };\r\n\r\n  for (var key in opts) {\r\n    if (hasOwnProperty.call(opts, key)) {\r\n      options[key] = opts[key];\r\n    }\r\n  }\r\n\r\n  // Utils.\r\n  var logging = utils.log;\r\n  var browserDetails = utils.detectBrowser(window);\r\n\r\n  // Export to the adapter global object visible in the browser.\r\n  var adapter = {\r\n    browserDetails: browserDetails,\r\n    extractVersion: utils.extractVersion,\r\n    disableLog: utils.disableLog,\r\n    disableWarnings: utils.disableWarnings\r\n  };\r\n\r\n  // Uncomment the line below if you want logging to occur, including logging\r\n  // for the switch statement below. Can also be turned on in the browser via\r\n  // adapter.disableLog(false), but then logging from the switch statement below\r\n  // will not appear.\r\n  // require('./utils').disableLog(false);\r\n\r\n  // Browser shims.\r\n  var chromeShim = require('./chrome/chrome_shim') || null;\r\n  var edgeShim = require('./edge/edge_shim') || null;\r\n  var firefoxShim = require('./firefox/firefox_shim') || null;\r\n  var safariShim = require('./safari/safari_shim') || null;\r\n  var commonShim = require('./common_shim') || null;\r\n\r\n  // Shim browser if found.\r\n  switch (browserDetails.browser) {\r\n    case 'chrome':\r\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\r\n          !options.shimChrome) {\r\n        logging('Chrome shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming chrome.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = chromeShim;\r\n      commonShim.shimCreateObjectURL(window);\r\n\r\n      chromeShim.shimGetUserMedia(window);\r\n      chromeShim.shimMediaStream(window);\r\n      chromeShim.shimSourceObject(window);\r\n      chromeShim.shimPeerConnection(window);\r\n      chromeShim.shimOnTrack(window);\r\n      chromeShim.shimAddTrackRemoveTrack(window);\r\n      chromeShim.shimGetSendersWithDtmf(window);\r\n\r\n      commonShim.shimRTCIceCandidate(window);\r\n      break;\r\n    case 'firefox':\r\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\r\n          !options.shimFirefox) {\r\n        logging('Firefox shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming firefox.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = firefoxShim;\r\n      commonShim.shimCreateObjectURL(window);\r\n\r\n      firefoxShim.shimGetUserMedia(window);\r\n      firefoxShim.shimSourceObject(window);\r\n      firefoxShim.shimPeerConnection(window);\r\n      firefoxShim.shimOnTrack(window);\r\n\r\n      commonShim.shimRTCIceCandidate(window);\r\n      break;\r\n    case 'edge':\r\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\r\n        logging('MS edge shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming edge.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = edgeShim;\r\n      commonShim.shimCreateObjectURL(window);\r\n\r\n      edgeShim.shimGetUserMedia(window);\r\n      edgeShim.shimPeerConnection(window);\r\n      edgeShim.shimReplaceTrack(window);\r\n\r\n      // the edge shim implements the full RTCIceCandidate object.\r\n      break;\r\n    case 'safari':\r\n      if (!safariShim || !options.shimSafari) {\r\n        logging('Safari shim is not included in this adapter release.');\r\n        return adapter;\r\n      }\r\n      logging('adapter.js shimming safari.');\r\n      // Export to the adapter global object visible in the browser.\r\n      adapter.browserShim = safariShim;\r\n      commonShim.shimCreateObjectURL(window);\r\n\r\n      safariShim.shimRTCIceServerUrls(window);\r\n      safariShim.shimCallbacksAPI(window);\r\n      safariShim.shimLocalStreamsAPI(window);\r\n      safariShim.shimRemoteStreamsAPI(window);\r\n      safariShim.shimTrackEventTransceiver(window);\r\n      safariShim.shimGetUserMedia(window);\r\n      safariShim.shimCreateOfferLegacy(window);\r\n\r\n      commonShim.shimRTCIceCandidate(window);\r\n      break;\r\n    default:\r\n      logging('Unsupported browser!');\r\n      break;\r\n  }\r\n\r\n  return adapter;\r\n};\r\n\r\n},{\"./chrome/chrome_shim\":5,\"./common_shim\":7,\"./edge/edge_shim\":8,\"./firefox/firefox_shim\":10,\"./safari/safari_shim\":12,\"./utils\":13}],5:[function(require,module,exports){\r\n\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\nvar utils = require('../utils.js');\r\nvar logging = utils.log;\r\n\r\nvar chromeShim = {\r\n  shimMediaStream: function(window) {\r\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\r\n  },\r\n\r\n  shimOnTrack: function(window) {\r\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\r\n        window.RTCPeerConnection.prototype)) {\r\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\r\n        get: function() {\r\n          return this._ontrack;\r\n        },\r\n        set: function(f) {\r\n          if (this._ontrack) {\r\n            this.removeEventListener('track', this._ontrack);\r\n          }\r\n          this.addEventListener('track', this._ontrack = f);\r\n        }\r\n      });\r\n      var origSetRemoteDescription =\r\n          window.RTCPeerConnection.prototype.setRemoteDescription;\r\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\r\n        var pc = this;\r\n        if (!pc._ontrackpoly) {\r\n          pc._ontrackpoly = function(e) {\r\n            // onaddstream does not fire when a track is added to an existing\r\n            // stream. But stream.onaddtrack is implemented so we use that.\r\n            e.stream.addEventListener('addtrack', function(te) {\r\n              var receiver;\r\n              if (window.RTCPeerConnection.prototype.getReceivers) {\r\n                receiver = pc.getReceivers().find(function(r) {\r\n                  return r.track && r.track.id === te.track.id;\r\n                });\r\n              } else {\r\n                receiver = {track: te.track};\r\n              }\r\n\r\n              var event = new Event('track');\r\n              event.track = te.track;\r\n              event.receiver = receiver;\r\n              event.transceiver = {receiver: receiver};\r\n              event.streams = [e.stream];\r\n              pc.dispatchEvent(event);\r\n            });\r\n            e.stream.getTracks().forEach(function(track) {\r\n              var receiver;\r\n              if (window.RTCPeerConnection.prototype.getReceivers) {\r\n                receiver = pc.getReceivers().find(function(r) {\r\n                  return r.track && r.track.id === track.id;\r\n                });\r\n              } else {\r\n                receiver = {track: track};\r\n              }\r\n              var event = new Event('track');\r\n              event.track = track;\r\n              event.receiver = receiver;\r\n              event.transceiver = {receiver: receiver};\r\n              event.streams = [e.stream];\r\n              pc.dispatchEvent(event);\r\n            });\r\n          };\r\n          pc.addEventListener('addstream', pc._ontrackpoly);\r\n        }\r\n        return origSetRemoteDescription.apply(pc, arguments);\r\n      };\r\n    }\r\n  },\r\n\r\n  shimGetSendersWithDtmf: function(window) {\r\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\r\n    if (typeof window === 'object' && window.RTCPeerConnection &&\r\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\r\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\r\n      var shimSenderWithDtmf = function(pc, track) {\r\n        return {\r\n          track: track,\r\n          get dtmf() {\r\n            if (this._dtmf === undefined) {\r\n              if (track.kind === 'audio') {\r\n                this._dtmf = pc.createDTMFSender(track);\r\n              } else {\r\n                this._dtmf = null;\r\n              }\r\n            }\r\n            return this._dtmf;\r\n          },\r\n          _pc: pc\r\n        };\r\n      };\r\n\r\n      // augment addTrack when getSenders is not available.\r\n      if (!window.RTCPeerConnection.prototype.getSenders) {\r\n        window.RTCPeerConnection.prototype.getSenders = function() {\r\n          this._senders = this._senders || [];\r\n          return this._senders.slice(); // return a copy of the internal state.\r\n        };\r\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\r\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\r\n          var pc = this;\r\n          var sender = origAddTrack.apply(pc, arguments);\r\n          if (!sender) {\r\n            sender = shimSenderWithDtmf(pc, track);\r\n            pc._senders.push(sender);\r\n          }\r\n          return sender;\r\n        };\r\n\r\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\r\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\r\n          var pc = this;\r\n          origRemoveTrack.apply(pc, arguments);\r\n          var idx = pc._senders.indexOf(sender);\r\n          if (idx !== -1) {\r\n            pc._senders.splice(idx, 1);\r\n          }\r\n        };\r\n      }\r\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\r\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\r\n        var pc = this;\r\n        pc._senders = pc._senders || [];\r\n        origAddStream.apply(pc, [stream]);\r\n        stream.getTracks().forEach(function(track) {\r\n          pc._senders.push(shimSenderWithDtmf(pc, track));\r\n        });\r\n      };\r\n\r\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\r\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\r\n        var pc = this;\r\n        pc._senders = pc._senders || [];\r\n        origRemoveStream.apply(pc, [stream]);\r\n\r\n        stream.getTracks().forEach(function(track) {\r\n          var sender = pc._senders.find(function(s) {\r\n            return s.track === track;\r\n          });\r\n          if (sender) {\r\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\r\n          }\r\n        });\r\n      };\r\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\r\n               'getSenders' in window.RTCPeerConnection.prototype &&\r\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\r\n               window.RTCRtpSender &&\r\n               !('dtmf' in window.RTCRtpSender.prototype)) {\r\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\r\n      window.RTCPeerConnection.prototype.getSenders = function() {\r\n        var pc = this;\r\n        var senders = origGetSenders.apply(pc, []);\r\n        senders.forEach(function(sender) {\r\n          sender._pc = pc;\r\n        });\r\n        return senders;\r\n      };\r\n\r\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\r\n        get: function() {\r\n          if (this._dtmf === undefined) {\r\n            if (this.track.kind === 'audio') {\r\n              this._dtmf = this._pc.createDTMFSender(this.track);\r\n            } else {\r\n              this._dtmf = null;\r\n            }\r\n          }\r\n          return this._dtmf;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  shimSourceObject: function(window) {\r\n    var URL = window && window.URL;\r\n\r\n    if (typeof window === 'object') {\r\n      if (window.HTMLMediaElement &&\r\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\r\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\r\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\r\n          get: function() {\r\n            return this._srcObject;\r\n          },\r\n          set: function(stream) {\r\n            var self = this;\r\n            // Use _srcObject as a private property for this shim\r\n            this._srcObject = stream;\r\n            if (this.src) {\r\n              URL.revokeObjectURL(this.src);\r\n            }\r\n\r\n            if (!stream) {\r\n              this.src = '';\r\n              return undefined;\r\n            }\r\n            this.src = URL.createObjectURL(stream);\r\n            // We need to recreate the blob url when a track is added or\r\n            // removed. Doing it manually since we want to avoid a recursion.\r\n            stream.addEventListener('addtrack', function() {\r\n              if (self.src) {\r\n                URL.revokeObjectURL(self.src);\r\n              }\r\n              self.src = URL.createObjectURL(stream);\r\n            });\r\n            stream.addEventListener('removetrack', function() {\r\n              if (self.src) {\r\n                URL.revokeObjectURL(self.src);\r\n              }\r\n              self.src = URL.createObjectURL(stream);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  },\r\n\r\n  shimAddTrackRemoveTrack: function(window) {\r\n    var browserDetails = utils.detectBrowser(window);\r\n    // shim addTrack and removeTrack.\r\n    if (window.RTCPeerConnection.prototype.addTrack &&\r\n        browserDetails.version >= 63) {\r\n      return;\r\n    }\r\n\r\n    // also shim pc.getLocalStreams when addTrack is shimmed\r\n    // to return the original streams.\r\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\r\n        .getLocalStreams;\r\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\r\n      var self = this;\r\n      var nativeStreams = origGetLocalStreams.apply(this);\r\n      self._reverseStreams = self._reverseStreams || {};\r\n      return nativeStreams.map(function(stream) {\r\n        return self._reverseStreams[stream.id];\r\n      });\r\n    };\r\n\r\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\r\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\r\n      var pc = this;\r\n      pc._streams = pc._streams || {};\r\n      pc._reverseStreams = pc._reverseStreams || {};\r\n\r\n      stream.getTracks().forEach(function(track) {\r\n        var alreadyExists = pc.getSenders().find(function(s) {\r\n          return s.track === track;\r\n        });\r\n        if (alreadyExists) {\r\n          throw new DOMException('Track already exists.',\r\n              'InvalidAccessError');\r\n        }\r\n      });\r\n      // Add identity mapping for consistency with addTrack.\r\n      // Unless this is being used with a stream from addTrack.\r\n      if (!pc._reverseStreams[stream.id]) {\r\n        var newStream = new window.MediaStream(stream.getTracks());\r\n        pc._streams[stream.id] = newStream;\r\n        pc._reverseStreams[newStream.id] = stream;\r\n        stream = newStream;\r\n      }\r\n      origAddStream.apply(pc, [stream]);\r\n    };\r\n\r\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\r\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\r\n      var pc = this;\r\n      pc._streams = pc._streams || {};\r\n      pc._reverseStreams = pc._reverseStreams || {};\r\n\r\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\r\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\r\n          pc._streams[stream.id].id : stream.id)];\r\n      delete pc._streams[stream.id];\r\n    };\r\n\r\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\r\n      var pc = this;\r\n      if (pc.signalingState === 'closed') {\r\n        throw new DOMException(\r\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\r\n          'InvalidStateError');\r\n      }\r\n      var streams = [].slice.call(arguments, 1);\r\n      if (streams.length !== 1 ||\r\n          !streams[0].getTracks().find(function(t) {\r\n            return t === track;\r\n          })) {\r\n        // this is not fully correct but all we can manage without\r\n        // [[associated MediaStreams]] internal slot.\r\n        throw new DOMException(\r\n          'The adapter.js addTrack polyfill only supports a single ' +\r\n          ' stream which is associated with the specified track.',\r\n          'NotSupportedError');\r\n      }\r\n\r\n      var alreadyExists = pc.getSenders().find(function(s) {\r\n        return s.track === track;\r\n      });\r\n      if (alreadyExists) {\r\n        throw new DOMException('Track already exists.',\r\n            'InvalidAccessError');\r\n      }\r\n\r\n      pc._streams = pc._streams || {};\r\n      pc._reverseStreams = pc._reverseStreams || {};\r\n      var oldStream = pc._streams[stream.id];\r\n      if (oldStream) {\r\n        // this is using odd Chrome behaviour, use with caution:\r\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\r\n        // Note: we rely on the high-level addTrack/dtmf shim to\r\n        // create the sender with a dtmf sender.\r\n        oldStream.addTrack(track);\r\n\r\n        // Trigger ONN async.\r\n        Promise.resolve().then(function() {\r\n          pc.dispatchEvent(new Event('negotiationneeded'));\r\n        });\r\n      } else {\r\n        var newStream = new window.MediaStream([track]);\r\n        pc._streams[stream.id] = newStream;\r\n        pc._reverseStreams[newStream.id] = stream;\r\n        pc.addStream(newStream);\r\n      }\r\n      return pc.getSenders().find(function(s) {\r\n        return s.track === track;\r\n      });\r\n    };\r\n\r\n    // replace the internal stream id with the external one and\r\n    // vice versa.\r\n    function replaceInternalStreamId(pc, description) {\r\n      var sdp = description.sdp;\r\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\r\n        var externalStream = pc._reverseStreams[internalId];\r\n        var internalStream = pc._streams[externalStream.id];\r\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\r\n            externalStream.id);\r\n      });\r\n      return new RTCSessionDescription({\r\n        type: description.type,\r\n        sdp: sdp\r\n      });\r\n    }\r\n    function replaceExternalStreamId(pc, description) {\r\n      var sdp = description.sdp;\r\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\r\n        var externalStream = pc._reverseStreams[internalId];\r\n        var internalStream = pc._streams[externalStream.id];\r\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\r\n            internalStream.id);\r\n      });\r\n      return new RTCSessionDescription({\r\n        type: description.type,\r\n        sdp: sdp\r\n      });\r\n    }\r\n    ['createOffer', 'createAnswer'].forEach(function(method) {\r\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\r\n      window.RTCPeerConnection.prototype[method] = function() {\r\n        var pc = this;\r\n        var args = arguments;\r\n        var isLegacyCall = arguments.length &&\r\n            typeof arguments[0] === 'function';\r\n        if (isLegacyCall) {\r\n          return nativeMethod.apply(pc, [\r\n            function(description) {\r\n              var desc = replaceInternalStreamId(pc, description);\r\n              args[0].apply(null, [desc]);\r\n            },\r\n            function(err) {\r\n              if (args[1]) {\r\n                args[1].apply(null, err);\r\n              }\r\n            }, arguments[2]\r\n          ]);\r\n        }\r\n        return nativeMethod.apply(pc, arguments)\r\n        .then(function(description) {\r\n          return replaceInternalStreamId(pc, description);\r\n        });\r\n      };\r\n    });\r\n\r\n    var origSetLocalDescription =\r\n        window.RTCPeerConnection.prototype.setLocalDescription;\r\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\r\n      var pc = this;\r\n      if (!arguments.length || !arguments[0].type) {\r\n        return origSetLocalDescription.apply(pc, arguments);\r\n      }\r\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\r\n      return origSetLocalDescription.apply(pc, arguments);\r\n    };\r\n\r\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\r\n\r\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\r\n        window.RTCPeerConnection.prototype, 'localDescription');\r\n    Object.defineProperty(window.RTCPeerConnection.prototype,\r\n        'localDescription', {\r\n          get: function() {\r\n            var pc = this;\r\n            var description = origLocalDescription.get.apply(this);\r\n            if (description.type === '') {\r\n              return description;\r\n            }\r\n            return replaceInternalStreamId(pc, description);\r\n          }\r\n        });\r\n\r\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\r\n      var pc = this;\r\n      if (pc.signalingState === 'closed') {\r\n        throw new DOMException(\r\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\r\n          'InvalidStateError');\r\n      }\r\n      // We can not yet check for sender instanceof RTCRtpSender\r\n      // since we shim RTPSender. So we check if sender._pc is set.\r\n      if (!sender._pc) {\r\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\r\n            'does not implement interface RTCRtpSender.', 'TypeError');\r\n      }\r\n      var isLocal = sender._pc === pc;\r\n      if (!isLocal) {\r\n        throw new DOMException('Sender was not created by this connection.',\r\n            'InvalidAccessError');\r\n      }\r\n\r\n      // Search for the native stream the senders track belongs to.\r\n      pc._streams = pc._streams || {};\r\n      var stream;\r\n      Object.keys(pc._streams).forEach(function(streamid) {\r\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\r\n          return sender.track === track;\r\n        });\r\n        if (hasTrack) {\r\n          stream = pc._streams[streamid];\r\n        }\r\n      });\r\n\r\n      if (stream) {\r\n        if (stream.getTracks().length === 1) {\r\n          // if this is the last track of the stream, remove the stream. This\r\n          // takes care of any shimmed _senders.\r\n          pc.removeStream(pc._reverseStreams[stream.id]);\r\n        } else {\r\n          // relying on the same odd chrome behaviour as above.\r\n          stream.removeTrack(sender.track);\r\n        }\r\n        pc.dispatchEvent(new Event('negotiationneeded'));\r\n      }\r\n    };\r\n  },\r\n\r\n  shimPeerConnection: function(window) {\r\n    var browserDetails = utils.detectBrowser(window);\r\n\r\n    // The RTCPeerConnection object.\r\n    if (!window.RTCPeerConnection) {\r\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\r\n        // Translate iceTransportPolicy to iceTransports,\r\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\r\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\r\n        logging('PeerConnection');\r\n        if (pcConfig && pcConfig.iceTransportPolicy) {\r\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\r\n        }\r\n\r\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\r\n      };\r\n      window.RTCPeerConnection.prototype =\r\n          window.webkitRTCPeerConnection.prototype;\r\n      // wrap static methods. Currently just generateCertificate.\r\n      if (window.webkitRTCPeerConnection.generateCertificate) {\r\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\r\n          get: function() {\r\n            return window.webkitRTCPeerConnection.generateCertificate;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\r\n      var OrigPeerConnection = window.RTCPeerConnection;\r\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\r\n        if (pcConfig && pcConfig.iceServers) {\r\n          var newIceServers = [];\r\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\r\n            var server = pcConfig.iceServers[i];\r\n            if (!server.hasOwnProperty('urls') &&\r\n                server.hasOwnProperty('url')) {\r\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\r\n              server = JSON.parse(JSON.stringify(server));\r\n              server.urls = server.url;\r\n              newIceServers.push(server);\r\n            } else {\r\n              newIceServers.push(pcConfig.iceServers[i]);\r\n            }\r\n          }\r\n          pcConfig.iceServers = newIceServers;\r\n        }\r\n        return new OrigPeerConnection(pcConfig, pcConstraints);\r\n      };\r\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\r\n      // wrap static methods. Currently just generateCertificate.\r\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\r\n        get: function() {\r\n          return OrigPeerConnection.generateCertificate;\r\n        }\r\n      });\r\n    }\r\n\r\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\r\n    window.RTCPeerConnection.prototype.getStats = function(selector,\r\n        successCallback, errorCallback) {\r\n      var self = this;\r\n      var args = arguments;\r\n\r\n      // If selector is a function then we are in the old style stats so just\r\n      // pass back the original getStats format to avoid breaking old users.\r\n      if (arguments.length > 0 && typeof selector === 'function') {\r\n        return origGetStats.apply(this, arguments);\r\n      }\r\n\r\n      // When spec-style getStats is supported, return those when called with\r\n      // either no arguments or the selector argument is null.\r\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\r\n          typeof arguments[0] !== 'function')) {\r\n        return origGetStats.apply(this, []);\r\n      }\r\n\r\n      var fixChromeStats_ = function(response) {\r\n        var standardReport = {};\r\n        var reports = response.result();\r\n        reports.forEach(function(report) {\r\n          var standardStats = {\r\n            id: report.id,\r\n            timestamp: report.timestamp,\r\n            type: {\r\n              localcandidate: 'local-candidate',\r\n              remotecandidate: 'remote-candidate'\r\n            }[report.type] || report.type\r\n          };\r\n          report.names().forEach(function(name) {\r\n            standardStats[name] = report.stat(name);\r\n          });\r\n          standardReport[standardStats.id] = standardStats;\r\n        });\r\n\r\n        return standardReport;\r\n      };\r\n\r\n      // shim getStats with maplike support\r\n      var makeMapStats = function(stats) {\r\n        return new Map(Object.keys(stats).map(function(key) {\r\n          return [key, stats[key]];\r\n        }));\r\n      };\r\n\r\n      if (arguments.length >= 2) {\r\n        var successCallbackWrapper_ = function(response) {\r\n          args[1](makeMapStats(fixChromeStats_(response)));\r\n        };\r\n\r\n        return origGetStats.apply(this, [successCallbackWrapper_,\r\n          arguments[0]]);\r\n      }\r\n\r\n      // promise-support\r\n      return new Promise(function(resolve, reject) {\r\n        origGetStats.apply(self, [\r\n          function(response) {\r\n            resolve(makeMapStats(fixChromeStats_(response)));\r\n          }, reject]);\r\n      }).then(successCallback, errorCallback);\r\n    };\r\n\r\n    // add promise support -- natively available in Chrome 51\r\n    if (browserDetails.version < 51) {\r\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\r\n          .forEach(function(method) {\r\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\r\n            window.RTCPeerConnection.prototype[method] = function() {\r\n              var args = arguments;\r\n              var self = this;\r\n              var promise = new Promise(function(resolve, reject) {\r\n                nativeMethod.apply(self, [args[0], resolve, reject]);\r\n              });\r\n              if (args.length < 2) {\r\n                return promise;\r\n              }\r\n              return promise.then(function() {\r\n                args[1].apply(null, []);\r\n              },\r\n              function(err) {\r\n                if (args.length >= 3) {\r\n                  args[2].apply(null, [err]);\r\n                }\r\n              });\r\n            };\r\n          });\r\n    }\r\n\r\n    // promise support for createOffer and createAnswer. Available (without\r\n    // bugs) since M52: crbug/619289\r\n    if (browserDetails.version < 52) {\r\n      ['createOffer', 'createAnswer'].forEach(function(method) {\r\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\r\n        window.RTCPeerConnection.prototype[method] = function() {\r\n          var self = this;\r\n          if (arguments.length < 1 || (arguments.length === 1 &&\r\n              typeof arguments[0] === 'object')) {\r\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\r\n            return new Promise(function(resolve, reject) {\r\n              nativeMethod.apply(self, [resolve, reject, opts]);\r\n            });\r\n          }\r\n          return nativeMethod.apply(this, arguments);\r\n        };\r\n      });\r\n    }\r\n\r\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\r\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\r\n        .forEach(function(method) {\r\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\r\n          window.RTCPeerConnection.prototype[method] = function() {\r\n            arguments[0] = new ((method === 'addIceCandidate') ?\r\n                window.RTCIceCandidate :\r\n                window.RTCSessionDescription)(arguments[0]);\r\n            return nativeMethod.apply(this, arguments);\r\n          };\r\n        });\r\n\r\n    // support for addIceCandidate(null or undefined)\r\n    var nativeAddIceCandidate =\r\n        window.RTCPeerConnection.prototype.addIceCandidate;\r\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\r\n      if (!arguments[0]) {\r\n        if (arguments[1]) {\r\n          arguments[1].apply(null);\r\n        }\r\n        return Promise.resolve();\r\n      }\r\n      return nativeAddIceCandidate.apply(this, arguments);\r\n    };\r\n  }\r\n};\r\n\r\n\r\n// Expose public methods.\r\nmodule.exports = {\r\n  shimMediaStream: chromeShim.shimMediaStream,\r\n  shimOnTrack: chromeShim.shimOnTrack,\r\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\r\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\r\n  shimSourceObject: chromeShim.shimSourceObject,\r\n  shimPeerConnection: chromeShim.shimPeerConnection,\r\n  shimGetUserMedia: require('./getusermedia')\r\n};\r\n\r\n},{\"../utils.js\":13,\"./getusermedia\":6}],6:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\nvar utils = require('../utils.js');\r\nvar logging = utils.log;\r\n\r\n// Expose public methods.\r\nmodule.exports = function(window) {\r\n  var browserDetails = utils.detectBrowser(window);\r\n  var navigator = window && window.navigator;\r\n\r\n  var constraintsToChrome_ = function(c) {\r\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\r\n      return c;\r\n    }\r\n    var cc = {};\r\n    Object.keys(c).forEach(function(key) {\r\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\r\n        return;\r\n      }\r\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\r\n      if (r.exact !== undefined && typeof r.exact === 'number') {\r\n        r.min = r.max = r.exact;\r\n      }\r\n      var oldname_ = function(prefix, name) {\r\n        if (prefix) {\r\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\r\n        }\r\n        return (name === 'deviceId') ? 'sourceId' : name;\r\n      };\r\n      if (r.ideal !== undefined) {\r\n        cc.optional = cc.optional || [];\r\n        var oc = {};\r\n        if (typeof r.ideal === 'number') {\r\n          oc[oldname_('min', key)] = r.ideal;\r\n          cc.optional.push(oc);\r\n          oc = {};\r\n          oc[oldname_('max', key)] = r.ideal;\r\n          cc.optional.push(oc);\r\n        } else {\r\n          oc[oldname_('', key)] = r.ideal;\r\n          cc.optional.push(oc);\r\n        }\r\n      }\r\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\r\n        cc.mandatory = cc.mandatory || {};\r\n        cc.mandatory[oldname_('', key)] = r.exact;\r\n      } else {\r\n        ['min', 'max'].forEach(function(mix) {\r\n          if (r[mix] !== undefined) {\r\n            cc.mandatory = cc.mandatory || {};\r\n            cc.mandatory[oldname_(mix, key)] = r[mix];\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (c.advanced) {\r\n      cc.optional = (cc.optional || []).concat(c.advanced);\r\n    }\r\n    return cc;\r\n  };\r\n\r\n  var shimConstraints_ = function(constraints, func) {\r\n    constraints = JSON.parse(JSON.stringify(constraints));\r\n    if (constraints && typeof constraints.audio === 'object') {\r\n      var remap = function(obj, a, b) {\r\n        if (a in obj && !(b in obj)) {\r\n          obj[b] = obj[a];\r\n          delete obj[a];\r\n        }\r\n      };\r\n      constraints = JSON.parse(JSON.stringify(constraints));\r\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\r\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\r\n      constraints.audio = constraintsToChrome_(constraints.audio);\r\n    }\r\n    if (constraints && typeof constraints.video === 'object') {\r\n      // Shim facingMode for mobile & surface pro.\r\n      var face = constraints.video.facingMode;\r\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\r\n      var getSupportedFacingModeLies = browserDetails.version < 66;\r\n\r\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\r\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\r\n          !(navigator.mediaDevices.getSupportedConstraints &&\r\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\r\n            !getSupportedFacingModeLies)) {\r\n        delete constraints.video.facingMode;\r\n        var matches;\r\n        if (face.exact === 'environment' || face.ideal === 'environment') {\r\n          matches = ['back', 'rear'];\r\n        } else if (face.exact === 'user' || face.ideal === 'user') {\r\n          matches = ['front'];\r\n        }\r\n        if (matches) {\r\n          // Look for matches in label, or use last cam for back (typical).\r\n          return navigator.mediaDevices.enumerateDevices()\r\n          .then(function(devices) {\r\n            devices = devices.filter(function(d) {\r\n              return d.kind === 'videoinput';\r\n            });\r\n            var dev = devices.find(function(d) {\r\n              return matches.some(function(match) {\r\n                return d.label.toLowerCase().indexOf(match) !== -1;\r\n              });\r\n            });\r\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\r\n              dev = devices[devices.length - 1]; // more likely the back cam\r\n            }\r\n            if (dev) {\r\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\r\n                                                        {ideal: dev.deviceId};\r\n            }\r\n            constraints.video = constraintsToChrome_(constraints.video);\r\n            logging('chrome: ' + JSON.stringify(constraints));\r\n            return func(constraints);\r\n          });\r\n        }\r\n      }\r\n      constraints.video = constraintsToChrome_(constraints.video);\r\n    }\r\n    logging('chrome: ' + JSON.stringify(constraints));\r\n    return func(constraints);\r\n  };\r\n\r\n  var shimError_ = function(e) {\r\n    return {\r\n      name: {\r\n        PermissionDeniedError: 'NotAllowedError',\r\n        InvalidStateError: 'NotReadableError',\r\n        DevicesNotFoundError: 'NotFoundError',\r\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\r\n        TrackStartError: 'NotReadableError',\r\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\r\n        MediaDeviceKillSwitchOn: 'NotReadableError'\r\n      }[e.name] || e.name,\r\n      message: e.message,\r\n      constraint: e.constraintName,\r\n      toString: function() {\r\n        return this.name + (this.message && ': ') + this.message;\r\n      }\r\n    };\r\n  };\r\n\r\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\r\n    shimConstraints_(constraints, function(c) {\r\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\r\n        if (onError) {\r\n          onError(shimError_(e));\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  navigator.getUserMedia = getUserMedia_;\r\n\r\n  // Returns the result of getUserMedia as a Promise.\r\n  var getUserMediaPromise_ = function(constraints) {\r\n    return new Promise(function(resolve, reject) {\r\n      navigator.getUserMedia(constraints, resolve, reject);\r\n    });\r\n  };\r\n\r\n  if (!navigator.mediaDevices) {\r\n    navigator.mediaDevices = {\r\n      getUserMedia: getUserMediaPromise_,\r\n      enumerateDevices: function() {\r\n        return new Promise(function(resolve) {\r\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\r\n          return window.MediaStreamTrack.getSources(function(devices) {\r\n            resolve(devices.map(function(device) {\r\n              return {label: device.label,\r\n                kind: kinds[device.kind],\r\n                deviceId: device.id,\r\n                groupId: ''};\r\n            }));\r\n          });\r\n        });\r\n      },\r\n      getSupportedConstraints: function() {\r\n        return {\r\n          deviceId: true, echoCancellation: true, facingMode: true,\r\n          frameRate: true, height: true, width: true\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n  // A shim for getUserMedia method on the mediaDevices object.\r\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\r\n  if (!navigator.mediaDevices.getUserMedia) {\r\n    navigator.mediaDevices.getUserMedia = function(constraints) {\r\n      return getUserMediaPromise_(constraints);\r\n    };\r\n  } else {\r\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\r\n    // function which returns a Promise, it does not accept spec-style\r\n    // constraints.\r\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\r\n        bind(navigator.mediaDevices);\r\n    navigator.mediaDevices.getUserMedia = function(cs) {\r\n      return shimConstraints_(cs, function(c) {\r\n        return origGetUserMedia(c).then(function(stream) {\r\n          if (c.audio && !stream.getAudioTracks().length ||\r\n              c.video && !stream.getVideoTracks().length) {\r\n            stream.getTracks().forEach(function(track) {\r\n              track.stop();\r\n            });\r\n            throw new DOMException('', 'NotFoundError');\r\n          }\r\n          return stream;\r\n        }, function(e) {\r\n          return Promise.reject(shimError_(e));\r\n        });\r\n      });\r\n    };\r\n  }\r\n\r\n  // Dummy devicechange event methods.\r\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\r\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\r\n    navigator.mediaDevices.addEventListener = function() {\r\n      logging('Dummy mediaDevices.addEventListener called.');\r\n    };\r\n  }\r\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\r\n    navigator.mediaDevices.removeEventListener = function() {\r\n      logging('Dummy mediaDevices.removeEventListener called.');\r\n    };\r\n  }\r\n};\r\n\r\n},{\"../utils.js\":13}],7:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar SDPUtils = require('sdp');\r\nvar utils = require('./utils');\r\n\r\n// Wraps the peerconnection event eventNameToWrap in a function\r\n// which returns the modified event object.\r\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n  var proto = window.RTCPeerConnection.prototype;\r\n  var nativeAddEventListener = proto.addEventListener;\r\n  proto.addEventListener = function(nativeEventName, cb) {\r\n    if (nativeEventName !== eventNameToWrap) {\r\n      return nativeAddEventListener.apply(this, arguments);\r\n    }\r\n    var wrappedCallback = function(e) {\r\n      cb(wrapper(e));\r\n    };\r\n    this._eventMap = this._eventMap || {};\r\n    this._eventMap[cb] = wrappedCallback;\r\n    return nativeAddEventListener.apply(this, [nativeEventName,\r\n      wrappedCallback]);\r\n  };\r\n\r\n  var nativeRemoveEventListener = proto.removeEventListener;\r\n  proto.removeEventListener = function(nativeEventName, cb) {\r\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\r\n        || !this._eventMap[cb]) {\r\n      return nativeRemoveEventListener.apply(this, arguments);\r\n    }\r\n    var unwrappedCb = this._eventMap[cb];\r\n    delete this._eventMap[cb];\r\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\r\n      unwrappedCb]);\r\n  };\r\n\r\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\r\n    get: function() {\r\n      return this['_on' + eventNameToWrap];\r\n    },\r\n    set: function(cb) {\r\n      if (this['_on' + eventNameToWrap]) {\r\n        this.removeEventListener(eventNameToWrap,\r\n            this['_on' + eventNameToWrap]);\r\n        delete this['_on' + eventNameToWrap];\r\n      }\r\n      if (cb) {\r\n        this.addEventListener(eventNameToWrap,\r\n            this['_on' + eventNameToWrap] = cb);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  shimRTCIceCandidate: function(window) {\r\n    // foundation is arbitrarily chosen as an indicator for full support for\r\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\r\n    if (window.RTCIceCandidate && 'foundation' in\r\n        window.RTCIceCandidate.prototype) {\r\n      return;\r\n    }\r\n\r\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\r\n    window.RTCIceCandidate = function(args) {\r\n      // Remove the a= which shouldn't be part of the candidate string.\r\n      if (typeof args === 'object' && args.candidate &&\r\n          args.candidate.indexOf('a=') === 0) {\r\n        args = JSON.parse(JSON.stringify(args));\r\n        args.candidate = args.candidate.substr(2);\r\n      }\r\n\r\n      // Augment the native candidate with the parsed fields.\r\n      var nativeCandidate = new NativeRTCIceCandidate(args);\r\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\r\n      var augmentedCandidate = Object.assign(nativeCandidate,\r\n          parsedCandidate);\r\n\r\n      // Add a serializer that does not serialize the extra attributes.\r\n      augmentedCandidate.toJSON = function() {\r\n        return {\r\n          candidate: augmentedCandidate.candidate,\r\n          sdpMid: augmentedCandidate.sdpMid,\r\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\r\n          usernameFragment: augmentedCandidate.usernameFragment,\r\n        };\r\n      };\r\n      return augmentedCandidate;\r\n    };\r\n\r\n    // Hook up the augmented candidate in onicecandidate and\r\n    // addEventListener('icecandidate', ...)\r\n    wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\r\n      if (e.candidate) {\r\n        Object.defineProperty(e, 'candidate', {\r\n          value: new window.RTCIceCandidate(e.candidate),\r\n          writable: 'false'\r\n        });\r\n      }\r\n      return e;\r\n    });\r\n  },\r\n\r\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\r\n\r\n  shimCreateObjectURL: function(window) {\r\n    var URL = window && window.URL;\r\n\r\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\r\n          'srcObject' in window.HTMLMediaElement.prototype &&\r\n        URL.createObjectURL && URL.revokeObjectURL)) {\r\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\r\n      return undefined;\r\n    }\r\n\r\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\r\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\r\n    var streams = new Map(), newId = 0;\r\n\r\n    URL.createObjectURL = function(stream) {\r\n      if ('getTracks' in stream) {\r\n        var url = 'polyblob:' + (++newId);\r\n        streams.set(url, stream);\r\n        utils.deprecated('URL.createObjectURL(stream)',\r\n            'elem.srcObject = stream');\r\n        return url;\r\n      }\r\n      return nativeCreateObjectURL(stream);\r\n    };\r\n    URL.revokeObjectURL = function(url) {\r\n      nativeRevokeObjectURL(url);\r\n      streams.delete(url);\r\n    };\r\n\r\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\r\n                                              'src');\r\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\r\n      get: function() {\r\n        return dsc.get.apply(this);\r\n      },\r\n      set: function(url) {\r\n        this.srcObject = streams.get(url) || null;\r\n        return dsc.set.apply(this, [url]);\r\n      }\r\n    });\r\n\r\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\r\n    window.HTMLMediaElement.prototype.setAttribute = function() {\r\n      if (arguments.length === 2 &&\r\n          ('' + arguments[0]).toLowerCase() === 'src') {\r\n        this.srcObject = streams.get(arguments[1]) || null;\r\n      }\r\n      return nativeSetAttribute.apply(this, arguments);\r\n    };\r\n  }\r\n};\r\n\r\n},{\"./utils\":13,\"sdp\":2}],8:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar utils = require('../utils');\r\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\r\n\r\nmodule.exports = {\r\n  shimGetUserMedia: require('./getusermedia'),\r\n  shimPeerConnection: function(window) {\r\n    var browserDetails = utils.detectBrowser(window);\r\n\r\n    if (window.RTCIceGatherer) {\r\n      // ORTC defines an RTCIceCandidate object but no constructor.\r\n      // Not implemented in Edge.\r\n      if (!window.RTCIceCandidate) {\r\n        window.RTCIceCandidate = function(args) {\r\n          return args;\r\n        };\r\n      }\r\n      // ORTC does not have a session description object but\r\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\r\n      // in the future might have this defined already.\r\n      if (!window.RTCSessionDescription) {\r\n        window.RTCSessionDescription = function(args) {\r\n          return args;\r\n        };\r\n      }\r\n      // this adds an additional event listener to MediaStrackTrack that signals\r\n      // when a tracks enabled property was changed. Workaround for a bug in\r\n      // addStream, see below. No longer required in 15025+\r\n      if (browserDetails.version < 15025) {\r\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\r\n            window.MediaStreamTrack.prototype, 'enabled');\r\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\r\n          set: function(value) {\r\n            origMSTEnabled.set.call(this, value);\r\n            var ev = new Event('enabled');\r\n            ev.enabled = value;\r\n            this.dispatchEvent(ev);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // ORTC defines the DTMF sender a bit different.\r\n    // https://github.com/w3c/ortc/issues/714\r\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\r\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\r\n        get: function() {\r\n          if (this._dtmf === undefined) {\r\n            if (this.track.kind === 'audio') {\r\n              this._dtmf = new window.RTCDtmfSender(this);\r\n            } else if (this.track.kind === 'video') {\r\n              this._dtmf = null;\r\n            }\r\n          }\r\n          return this._dtmf;\r\n        }\r\n      });\r\n    }\r\n\r\n    window.RTCPeerConnection =\r\n        shimRTCPeerConnection(window, browserDetails.version);\r\n  },\r\n  shimReplaceTrack: function(window) {\r\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\r\n    if (window.RTCRtpSender &&\r\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\r\n      window.RTCRtpSender.prototype.replaceTrack =\r\n          window.RTCRtpSender.prototype.setTrack;\r\n    }\r\n  }\r\n};\r\n\r\n},{\"../utils\":13,\"./getusermedia\":9,\"rtcpeerconnection-shim\":1}],9:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\n// Expose public methods.\r\nmodule.exports = function(window) {\r\n  var navigator = window && window.navigator;\r\n\r\n  var shimError_ = function(e) {\r\n    return {\r\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\r\n      message: e.message,\r\n      constraint: e.constraint,\r\n      toString: function() {\r\n        return this.name;\r\n      }\r\n    };\r\n  };\r\n\r\n  // getUserMedia error shim.\r\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\r\n      bind(navigator.mediaDevices);\r\n  navigator.mediaDevices.getUserMedia = function(c) {\r\n    return origGetUserMedia(c).catch(function(e) {\r\n      return Promise.reject(shimError_(e));\r\n    });\r\n  };\r\n};\r\n\r\n},{}],10:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\nvar firefoxShim = {\r\n  shimOnTrack: function(window) {\r\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\r\n        window.RTCPeerConnection.prototype)) {\r\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\r\n        get: function() {\r\n          return this._ontrack;\r\n        },\r\n        set: function(f) {\r\n          if (this._ontrack) {\r\n            this.removeEventListener('track', this._ontrack);\r\n            this.removeEventListener('addstream', this._ontrackpoly);\r\n          }\r\n          this.addEventListener('track', this._ontrack = f);\r\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\r\n            e.stream.getTracks().forEach(function(track) {\r\n              var event = new Event('track');\r\n              event.track = track;\r\n              event.receiver = {track: track};\r\n              event.transceiver = {receiver: event.receiver};\r\n              event.streams = [e.stream];\r\n              this.dispatchEvent(event);\r\n            }.bind(this));\r\n          }.bind(this));\r\n        }\r\n      });\r\n    }\r\n    if (typeof window === 'object' && window.RTCTrackEvent &&\r\n        ('receiver' in window.RTCTrackEvent.prototype) &&\r\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\r\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\r\n        get: function() {\r\n          return {receiver: this.receiver};\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  shimSourceObject: function(window) {\r\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\r\n    if (typeof window === 'object') {\r\n      if (window.HTMLMediaElement &&\r\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\r\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\r\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\r\n          get: function() {\r\n            return this.mozSrcObject;\r\n          },\r\n          set: function(stream) {\r\n            this.mozSrcObject = stream;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  },\r\n\r\n  shimPeerConnection: function(window) {\r\n    var browserDetails = utils.detectBrowser(window);\r\n\r\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\r\n        window.mozRTCPeerConnection)) {\r\n      return; // probably media.peerconnection.enabled=false in about:config\r\n    }\r\n    // The RTCPeerConnection object.\r\n    if (!window.RTCPeerConnection) {\r\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\r\n        if (browserDetails.version < 38) {\r\n          // .urls is not supported in FF < 38.\r\n          // create RTCIceServers with a single url.\r\n          if (pcConfig && pcConfig.iceServers) {\r\n            var newIceServers = [];\r\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\r\n              var server = pcConfig.iceServers[i];\r\n              if (server.hasOwnProperty('urls')) {\r\n                for (var j = 0; j < server.urls.length; j++) {\r\n                  var newServer = {\r\n                    url: server.urls[j]\r\n                  };\r\n                  if (server.urls[j].indexOf('turn') === 0) {\r\n                    newServer.username = server.username;\r\n                    newServer.credential = server.credential;\r\n                  }\r\n                  newIceServers.push(newServer);\r\n                }\r\n              } else {\r\n                newIceServers.push(pcConfig.iceServers[i]);\r\n              }\r\n            }\r\n            pcConfig.iceServers = newIceServers;\r\n          }\r\n        }\r\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\r\n      };\r\n      window.RTCPeerConnection.prototype =\r\n          window.mozRTCPeerConnection.prototype;\r\n\r\n      // wrap static methods. Currently just generateCertificate.\r\n      if (window.mozRTCPeerConnection.generateCertificate) {\r\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\r\n          get: function() {\r\n            return window.mozRTCPeerConnection.generateCertificate;\r\n          }\r\n        });\r\n      }\r\n\r\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\r\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\r\n    }\r\n\r\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\r\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\r\n        .forEach(function(method) {\r\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\r\n          window.RTCPeerConnection.prototype[method] = function() {\r\n            arguments[0] = new ((method === 'addIceCandidate') ?\r\n                window.RTCIceCandidate :\r\n                window.RTCSessionDescription)(arguments[0]);\r\n            return nativeMethod.apply(this, arguments);\r\n          };\r\n        });\r\n\r\n    // support for addIceCandidate(null or undefined)\r\n    var nativeAddIceCandidate =\r\n        window.RTCPeerConnection.prototype.addIceCandidate;\r\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\r\n      if (!arguments[0]) {\r\n        if (arguments[1]) {\r\n          arguments[1].apply(null);\r\n        }\r\n        return Promise.resolve();\r\n      }\r\n      return nativeAddIceCandidate.apply(this, arguments);\r\n    };\r\n\r\n    // shim getStats with maplike support\r\n    var makeMapStats = function(stats) {\r\n      var map = new Map();\r\n      Object.keys(stats).forEach(function(key) {\r\n        map.set(key, stats[key]);\r\n        map[key] = stats[key];\r\n      });\r\n      return map;\r\n    };\r\n\r\n    var modernStatsTypes = {\r\n      inboundrtp: 'inbound-rtp',\r\n      outboundrtp: 'outbound-rtp',\r\n      candidatepair: 'candidate-pair',\r\n      localcandidate: 'local-candidate',\r\n      remotecandidate: 'remote-candidate'\r\n    };\r\n\r\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\r\n    window.RTCPeerConnection.prototype.getStats = function(\r\n      selector,\r\n      onSucc,\r\n      onErr\r\n    ) {\r\n      return nativeGetStats.apply(this, [selector || null])\r\n        .then(function(stats) {\r\n          if (browserDetails.version < 48) {\r\n            stats = makeMapStats(stats);\r\n          }\r\n          if (browserDetails.version < 53 && !onSucc) {\r\n            // Shim only promise getStats with spec-hyphens in type names\r\n            // Leave callback version alone; misc old uses of forEach before Map\r\n            try {\r\n              stats.forEach(function(stat) {\r\n                stat.type = modernStatsTypes[stat.type] || stat.type;\r\n              });\r\n            } catch (e) {\r\n              if (e.name !== 'TypeError') {\r\n                throw e;\r\n              }\r\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\r\n              stats.forEach(function(stat, i) {\r\n                stats.set(i, Object.assign({}, stat, {\r\n                  type: modernStatsTypes[stat.type] || stat.type\r\n                }));\r\n              });\r\n            }\r\n          }\r\n          return stats;\r\n        })\r\n        .then(onSucc, onErr);\r\n    };\r\n  }\r\n};\r\n\r\n// Expose public methods.\r\nmodule.exports = {\r\n  shimOnTrack: firefoxShim.shimOnTrack,\r\n  shimSourceObject: firefoxShim.shimSourceObject,\r\n  shimPeerConnection: firefoxShim.shimPeerConnection,\r\n  shimGetUserMedia: require('./getusermedia')\r\n};\r\n\r\n},{\"../utils\":13,\"./getusermedia\":11}],11:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar utils = require('../utils');\r\nvar logging = utils.log;\r\n\r\n// Expose public methods.\r\nmodule.exports = function(window) {\r\n  var browserDetails = utils.detectBrowser(window);\r\n  var navigator = window && window.navigator;\r\n  var MediaStreamTrack = window && window.MediaStreamTrack;\r\n\r\n  var shimError_ = function(e) {\r\n    return {\r\n      name: {\r\n        InternalError: 'NotReadableError',\r\n        NotSupportedError: 'TypeError',\r\n        PermissionDeniedError: 'NotAllowedError',\r\n        SecurityError: 'NotAllowedError'\r\n      }[e.name] || e.name,\r\n      message: {\r\n        'The operation is insecure.': 'The request is not allowed by the ' +\r\n        'user agent or the platform in the current context.'\r\n      }[e.message] || e.message,\r\n      constraint: e.constraint,\r\n      toString: function() {\r\n        return this.name + (this.message && ': ') + this.message;\r\n      }\r\n    };\r\n  };\r\n\r\n  // getUserMedia constraints shim.\r\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\r\n    var constraintsToFF37_ = function(c) {\r\n      if (typeof c !== 'object' || c.require) {\r\n        return c;\r\n      }\r\n      var require = [];\r\n      Object.keys(c).forEach(function(key) {\r\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\r\n          return;\r\n        }\r\n        var r = c[key] = (typeof c[key] === 'object') ?\r\n            c[key] : {ideal: c[key]};\r\n        if (r.min !== undefined ||\r\n            r.max !== undefined || r.exact !== undefined) {\r\n          require.push(key);\r\n        }\r\n        if (r.exact !== undefined) {\r\n          if (typeof r.exact === 'number') {\r\n            r. min = r.max = r.exact;\r\n          } else {\r\n            c[key] = r.exact;\r\n          }\r\n          delete r.exact;\r\n        }\r\n        if (r.ideal !== undefined) {\r\n          c.advanced = c.advanced || [];\r\n          var oc = {};\r\n          if (typeof r.ideal === 'number') {\r\n            oc[key] = {min: r.ideal, max: r.ideal};\r\n          } else {\r\n            oc[key] = r.ideal;\r\n          }\r\n          c.advanced.push(oc);\r\n          delete r.ideal;\r\n          if (!Object.keys(r).length) {\r\n            delete c[key];\r\n          }\r\n        }\r\n      });\r\n      if (require.length) {\r\n        c.require = require;\r\n      }\r\n      return c;\r\n    };\r\n    constraints = JSON.parse(JSON.stringify(constraints));\r\n    if (browserDetails.version < 38) {\r\n      logging('spec: ' + JSON.stringify(constraints));\r\n      if (constraints.audio) {\r\n        constraints.audio = constraintsToFF37_(constraints.audio);\r\n      }\r\n      if (constraints.video) {\r\n        constraints.video = constraintsToFF37_(constraints.video);\r\n      }\r\n      logging('ff37: ' + JSON.stringify(constraints));\r\n    }\r\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\r\n      onError(shimError_(e));\r\n    });\r\n  };\r\n\r\n  // Returns the result of getUserMedia as a Promise.\r\n  var getUserMediaPromise_ = function(constraints) {\r\n    return new Promise(function(resolve, reject) {\r\n      getUserMedia_(constraints, resolve, reject);\r\n    });\r\n  };\r\n\r\n  // Shim for mediaDevices on older versions.\r\n  if (!navigator.mediaDevices) {\r\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\r\n      addEventListener: function() { },\r\n      removeEventListener: function() { }\r\n    };\r\n  }\r\n  navigator.mediaDevices.enumerateDevices =\r\n      navigator.mediaDevices.enumerateDevices || function() {\r\n        return new Promise(function(resolve) {\r\n          var infos = [\r\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\r\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\r\n          ];\r\n          resolve(infos);\r\n        });\r\n      };\r\n\r\n  if (browserDetails.version < 41) {\r\n    // Work around http://bugzil.la/1169665\r\n    var orgEnumerateDevices =\r\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\r\n    navigator.mediaDevices.enumerateDevices = function() {\r\n      return orgEnumerateDevices().then(undefined, function(e) {\r\n        if (e.name === 'NotFoundError') {\r\n          return [];\r\n        }\r\n        throw e;\r\n      });\r\n    };\r\n  }\r\n  if (browserDetails.version < 49) {\r\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\r\n        bind(navigator.mediaDevices);\r\n    navigator.mediaDevices.getUserMedia = function(c) {\r\n      return origGetUserMedia(c).then(function(stream) {\r\n        // Work around https://bugzil.la/802326\r\n        if (c.audio && !stream.getAudioTracks().length ||\r\n            c.video && !stream.getVideoTracks().length) {\r\n          stream.getTracks().forEach(function(track) {\r\n            track.stop();\r\n          });\r\n          throw new DOMException('The object can not be found here.',\r\n                                 'NotFoundError');\r\n        }\r\n        return stream;\r\n      }, function(e) {\r\n        return Promise.reject(shimError_(e));\r\n      });\r\n    };\r\n  }\r\n  if (!(browserDetails.version > 55 &&\r\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\r\n    var remap = function(obj, a, b) {\r\n      if (a in obj && !(b in obj)) {\r\n        obj[b] = obj[a];\r\n        delete obj[a];\r\n      }\r\n    };\r\n\r\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\r\n        bind(navigator.mediaDevices);\r\n    navigator.mediaDevices.getUserMedia = function(c) {\r\n      if (typeof c === 'object' && typeof c.audio === 'object') {\r\n        c = JSON.parse(JSON.stringify(c));\r\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\r\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\r\n      }\r\n      return nativeGetUserMedia(c);\r\n    };\r\n\r\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\r\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\r\n      MediaStreamTrack.prototype.getSettings = function() {\r\n        var obj = nativeGetSettings.apply(this, arguments);\r\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\r\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\r\n        return obj;\r\n      };\r\n    }\r\n\r\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\r\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\r\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\r\n        if (this.kind === 'audio' && typeof c === 'object') {\r\n          c = JSON.parse(JSON.stringify(c));\r\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\r\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\r\n        }\r\n        return nativeApplyConstraints.apply(this, [c]);\r\n      };\r\n    }\r\n  }\r\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\r\n    if (browserDetails.version < 44) {\r\n      return getUserMedia_(constraints, onSuccess, onError);\r\n    }\r\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\r\n    utils.deprecated('navigator.getUserMedia',\r\n        'navigator.mediaDevices.getUserMedia');\r\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\r\n  };\r\n};\r\n\r\n},{\"../utils\":13}],12:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n'use strict';\r\nvar utils = require('../utils');\r\n\r\nvar safariShim = {\r\n  // TODO: DrAlex, should be here, double check against LayoutTests\r\n\r\n  // TODO: once the back-end for the mac port is done, add.\r\n  // TODO: check for webkitGTK+\r\n  // shimPeerConnection: function() { },\r\n\r\n  shimLocalStreamsAPI: function(window) {\r\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\r\n      return;\r\n    }\r\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\r\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\r\n        if (!this._localStreams) {\r\n          this._localStreams = [];\r\n        }\r\n        return this._localStreams;\r\n      };\r\n    }\r\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\r\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\r\n        var result = null;\r\n        if (this._localStreams) {\r\n          this._localStreams.forEach(function(stream) {\r\n            if (stream.id === id) {\r\n              result = stream;\r\n            }\r\n          });\r\n        }\r\n        if (this._remoteStreams) {\r\n          this._remoteStreams.forEach(function(stream) {\r\n            if (stream.id === id) {\r\n              result = stream;\r\n            }\r\n          });\r\n        }\r\n        return result;\r\n      };\r\n    }\r\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\r\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\r\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\r\n        if (!this._localStreams) {\r\n          this._localStreams = [];\r\n        }\r\n        if (this._localStreams.indexOf(stream) === -1) {\r\n          this._localStreams.push(stream);\r\n        }\r\n        var self = this;\r\n        stream.getTracks().forEach(function(track) {\r\n          _addTrack.call(self, track, stream);\r\n        });\r\n      };\r\n\r\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\r\n        if (stream) {\r\n          if (!this._localStreams) {\r\n            this._localStreams = [stream];\r\n          } else if (this._localStreams.indexOf(stream) === -1) {\r\n            this._localStreams.push(stream);\r\n          }\r\n        }\r\n        _addTrack.call(this, track, stream);\r\n      };\r\n    }\r\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\r\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\r\n        if (!this._localStreams) {\r\n          this._localStreams = [];\r\n        }\r\n        var index = this._localStreams.indexOf(stream);\r\n        if (index === -1) {\r\n          return;\r\n        }\r\n        this._localStreams.splice(index, 1);\r\n        var self = this;\r\n        var tracks = stream.getTracks();\r\n        this.getSenders().forEach(function(sender) {\r\n          if (tracks.indexOf(sender.track) !== -1) {\r\n            self.removeTrack(sender);\r\n          }\r\n        });\r\n      };\r\n    }\r\n  },\r\n  shimRemoteStreamsAPI: function(window) {\r\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\r\n      return;\r\n    }\r\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\r\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\r\n        return this._remoteStreams ? this._remoteStreams : [];\r\n      };\r\n    }\r\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\r\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\r\n        get: function() {\r\n          return this._onaddstream;\r\n        },\r\n        set: function(f) {\r\n          if (this._onaddstream) {\r\n            this.removeEventListener('addstream', this._onaddstream);\r\n            this.removeEventListener('track', this._onaddstreampoly);\r\n          }\r\n          this.addEventListener('addstream', this._onaddstream = f);\r\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\r\n            var stream = e.streams[0];\r\n            if (!this._remoteStreams) {\r\n              this._remoteStreams = [];\r\n            }\r\n            if (this._remoteStreams.indexOf(stream) >= 0) {\r\n              return;\r\n            }\r\n            this._remoteStreams.push(stream);\r\n            var event = new Event('addstream');\r\n            event.stream = e.streams[0];\r\n            this.dispatchEvent(event);\r\n          }.bind(this));\r\n        }\r\n      });\r\n    }\r\n  },\r\n  shimCallbacksAPI: function(window) {\r\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\r\n      return;\r\n    }\r\n    var prototype = window.RTCPeerConnection.prototype;\r\n    var createOffer = prototype.createOffer;\r\n    var createAnswer = prototype.createAnswer;\r\n    var setLocalDescription = prototype.setLocalDescription;\r\n    var setRemoteDescription = prototype.setRemoteDescription;\r\n    var addIceCandidate = prototype.addIceCandidate;\r\n\r\n    prototype.createOffer = function(successCallback, failureCallback) {\r\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\r\n      var promise = createOffer.apply(this, [options]);\r\n      if (!failureCallback) {\r\n        return promise;\r\n      }\r\n      promise.then(successCallback, failureCallback);\r\n      return Promise.resolve();\r\n    };\r\n\r\n    prototype.createAnswer = function(successCallback, failureCallback) {\r\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\r\n      var promise = createAnswer.apply(this, [options]);\r\n      if (!failureCallback) {\r\n        return promise;\r\n      }\r\n      promise.then(successCallback, failureCallback);\r\n      return Promise.resolve();\r\n    };\r\n\r\n    var withCallback = function(description, successCallback, failureCallback) {\r\n      var promise = setLocalDescription.apply(this, [description]);\r\n      if (!failureCallback) {\r\n        return promise;\r\n      }\r\n      promise.then(successCallback, failureCallback);\r\n      return Promise.resolve();\r\n    };\r\n    prototype.setLocalDescription = withCallback;\r\n\r\n    withCallback = function(description, successCallback, failureCallback) {\r\n      var promise = setRemoteDescription.apply(this, [description]);\r\n      if (!failureCallback) {\r\n        return promise;\r\n      }\r\n      promise.then(successCallback, failureCallback);\r\n      return Promise.resolve();\r\n    };\r\n    prototype.setRemoteDescription = withCallback;\r\n\r\n    withCallback = function(candidate, successCallback, failureCallback) {\r\n      var promise = addIceCandidate.apply(this, [candidate]);\r\n      if (!failureCallback) {\r\n        return promise;\r\n      }\r\n      promise.then(successCallback, failureCallback);\r\n      return Promise.resolve();\r\n    };\r\n    prototype.addIceCandidate = withCallback;\r\n  },\r\n  shimGetUserMedia: function(window) {\r\n    var navigator = window && window.navigator;\r\n\r\n    if (!navigator.getUserMedia) {\r\n      if (navigator.webkitGetUserMedia) {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\r\n      } else if (navigator.mediaDevices &&\r\n          navigator.mediaDevices.getUserMedia) {\r\n        navigator.getUserMedia = function(constraints, cb, errcb) {\r\n          navigator.mediaDevices.getUserMedia(constraints)\r\n          .then(cb, errcb);\r\n        }.bind(navigator);\r\n      }\r\n    }\r\n  },\r\n  shimRTCIceServerUrls: function(window) {\r\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\r\n    var OrigPeerConnection = window.RTCPeerConnection;\r\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\r\n      if (pcConfig && pcConfig.iceServers) {\r\n        var newIceServers = [];\r\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\r\n          var server = pcConfig.iceServers[i];\r\n          if (!server.hasOwnProperty('urls') &&\r\n              server.hasOwnProperty('url')) {\r\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\r\n            server = JSON.parse(JSON.stringify(server));\r\n            server.urls = server.url;\r\n            delete server.url;\r\n            newIceServers.push(server);\r\n          } else {\r\n            newIceServers.push(pcConfig.iceServers[i]);\r\n          }\r\n        }\r\n        pcConfig.iceServers = newIceServers;\r\n      }\r\n      return new OrigPeerConnection(pcConfig, pcConstraints);\r\n    };\r\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\r\n    // wrap static methods. Currently just generateCertificate.\r\n    if ('generateCertificate' in window.RTCPeerConnection) {\r\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\r\n        get: function() {\r\n          return OrigPeerConnection.generateCertificate;\r\n        }\r\n      });\r\n    }\r\n  },\r\n  shimTrackEventTransceiver: function(window) {\r\n    // Add event.transceiver member over deprecated event.receiver\r\n    if (typeof window === 'object' && window.RTCPeerConnection &&\r\n        ('receiver' in window.RTCTrackEvent.prototype) &&\r\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\r\n        // defined for some reason even when window.RTCTransceiver is not.\r\n        !window.RTCTransceiver) {\r\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\r\n        get: function() {\r\n          return {receiver: this.receiver};\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  shimCreateOfferLegacy: function(window) {\r\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\r\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\r\n      var pc = this;\r\n      if (offerOptions) {\r\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\r\n          return transceiver.sender.track &&\r\n              transceiver.sender.track.kind === 'audio';\r\n        });\r\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\r\n          if (audioTransceiver.direction === 'sendrecv') {\r\n            audioTransceiver.setDirection('sendonly');\r\n          } else if (audioTransceiver.direction === 'recvonly') {\r\n            audioTransceiver.setDirection('inactive');\r\n          }\r\n        } else if (offerOptions.offerToReceiveAudio === true &&\r\n            !audioTransceiver) {\r\n          pc.addTransceiver('audio');\r\n        }\r\n\r\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\r\n          return transceiver.sender.track &&\r\n              transceiver.sender.track.kind === 'video';\r\n        });\r\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\r\n          if (videoTransceiver.direction === 'sendrecv') {\r\n            videoTransceiver.setDirection('sendonly');\r\n          } else if (videoTransceiver.direction === 'recvonly') {\r\n            videoTransceiver.setDirection('inactive');\r\n          }\r\n        } else if (offerOptions.offerToReceiveVideo === true &&\r\n            !videoTransceiver) {\r\n          pc.addTransceiver('video');\r\n        }\r\n      }\r\n      return origCreateOffer.apply(pc, arguments);\r\n    };\r\n  }\r\n};\r\n\r\n// Expose public methods.\r\nmodule.exports = {\r\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\r\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\r\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\r\n  shimGetUserMedia: safariShim.shimGetUserMedia,\r\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls,\r\n  shimTrackEventTransceiver: safariShim.shimTrackEventTransceiver,\r\n  shimCreateOfferLegacy: safariShim.shimCreateOfferLegacy\r\n  // TODO\r\n  // shimPeerConnection: safariShim.shimPeerConnection\r\n};\r\n\r\n},{\"../utils\":13}],13:[function(require,module,exports){\r\n/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\n\r\nvar logDisabled_ = true;\r\nvar deprecationWarnings_ = true;\r\n\r\n// Utility methods.\r\nvar utils = {\r\n  disableLog: function(bool) {\r\n    if (typeof bool !== 'boolean') {\r\n      return new Error('Argument type: ' + typeof bool +\r\n          '. Please use a boolean.');\r\n    }\r\n    logDisabled_ = bool;\r\n    return (bool) ? 'adapter.js logging disabled' :\r\n        'adapter.js logging enabled';\r\n  },\r\n\r\n  /**\r\n   * Disable or enable deprecation warnings\r\n   * @param {!boolean} bool set to true to disable warnings.\r\n   */\r\n  disableWarnings: function(bool) {\r\n    if (typeof bool !== 'boolean') {\r\n      return new Error('Argument type: ' + typeof bool +\r\n          '. Please use a boolean.');\r\n    }\r\n    deprecationWarnings_ = !bool;\r\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\r\n  },\r\n\r\n  log: function() {\r\n    if (typeof window === 'object') {\r\n      if (logDisabled_) {\r\n        return;\r\n      }\r\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\r\n        console.log.apply(console, arguments);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\r\n   */\r\n  deprecated: function(oldMethod, newMethod) {\r\n    if (!deprecationWarnings_) {\r\n      return;\r\n    }\r\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\r\n        ' instead.');\r\n  },\r\n\r\n  /**\r\n   * Extract browser version out of the provided user agent string.\r\n   *\r\n   * @param {!string} uastring userAgent string.\r\n   * @param {!string} expr Regular expression used as match criteria.\r\n   * @param {!number} pos position in the version string to be returned.\r\n   * @return {!number} browser version.\r\n   */\r\n  extractVersion: function(uastring, expr, pos) {\r\n    var match = uastring.match(expr);\r\n    return match && match.length >= pos && parseInt(match[pos], 10);\r\n  },\r\n\r\n  /**\r\n   * Browser detector.\r\n   *\r\n   * @return {object} result containing browser and version\r\n   *     properties.\r\n   */\r\n  detectBrowser: function(window) {\r\n    var navigator = window && window.navigator;\r\n\r\n    // Returned result object.\r\n    var result = {};\r\n    result.browser = null;\r\n    result.version = null;\r\n\r\n    // Fail early if it's not a browser\r\n    if (typeof window === 'undefined' || !window.navigator) {\r\n      result.browser = 'Not a browser.';\r\n      return result;\r\n    }\r\n\r\n    // Firefox.\r\n    if (navigator.mozGetUserMedia) {\r\n      result.browser = 'firefox';\r\n      result.version = this.extractVersion(navigator.userAgent,\r\n          /Firefox\\/(\\d+)\\./, 1);\r\n    } else if (navigator.webkitGetUserMedia) {\r\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\r\n      if (window.webkitRTCPeerConnection) {\r\n        result.browser = 'chrome';\r\n        result.version = this.extractVersion(navigator.userAgent,\r\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\r\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\r\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\r\n          result.browser = 'safari';\r\n          result.version = this.extractVersion(navigator.userAgent,\r\n            /AppleWebKit\\/(\\d+)\\./, 1);\r\n        } else { // unknown webkit-based browser.\r\n          result.browser = 'Unsupported webkit-based browser ' +\r\n              'with GUM support but no WebRTC support.';\r\n          return result;\r\n        }\r\n      }\r\n    } else if (navigator.mediaDevices &&\r\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\r\n      result.browser = 'edge';\r\n      result.version = this.extractVersion(navigator.userAgent,\r\n          /Edge\\/(\\d+).(\\d+)$/, 2);\r\n    } else if (navigator.mediaDevices &&\r\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\r\n        // Safari, with webkitGetUserMedia removed.\r\n      result.browser = 'safari';\r\n      result.version = this.extractVersion(navigator.userAgent,\r\n          /AppleWebKit\\/(\\d+)\\./, 1);\r\n    } else { // Default fallthrough: not supported.\r\n      result.browser = 'Not a supported browser.';\r\n      return result;\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n};\r\n\r\n// Export.\r\nmodule.exports = {\r\n  log: utils.log,\r\n  deprecated: utils.deprecated,\r\n  disableLog: utils.disableLog,\r\n  disableWarnings: utils.disableWarnings,\r\n  extractVersion: utils.extractVersion,\r\n  shimCreateObjectURL: utils.shimCreateObjectURL,\r\n  detectBrowser: utils.detectBrowser.bind(utils)\r\n};\r\n\r\n},{}]},{},[3])(3)\r\n});\r\n","require(\"!!C:\\\\workspace\\\\www\\\\licode\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\workspace\\\\www\\\\licode\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\workspace\\\\www\\\\licode\\\\erizo_controller\\\\erizoClient\\\\src\\\\utils\\\\L.Resizer.js\"))","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","module.exports = \"/* globals $$, jQuery, Elements, document, window, L */\\r\\n\\r\\n/**\\r\\n* Copyright 2013 Marc J. Schmidt. See the LICENSE file at the top-level\\r\\n* directory of this distribution and at\\r\\n* https://github.com/marcj/css-element-queries/blob/master/LICENSE.\\r\\n*/\\r\\nthis.L = this.L || {};\\r\\n\\r\\n/**\\r\\n * @param {HTMLElement} element\\r\\n * @param {String}      prop\\r\\n * @returns {String|Number}\\r\\n */\\r\\nL.GetComputedStyle = (computedElement, prop) => {\\r\\n  if (computedElement.currentStyle) {\\r\\n    return computedElement.currentStyle[prop];\\r\\n  } else if (window.getComputedStyle) {\\r\\n    return window.getComputedStyle(computedElement, null).getPropertyValue(prop);\\r\\n  }\\r\\n  return computedElement.style[prop];\\r\\n};\\r\\n\\r\\n  /**\\r\\n   *\\r\\n   * @type {Function}\\r\\n   * @constructor\\r\\n   */\\r\\nL.ElementQueries = function ElementQueries() {\\r\\n      /**\\r\\n       *\\r\\n       * @param element\\r\\n       * @returns {Number}\\r\\n       */\\r\\n  function getEmSize(element = document.documentElement) {\\r\\n    const fontSize = L.GetComputedStyle(element, 'fontSize');\\r\\n    return parseFloat(fontSize) || 16;\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       *\\r\\n       * @copyright https://github.com/Mr0grog/element-query/blob/master/LICENSE\\r\\n       *\\r\\n       * @param element\\r\\n       * @param value\\r\\n       * @param units\\r\\n       * @returns {*}\\r\\n       */\\r\\n  function convertToPx(element, originalValue) {\\r\\n    let vh;\\r\\n    let vw;\\r\\n    let chooser;\\r\\n    const units = originalValue.replace(/[0-9]*/, '');\\r\\n    const value = parseFloat(originalValue);\\r\\n    switch (units) {\\r\\n      case 'px':\\r\\n        return value;\\r\\n      case 'em':\\r\\n        return value * getEmSize(element);\\r\\n      case 'rem':\\r\\n        return value * getEmSize();\\r\\n              // Viewport units!\\r\\n              // According to http://quirksmode.org/mobile/tableViewport.html\\r\\n              // documentElement.clientWidth/Height gets us the most reliable info\\r\\n      case 'vw':\\r\\n        return (value * document.documentElement.clientWidth) / 100;\\r\\n      case 'vh':\\r\\n        return (value * document.documentElement.clientHeight) / 100;\\r\\n      case 'vmin':\\r\\n      case 'vmax':\\r\\n        vw = document.documentElement.clientWidth / 100;\\r\\n        vh = document.documentElement.clientHeight / 100;\\r\\n        chooser = Math[units === 'vmin' ? 'min' : 'max'];\\r\\n        return value * chooser(vw, vh);\\r\\n      default:\\r\\n        return value;\\r\\n              // for now, not supporting physical units (since they are just a set number of px)\\r\\n              // or ex/ch (getting accurate measurements is hard)\\r\\n    }\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       *\\r\\n       * @param {HTMLElement} element\\r\\n       * @constructor\\r\\n       */\\r\\n  function SetupInformation(element) {\\r\\n    this.element = element;\\r\\n    this.options = [];\\r\\n    let i;\\r\\n    let j;\\r\\n    let option;\\r\\n    let width = 0;\\r\\n    let height = 0;\\r\\n    let value;\\r\\n    let actualValue;\\r\\n    let attrValues;\\r\\n    let attrValue;\\r\\n    let attrName;\\r\\n\\r\\n          /**\\r\\n           * @param option {mode: 'min|max', property: 'width|height', value: '123px'}\\r\\n           */\\r\\n    this.addOption = (newOption) => {\\r\\n      this.options.push(newOption);\\r\\n    };\\r\\n\\r\\n    const attributes = ['min-width', 'min-height', 'max-width', 'max-height'];\\r\\n\\r\\n          /**\\r\\n           * Extracts the computed width/height and sets to min/max- attribute.\\r\\n           */\\r\\n    this.call = () => {\\r\\n              // extract current dimensions\\r\\n      width = this.element.offsetWidth;\\r\\n      height = this.element.offsetHeight;\\r\\n\\r\\n      attrValues = {};\\r\\n\\r\\n      for (i = 0, j = this.options.length; i < j; i += 1) {\\r\\n        option = this.options[i];\\r\\n        value = convertToPx(this.element, option.value);\\r\\n\\r\\n        actualValue = option.property === 'width' ? width : height;\\r\\n        attrName = `${option.mode}-${option.property}`;\\r\\n        attrValue = '';\\r\\n\\r\\n        if (option.mode === 'min' && actualValue >= value) {\\r\\n          attrValue += option.value;\\r\\n        }\\r\\n\\r\\n        if (option.mode === 'max' && actualValue <= value) {\\r\\n          attrValue += option.value;\\r\\n        }\\r\\n\\r\\n        if (!attrValues[attrName]) attrValues[attrName] = '';\\r\\n        if (attrValue && (` ${attrValues[attrName]} `)\\r\\n                                            .indexOf(` ${attrValue} `) === -1) {\\r\\n          attrValues[attrName] += ` ${attrValue}`;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      for (let k = 0; k < attributes.length; k += 1) {\\r\\n        if (attrValues[attributes[k]]) {\\r\\n          this.element.setAttribute(attributes[k],\\r\\n                                                attrValues[attributes[k]].substr(1));\\r\\n        } else {\\r\\n          this.element.removeAttribute(attributes[k]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       * @param {HTMLElement} element\\r\\n       * @param {Object}      options\\r\\n       */\\r\\n  function setupElement(originalElement, options) {\\r\\n    const element = originalElement;\\r\\n    if (element.elementQueriesSetupInformation) {\\r\\n      element.elementQueriesSetupInformation.addOption(options);\\r\\n    } else {\\r\\n      element.elementQueriesSetupInformation = new SetupInformation(element);\\r\\n      element.elementQueriesSetupInformation.addOption(options);\\r\\n      element.sensor = new L.ResizeSensor(element, () => {\\r\\n        element.elementQueriesSetupInformation.call();\\r\\n      });\\r\\n    }\\r\\n    element.elementQueriesSetupInformation.call();\\r\\n    return element;\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       * @param {String} selector\\r\\n       * @param {String} mode min|max\\r\\n       * @param {String} property width|height\\r\\n       * @param {String} value\\r\\n       */\\r\\n  function queueQuery(selector, mode, property, value) {\\r\\n    let query;\\r\\n    if (document.querySelectorAll) query = document.querySelectorAll.bind(document);\\r\\n    if (!query && typeof $$ !== 'undefined') query = $$;\\r\\n    if (!query && typeof jQuery !== 'undefined') query = jQuery;\\r\\n\\r\\n    if (!query) {\\r\\n      throw new Error('No document.querySelectorAll, jQuery or Mootools\\\\'s $$ found.');\\r\\n    }\\r\\n\\r\\n    const elements = query(selector) || [];\\r\\n    for (let i = 0, j = elements.length; i < j; i += 1) {\\r\\n      elements[i] = setupElement(elements[i], {\\r\\n        mode,\\r\\n        property,\\r\\n        value,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  const regex = /,?([^,\\\\n]*)\\\\[[\\\\s\\\\t]*(min|max)-(width|height)[\\\\s\\\\t]*[~$^]?=[\\\\s\\\\t]*\\\"([^\\\"]*)\\\"[\\\\s\\\\t]*]([^\\\\n\\\\s{]*)/mgi;  // jshint ignore:line\\r\\n\\r\\n      /**\\r\\n       * @param {String} css\\r\\n       */\\r\\n  function extractQuery(originalCss) {\\r\\n    let match;\\r\\n    const css = originalCss.replace(/'/g, '\\\"');\\r\\n    while ((match = regex.exec(css)) !== null) {\\r\\n      if (match.length > 5) {\\r\\n        queueQuery(match[1] || match[5], match[2], match[3], match[4]);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       * @param {CssRule[]|String} rules\\r\\n       */\\r\\n  function readRules(originalRules) {\\r\\n    if (!originalRules) {\\r\\n      return;\\r\\n    }\\r\\n    let selector = '';\\r\\n    let rules = originalRules;\\r\\n    if (typeof originalRules === 'string') {\\r\\n      rules = originalRules.toLowerCase();\\r\\n      if (rules.indexOf('min-width') !== -1 || rules.indexOf('max-width') !== -1) {\\r\\n        extractQuery(rules);\\r\\n      }\\r\\n    } else {\\r\\n      for (let i = 0, j = rules.length; i < j; i += 1) {\\r\\n        if (rules[i].type === 1) {\\r\\n          selector = rules[i].selectorText || rules[i].cssText;\\r\\n          if (selector.indexOf('min-height') !== -1 ||\\r\\n                          selector.indexOf('max-height') !== -1) {\\r\\n            extractQuery(selector);\\r\\n          } else if (selector.indexOf('min-width') !== -1 ||\\r\\n                                 selector.indexOf('max-width') !== -1) {\\r\\n            extractQuery(selector);\\r\\n          }\\r\\n        } else if (rules[i].type === 4) {\\r\\n          readRules(rules[i].cssRules || rules[i].rules);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       * Searches all css rules and setups the event listener\\r\\n       * to all elements with element query rules..\\r\\n       */\\r\\n  this.init = () => {\\r\\n    const styleSheets = document.styleSheets || [];\\r\\n    for (let i = 0, j = styleSheets.length; i < j; i += 1) {\\r\\n      if (Object.prototype.hasOwnProperty.call(styleSheets[i], 'cssText')) {\\r\\n        readRules(styleSheets[i].cssText);\\r\\n      } else if (Object.prototype.hasOwnProperty.call(styleSheets[i], 'cssRules')) {\\r\\n        readRules(styleSheets[i].cssRules);\\r\\n      } else if (Object.prototype.hasOwnProperty.call(styleSheets[i], 'rules')) {\\r\\n        readRules(styleSheets[i].rules);\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n};\\r\\n\\r\\nfunction init() {\\r\\n  (new L.ElementQueries()).init();\\r\\n}\\r\\n\\r\\nif (window.addEventListener) {\\r\\n  window.addEventListener('load', init, false);\\r\\n} else {\\r\\n  window.attachEvent('onload', init);\\r\\n}\\r\\n\\r\\n  /**\\r\\n   * Iterate over each of the provided element(s).\\r\\n   *\\r\\n   * @param {HTMLElement|HTMLElement[]} elements\\r\\n   * @param {Function}                  callback\\r\\n   */\\r\\nfunction forEachElement(elements, callback = () => {}) {\\r\\n  const elementsType = Object.prototype.toString.call(elements);\\r\\n  const isCollectionTyped = (elementsType === '[object Array]' ||\\r\\n          (elementsType === '[object NodeList]') ||\\r\\n          (elementsType === '[object HTMLCollection]') ||\\r\\n          (typeof jQuery !== 'undefined' && elements instanceof jQuery) || // jquery\\r\\n          (typeof Elements !== 'undefined' && elements instanceof Elements) // mootools\\r\\n      );\\r\\n  let i = 0;\\r\\n  const j = elements.length;\\r\\n  if (isCollectionTyped) {\\r\\n    for (; i < j; i += 1) {\\r\\n      callback(elements[i]);\\r\\n    }\\r\\n  } else {\\r\\n    callback(elements);\\r\\n  }\\r\\n}\\r\\n  /**\\r\\n   * Class for dimension change detection.\\r\\n   *\\r\\n   * @param {Element|Element[]|Elements|jQuery} element\\r\\n   * @param {Function} callback\\r\\n   *\\r\\n   * @constructor\\r\\n   */\\r\\nL.ResizeSensor = function ResizeSensor(element, callback = () => {}) {\\r\\n      /**\\r\\n       *\\r\\n       * @constructor\\r\\n       */\\r\\n  function EventQueue() {\\r\\n    let q = [];\\r\\n    this.add = (ev) => {\\r\\n      q.push(ev);\\r\\n    };\\r\\n\\r\\n    let i;\\r\\n    let j;\\r\\n    this.call = () => {\\r\\n      for (i = 0, j = q.length; i < j; i += 1) {\\r\\n        q[i].call();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    this.remove = (ev) => {\\r\\n      const newQueue = [];\\r\\n      for (i = 0, j = q.length; i < j; i += 1) {\\r\\n        if (q[i] !== ev) newQueue.push(q[i]);\\r\\n      }\\r\\n      q = newQueue;\\r\\n    };\\r\\n\\r\\n    this.length = () => q.length;\\r\\n  }\\r\\n\\r\\n      /**\\r\\n       *\\r\\n       * @param {HTMLElement} element\\r\\n       * @param {Function}    resized\\r\\n       */\\r\\n  function attachResizeEvent(htmlElement, resized) {\\r\\n    // Only used for the dirty checking, so the event callback count is limted\\r\\n    //  to max 1 call per fps per sensor.\\r\\n    // In combination with the event based resize sensor this saves cpu time,\\r\\n    // because the sensor is too fast and\\r\\n    // would generate too many unnecessary events.\\r\\n    const customRequestAnimationFrame = window.requestAnimationFrame ||\\r\\n    window.mozRequestAnimationFrame ||\\r\\n    window.webkitRequestAnimationFrame ||\\r\\n    function delay(fn) {\\r\\n      return window.setTimeout(fn, 20);\\r\\n    };\\r\\n\\r\\n    const newElement = htmlElement;\\r\\n    if (!newElement.resizedAttached) {\\r\\n      newElement.resizedAttached = new EventQueue();\\r\\n      newElement.resizedAttached.add(resized);\\r\\n    } else if (newElement.resizedAttached) {\\r\\n      newElement.resizedAttached.add(resized);\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    newElement.resizeSensor = document.createElement('div');\\r\\n    newElement.resizeSensor.className = 'resize-sensor';\\r\\n    const style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; ' +\\r\\n                      'overflow: hidden; z-index: -1; visibility: hidden;';\\r\\n    const styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\\r\\n\\r\\n    newElement.resizeSensor.style.cssText = style;\\r\\n    newElement.resizeSensor.innerHTML =\\r\\n              `<div class=\\\"resize-sensor-expand\\\" style=\\\"${style}\\\">` +\\r\\n                  `<div style=\\\"${styleChild}\\\"></div>` +\\r\\n              '</div>' +\\r\\n              `<div class=\\\"resize-sensor-shrink\\\" style=\\\"${style}\\\">` +\\r\\n                  `<div style=\\\"${styleChild} width: 200%; height: 200%\\\"></div>` +\\r\\n              '</div>';\\r\\n    newElement.appendChild(newElement.resizeSensor);\\r\\n\\r\\n    if (L.GetComputedStyle(newElement, 'position') === 'static') {\\r\\n      newElement.style.position = 'relative';\\r\\n    }\\r\\n\\r\\n    const expand = newElement.resizeSensor.childNodes[0];\\r\\n    const expandChild = expand.childNodes[0];\\r\\n    const shrink = newElement.resizeSensor.childNodes[1];\\r\\n\\r\\n    const reset = () => {\\r\\n      expandChild.style.width = `${100000}px`;\\r\\n      expandChild.style.height = `${100000}px`;\\r\\n\\r\\n      expand.scrollLeft = 100000;\\r\\n      expand.scrollTop = 100000;\\r\\n\\r\\n      shrink.scrollLeft = 100000;\\r\\n      shrink.scrollTop = 100000;\\r\\n    };\\r\\n\\r\\n    reset();\\r\\n    let dirty = false;\\r\\n\\r\\n    const dirtyChecking = () => {\\r\\n      if (!newElement.resizedAttached) return;\\r\\n\\r\\n      if (dirty) {\\r\\n        newElement.resizedAttached.call();\\r\\n        dirty = false;\\r\\n      }\\r\\n\\r\\n      customRequestAnimationFrame(dirtyChecking);\\r\\n    };\\r\\n\\r\\n    customRequestAnimationFrame(dirtyChecking);\\r\\n    let lastWidth;\\r\\n    let lastHeight;\\r\\n    let cachedWidth;\\r\\n    let cachedHeight; // useful to not query offsetWidth twice\\r\\n\\r\\n    const onScroll = () => {\\r\\n      if ((cachedWidth = newElement.offsetWidth) !== lastWidth ||\\r\\n                (cachedHeight = newElement.offsetHeight) !== lastHeight) {\\r\\n        dirty = true;\\r\\n\\r\\n        lastWidth = cachedWidth;\\r\\n        lastHeight = cachedHeight;\\r\\n      }\\r\\n      reset();\\r\\n    };\\r\\n\\r\\n    const addEvent = (el, name, cb) => {\\r\\n      if (el.attachEvent) {\\r\\n        el.attachEvent(`on${name}`, cb);\\r\\n      } else {\\r\\n        el.addEventListener(name, cb);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    addEvent(expand, 'scroll', onScroll);\\r\\n    addEvent(shrink, 'scroll', onScroll);\\r\\n  }\\r\\n\\r\\n  forEachElement(element, (elem) => {\\r\\n    attachResizeEvent(elem, callback);\\r\\n  });\\r\\n\\r\\n  this.detach = (ev) => {\\r\\n    L.ResizeSensor.detach(element, ev);\\r\\n  };\\r\\n};\\r\\n\\r\\nL.ResizeSensor.detach = (element, ev) => {\\r\\n  forEachElement(element, (elem) => {\\r\\n    const elementItem = elem;\\r\\n    if (elementItem.resizedAttached && typeof ev === 'function') {\\r\\n      elementItem.resizedAttached.remove(ev);\\r\\n      if (elementItem.resizedAttached.length()) return;\\r\\n    }\\r\\n    if (elementItem.resizeSensor) {\\r\\n      if (elementItem.contains(elementItem.resizeSensor)) {\\r\\n        elementItem.removeChild(elementItem.resizeSensor);\\r\\n      }\\r\\n      delete elementItem.resizeSensor;\\r\\n      delete elementItem.resizedAttached;\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\"","const SdpHelpers = {};\r\n\r\nSdpHelpers.addSim = (spatialLayers) => {\r\n  let line = 'a=ssrc-group:SIM';\r\n  spatialLayers.forEach((spatialLayerId) => {\r\n    line += ` ${spatialLayerId}`;\r\n  });\r\n  return `${line}\\r\\n`;\r\n};\r\n\r\nSdpHelpers.addGroup = (spatialLayerId, spatialLayerIdRtx) =>\r\n  `a=ssrc-group:FID ${spatialLayerId} ${spatialLayerIdRtx}\\r\\n`;\r\n\r\nSdpHelpers.addSpatialLayer = (cname, msid, mslabel,\r\n  label, spatialLayerId, spatialLayerIdRtx) =>\r\n  `a=ssrc:${spatialLayerId} cname:${cname}\\r\\n` +\r\n  `a=ssrc:${spatialLayerId} msid:${msid}\\r\\n` +\r\n  `a=ssrc:${spatialLayerId} mslabel:${mslabel}\\r\\n` +\r\n  `a=ssrc:${spatialLayerId} label:${label}\\r\\n` +\r\n  `a=ssrc:${spatialLayerIdRtx} cname:${cname}\\r\\n` +\r\n  `a=ssrc:${spatialLayerIdRtx} msid:${msid}\\r\\n` +\r\n  `a=ssrc:${spatialLayerIdRtx} mslabel:${mslabel}\\r\\n` +\r\n  `a=ssrc:${spatialLayerIdRtx} label:${label}\\r\\n`;\r\n\r\nSdpHelpers.setMaxBW = (sdp, spec) => {\r\n  if (!spec.p2p) {\r\n    return;\r\n  }\r\n  if (spec.video && spec.maxVideoBW) {\r\n    const video = sdp.getMedia('video');\r\n    if (video) {\r\n      video.setBitrate(spec.maxVideoBW);\r\n    }\r\n  }\r\n\r\n  if (spec.audio && spec.maxAudioBW) {\r\n    const audio = sdp.getMedia('audio');\r\n    if (audio) {\r\n      audio.setBitrate(spec.maxAudioBW);\r\n    }\r\n  }\r\n};\r\n\r\nSdpHelpers.enableOpusNacks = (sdpInput) => {\r\n  let sdp = sdpInput;\r\n  const sdpMatch = sdp.match(/a=rtpmap:(.*)opus.*\\r\\n/);\r\n  if (sdpMatch !== null) {\r\n    const theLine = `${sdpMatch[0]}a=rtcp-fb:${sdpMatch[1]}nack\\r\\n`;\r\n    sdp = sdp.replace(sdpMatch[0], theLine);\r\n  }\r\n\r\n  return sdp;\r\n};\r\n\r\nSdpHelpers.setParamForCodecs = (sdpInfo, mediaType, paramName, value) => {\r\n  sdpInfo.medias.forEach((mediaInfo) => {\r\n    if (mediaInfo.id === mediaType) {\r\n      mediaInfo.codecs.forEach((codec) => {\r\n        codec.setParam(paramName, value);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default SdpHelpers;\r\n","/* global RTCSessionDescription, RTCIceCandidate, RTCPeerConnection */\r\n// eslint-disable-next-line\r\nimport SemanticSdp from '../../../common/semanticSdp/SemanticSdp';\r\n\r\nimport SdpHelpers from '../utils/SdpHelpers';\r\nimport Logger from '../utils/Logger';\r\n\r\nconst BaseStack = (specInput) => {\r\n  const that = {};\r\n  const specBase = specInput;\r\n  const offerQueue = [];\r\n  let localDesc;\r\n  let remoteDesc;\r\n  let localSdp;\r\n  let remoteSdp;\r\n  let processOffer;\r\n  let isNegotiating = false;\r\n  let latestSessionVersion = -1;\r\n\r\n  Logger.info('Starting Base stack', specBase);\r\n\r\n  that.pcConfig = {\r\n    iceServers: [],\r\n  };\r\n\r\n  that.con = {};\r\n  if (specBase.iceServers !== undefined) {\r\n    that.pcConfig.iceServers = specBase.iceServers;\r\n  }\r\n  if (specBase.forceTurn === true) {\r\n    that.pcConfig.iceTransportPolicy = 'relay';\r\n  }\r\n  that.audio = specBase.audio;\r\n  that.video = specBase.video;\r\n  if (that.audio === undefined) {\r\n    that.audio = true;\r\n  }\r\n  if (that.video === undefined) {\r\n    that.video = true;\r\n  }\r\n  specBase.remoteCandidates = [];\r\n  specBase.localCandidates = [];\r\n  specBase.remoteDescriptionSet = false;\r\n\r\n  that.mediaConstraints = {\r\n    offerToReceiveVideo: (that.video !== undefined && that.video !== false),\r\n    offerToReceiveAudio: (that.audio !== undefined && that.audio !== false),\r\n  };\r\n\r\n  that.peerConnection = new RTCPeerConnection(that.pcConfig, that.con);\r\n\r\n  // Aux functions\r\n\r\n  const errorCallback = (where, errorcb, message) => {\r\n    Logger.error('message:', message, 'in baseStack at', where);\r\n    if (errorcb !== undefined) {\r\n      errorcb('error');\r\n    }\r\n  };\r\n\r\n  const successCallback = (message) => {\r\n    Logger.info('Success in BaseStack', message);\r\n  };\r\n\r\n  const onIceCandidate = (event) => {\r\n    let candidateObject = {};\r\n    const candidate = event.candidate;\r\n    if (!candidate) {\r\n      Logger.info('Gathered all candidates. Sending END candidate');\r\n      candidateObject = {\r\n        sdpMLineIndex: -1,\r\n        sdpMid: 'end',\r\n        candidate: 'end',\r\n      };\r\n    } else {\r\n      candidateObject = {\r\n        sdpMLineIndex: candidate.sdpMLineIndex,\r\n        sdpMid: candidate.sdpMid,\r\n        candidate: candidate.candidate,\r\n      };\r\n      if (!candidateObject.candidate.match(/a=/)) {\r\n        candidateObject.candidate = `a=${candidateObject.candidate}`;\r\n      }\r\n    }\r\n\r\n    if (specBase.remoteDescriptionSet) {\r\n      specBase.callback({ type: 'candidate', candidate: candidateObject });\r\n    } else {\r\n      specBase.localCandidates.push(candidateObject);\r\n      Logger.info('Storing candidate: ', specBase.localCandidates.length, candidateObject);\r\n    }\r\n  };\r\n\r\n  const checkOfferQueue = () => {\r\n    if (!isNegotiating && offerQueue.length > 0) {\r\n      const args = offerQueue.pop();\r\n      if (args[0] === 'local') {\r\n        that.createOffer(args[1], args[2], args[3]);\r\n      } else {\r\n        processOffer(args[1]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const setLocalDescForOffer = (isSubscribe, streamId, sessionDescription) => {\r\n    localDesc = sessionDescription;\r\n    if (!isSubscribe) {\r\n      localDesc.sdp = that.enableSimulcast(localDesc.sdp);\r\n    }\r\n    localSdp = SemanticSdp.SDPInfo.processString(localDesc.sdp);\r\n    SdpHelpers.setMaxBW(localSdp, specBase);\r\n    localDesc.sdp = localSdp.toString();\r\n    that.localSdp = localSdp;\r\n\r\n    specBase.callback({\r\n      type: localDesc.type,\r\n      sdp: localDesc.sdp,\r\n      config: { maxVideoBW: specBase.maxVideoBW },\r\n    }, streamId);\r\n  };\r\n\r\n  const setLocalDescForAnswer = (sessionDescription) => {\r\n    localDesc = sessionDescription;\r\n    localSdp = SemanticSdp.SDPInfo.processString(localDesc.sdp);\r\n    SdpHelpers.setMaxBW(localSdp, specBase);\r\n    localDesc.sdp = localSdp.toString();\r\n    that.localSdp = localSdp;\r\n    specBase.callback({\r\n      type: localDesc.type,\r\n      sdp: localDesc.sdp,\r\n      config: { maxVideoBW: specBase.maxVideoBW },\r\n    });\r\n    Logger.info('Setting local description', localDesc);\r\n    that.peerConnection.setLocalDescription(localDesc).then(() => {\r\n      isNegotiating = false;\r\n      checkOfferQueue();\r\n      successCallback();\r\n    }).catch(errorCallback);\r\n  };\r\n\r\n  processOffer = (message) => {\r\n    const msg = message;\r\n    if (isNegotiating) {\r\n      offerQueue.push(['remote', message]);\r\n      return;\r\n    }\r\n    isNegotiating = true;\r\n    remoteSdp = SemanticSdp.SDPInfo.processString(msg.sdp);\r\n    SdpHelpers.setMaxBW(remoteSdp, specBase);\r\n    msg.sdp = remoteSdp.toString();\r\n    that.remoteSdp = remoteSdp;\r\n    that.peerConnection.setRemoteDescription(msg).then(() => {\r\n      that.peerConnection.createAnswer(that.mediaConstraints)\r\n      .then(setLocalDescForAnswer)\r\n      .catch(errorCallback.bind(null, 'createAnswer', undefined));\r\n      specBase.remoteDescriptionSet = true;\r\n    }).catch(errorCallback.bind(null, 'process Offer', undefined));\r\n  };\r\n\r\n  const processAnswer = (message) => {\r\n    const msg = message;\r\n\r\n    remoteSdp = SemanticSdp.SDPInfo.processString(msg.sdp);\r\n    const sessionVersion = remoteSdp && remoteSdp.origin && remoteSdp.origin.sessionVersion;\r\n    if (latestSessionVersion >= sessionVersion) {\r\n      return;\r\n    }\r\n    Logger.info('Set remote and local description');\r\n    latestSessionVersion = sessionVersion;\r\n\r\n    SdpHelpers.setMaxBW(remoteSdp, specBase);\r\n    that.setStartVideoBW(remoteSdp);\r\n    that.setHardMinVideoBW(remoteSdp);\r\n\r\n    msg.sdp = remoteSdp.toString();\r\n    Logger.debug('Remote Description', msg.sdp);\r\n    Logger.debug('Local Description', localDesc.sdp);\r\n    that.remoteSdp = remoteSdp;\r\n\r\n    remoteDesc = msg;\r\n    that.peerConnection.setLocalDescription(localDesc).then(() => {\r\n      that.peerConnection.setRemoteDescription(new RTCSessionDescription(msg)).then(() => {\r\n        specBase.remoteDescriptionSet = true;\r\n        Logger.info('Candidates to be added: ', specBase.remoteCandidates.length,\r\n                      specBase.remoteCandidates);\r\n        while (specBase.remoteCandidates.length > 0) {\r\n          // IMPORTANT: preserve ordering of candidates\r\n          that.peerConnection.addIceCandidate(specBase.remoteCandidates.shift());\r\n        }\r\n        Logger.info('Local candidates to send:', specBase.localCandidates.length);\r\n        while (specBase.localCandidates.length > 0) {\r\n          // IMPORTANT: preserve ordering of candidates\r\n          specBase.callback({ type: 'candidate', candidate: specBase.localCandidates.shift() });\r\n        }\r\n        isNegotiating = false;\r\n        checkOfferQueue();\r\n      }).catch(errorCallback.bind(null, 'processAnswer', undefined));\r\n    }).catch(errorCallback.bind(null, 'processAnswer', undefined));\r\n  };\r\n\r\n  const processNewCandidate = (message) => {\r\n    const msg = message;\r\n    try {\r\n      let obj;\r\n      if (typeof (msg.candidate) === 'object') {\r\n        obj = msg.candidate;\r\n      } else {\r\n        obj = JSON.parse(msg.candidate);\r\n      }\r\n      if (obj.candidate === 'end') {\r\n        // ignore the end candidate for chrome\r\n        return;\r\n      }\r\n      obj.candidate = obj.candidate.replace(/a=/g, '');\r\n      obj.sdpMLineIndex = parseInt(obj.sdpMLineIndex, 10);\r\n      const candidate = new RTCIceCandidate(obj);\r\n      if (specBase.remoteDescriptionSet) {\r\n        that.peerConnection.addIceCandidate(candidate);\r\n      } else {\r\n        specBase.remoteCandidates.push(candidate);\r\n      }\r\n    } catch (e) {\r\n      Logger.error('Error parsing candidate', msg.candidate);\r\n    }\r\n  };\r\n\r\n  // Peerconnection events\r\n\r\n  that.peerConnection.onicecandidate = onIceCandidate;\r\n  // public functions\r\n\r\n  that.setStartVideoBW = (sdpInput) => {\r\n    Logger.error('startVideoBW not implemented for this browser');\r\n    return sdpInput;\r\n  };\r\n\r\n  that.setHardMinVideoBW = (sdpInput) => {\r\n    Logger.error('hardMinVideoBw not implemented for this browser');\r\n    return sdpInput;\r\n  };\r\n\r\n  that.enableSimulcast = (sdpInput) => {\r\n    Logger.error('Simulcast not implemented');\r\n    return sdpInput;\r\n  };\r\n\r\n  that.close = () => {\r\n    that.state = 'closed';\r\n    that.peerConnection.close();\r\n  };\r\n\r\n  that.setSimulcast = (enable) => {\r\n    that.simulcast = enable;\r\n  };\r\n\r\n  that.setVideo = (video) => {\r\n    that.video = video;\r\n  };\r\n\r\n  that.setAudio = (audio) => {\r\n    that.audio = audio;\r\n  };\r\n\r\n  that.updateSpec = (configInput, streamId, callback = () => {}) => {\r\n    const config = configInput;\r\n    const shouldApplyMaxVideoBWToSdp = specBase.p2p && config.maxVideoBW;\r\n    const shouldSendMaxVideoBWInOptions = !specBase.p2p && config.maxVideoBW;\r\n    if (shouldApplyMaxVideoBWToSdp || config.maxAudioBW) {\r\n      if (config.maxVideoBW) {\r\n        Logger.debug('Maxvideo Requested:', config.maxVideoBW,\r\n                                'limit:', specBase.limitMaxVideoBW);\r\n        if (config.maxVideoBW > specBase.limitMaxVideoBW) {\r\n          config.maxVideoBW = specBase.limitMaxVideoBW;\r\n        }\r\n        specBase.maxVideoBW = config.maxVideoBW;\r\n        Logger.debug('Result', specBase.maxVideoBW);\r\n      }\r\n      if (config.maxAudioBW) {\r\n        if (config.maxAudioBW > specBase.limitMaxAudioBW) {\r\n          config.maxAudioBW = specBase.limitMaxAudioBW;\r\n        }\r\n        specBase.maxAudioBW = config.maxAudioBW;\r\n      }\r\n\r\n      localSdp = SemanticSdp.SDPInfo.processString(localDesc.sdp);\r\n      SdpHelpers.setMaxBW(localSdp, specBase);\r\n      localDesc.sdp = localSdp.toString();\r\n      that.localSdp = localSdp;\r\n\r\n      if (config.Sdp || config.maxAudioBW) {\r\n        Logger.debug('Updating with SDP renegotiation', specBase.maxVideoBW, specBase.maxAudioBW);\r\n        that.peerConnection.setLocalDescription(localDesc)\r\n          .then(() => {\r\n            remoteSdp = SemanticSdp.SDPInfo.processString(remoteDesc.sdp);\r\n            SdpHelpers.setMaxBW(remoteSdp, specBase);\r\n            remoteDesc.sdp = remoteSdp.toString();\r\n            that.remoteSdp = remoteSdp;\r\n            return that.peerConnection.setRemoteDescription(new RTCSessionDescription(remoteDesc));\r\n          }).then(() => {\r\n            specBase.remoteDescriptionSet = true;\r\n            specBase.callback({ type: 'updatestream', sdp: localDesc.sdp }, streamId);\r\n          }).catch(errorCallback.bind(null, 'updateSpec', callback));\r\n      } else {\r\n        Logger.debug('Updating without SDP renegotiation, ' +\r\n                     'newVideoBW:', specBase.maxVideoBW,\r\n                     'newAudioBW:', specBase.maxAudioBW);\r\n        specBase.callback({ type: 'updatestream', sdp: localDesc.sdp }, streamId);\r\n      }\r\n    }\r\n    if (shouldSendMaxVideoBWInOptions ||\r\n        config.minVideoBW ||\r\n        (config.slideShowMode !== undefined) ||\r\n        (config.muteStream !== undefined) ||\r\n        (config.qualityLayer !== undefined) ||\r\n        (config.minLayer !== undefined) ||\r\n        (config.video !== undefined)) {\r\n      Logger.debug('MaxVideoBW Changed to ', config.maxVideoBW);\r\n      Logger.debug('MinVideo Changed to ', config.minVideoBW);\r\n      Logger.debug('SlideShowMode Changed to ', config.slideShowMode);\r\n      Logger.debug('muteStream changed to ', config.muteStream);\r\n      Logger.debug('Video Constraints', config.video);\r\n      specBase.callback({ type: 'updatestream', config }, streamId);\r\n    }\r\n  };\r\n\r\n  that.createOffer = (isSubscribe = false, forceOfferToReceive = false, streamId = '') => {\r\n    if (!isSubscribe && !forceOfferToReceive) {\r\n      that.mediaConstraints = {\r\n        offerToReceiveVideo: false,\r\n        offerToReceiveAudio: false,\r\n      };\r\n    }\r\n    if (isNegotiating) {\r\n      offerQueue.push(['local', isSubscribe, forceOfferToReceive, streamId]);\r\n      return;\r\n    }\r\n    isNegotiating = true;\r\n    Logger.debug('Creating offer', that.mediaConstraints, streamId);\r\n    that.peerConnection.createOffer(that.mediaConstraints)\r\n    .then(setLocalDescForOffer.bind(null, isSubscribe, streamId))\r\n    .catch(errorCallback.bind(null, 'Create Offer', undefined));\r\n  };\r\n\r\n  that.addStream = (stream) => {\r\n    that.peerConnection.addStream(stream);\r\n  };\r\n\r\n  that.removeStream = (stream) => {\r\n    that.peerConnection.removeStream(stream);\r\n  };\r\n\r\n  that.processSignalingMessage = (msgInput) => {\r\n    if (msgInput.type === 'offer') {\r\n      processOffer(msgInput);\r\n    } else if (msgInput.type === 'answer') {\r\n      processAnswer(msgInput);\r\n    } else if (msgInput.type === 'candidate') {\r\n      processNewCandidate(msgInput);\r\n    }\r\n  };\r\n\r\n  return that;\r\n};\r\n\r\nexport default BaseStack;\r\n","import BaseStack from './BaseStack';\r\nimport SdpHelpers from './../utils/SdpHelpers';\r\nimport Logger from '../utils/Logger';\r\n\r\nconst ChromeStableStack = (specInput) => {\r\n  Logger.info('Starting Chrome stable stack', specInput);\r\n  const spec = specInput;\r\n  const that = BaseStack(specInput);\r\n  const defaultSimulcastSpatialLayers = 2;\r\n\r\n  that.enableSimulcast = (sdpInput) => {\r\n    let result;\r\n    let sdp = sdpInput;\r\n    if (!that.simulcast) {\r\n      return sdp;\r\n    }\r\n\r\n    // TODO(javier): Improve the way we check for current video ssrcs\r\n    const matchGroup = sdp.match(/a=ssrc-group:FID ([0-9]*) ([0-9]*)\\r?\\n/);\r\n    if (!matchGroup || (matchGroup.length <= 0)) {\r\n      return sdp;\r\n    }\r\n    // TODO (pedro): Consider adding these to SdpHelpers\r\n    const numSpatialLayers = that.simulcast.numSpatialLayers || defaultSimulcastSpatialLayers;\r\n    const baseSsrc = parseInt(matchGroup[1], 10);\r\n    const baseSsrcRtx = parseInt(matchGroup[2], 10);\r\n    const cname = sdp.match(new RegExp(`a=ssrc:${matchGroup[1]} cname:(.*)\\r?\\n`))[1];\r\n    const msid = sdp.match(new RegExp(`a=ssrc:${matchGroup[1]} msid:(.*)\\r?\\n`))[1];\r\n    const mslabel = sdp.match(new RegExp(`a=ssrc:${matchGroup[1]} mslabel:(.*)\\r?\\n`))[1];\r\n    const label = sdp.match(new RegExp(`a=ssrc:${matchGroup[1]} label:(.*)\\r?\\n`))[1];\r\n\r\n    sdp.match(new RegExp(`a=ssrc:${matchGroup[1]}.*\\r?\\n`, 'g')).forEach((line) => {\r\n      sdp = sdp.replace(line, '');\r\n    });\r\n    sdp.match(new RegExp(`a=ssrc:${matchGroup[2]}.*\\r?\\n`, 'g')).forEach((line) => {\r\n      sdp = sdp.replace(line, '');\r\n    });\r\n\r\n    const spatialLayers = [baseSsrc];\r\n    const spatialLayersRtx = [baseSsrcRtx];\r\n\r\n    for (let i = 1; i < numSpatialLayers; i += 1) {\r\n      spatialLayers.push(baseSsrc + (i * 1000));\r\n      spatialLayersRtx.push(baseSsrcRtx + (i * 1000));\r\n    }\r\n\r\n    result = SdpHelpers.addSim(spatialLayers);\r\n    let spatialLayerId;\r\n    let spatialLayerIdRtx;\r\n    for (let i = 0; i < spatialLayers.length; i += 1) {\r\n      spatialLayerId = spatialLayers[i];\r\n      spatialLayerIdRtx = spatialLayersRtx[i];\r\n      result += SdpHelpers.addGroup(spatialLayerId, spatialLayerIdRtx);\r\n    }\r\n\r\n    for (let i = 0; i < spatialLayers.length; i += 1) {\r\n      spatialLayerId = spatialLayers[i];\r\n      spatialLayerIdRtx = spatialLayersRtx[i];\r\n      result += SdpHelpers.addSpatialLayer(cname,\r\n        msid, mslabel, label, spatialLayerId, spatialLayerIdRtx);\r\n    }\r\n    result += 'a=x-google-flag:conference\\r\\n';\r\n    return sdp.replace(matchGroup[0], result);\r\n  };\r\n\r\n  that.setStartVideoBW = (sdpInfo) => {\r\n    if (that.video && spec.startVideoBW) {\r\n      Logger.debug(`startVideoBW requested: ${spec.startVideoBW}`);\r\n      SdpHelpers.setParamForCodecs(sdpInfo, 'video', 'x-google-start-bitrate', spec.startVideoBW);\r\n    }\r\n  };\r\n\r\n  that.setHardMinVideoBW = (sdpInfo) => {\r\n    if (that.video && spec.hardMinVideoBW) {\r\n      Logger.debug(`hardMinVideoBW requested: ${spec.hardMinVideoBW}`);\r\n      SdpHelpers.setParamForCodecs(sdpInfo, 'video', 'x-google-min-bitrate', spec.hardMinVideoBW);\r\n    }\r\n  };\r\n\r\n  return that;\r\n};\r\n\r\nexport default ChromeStableStack;\r\n","import Logger from '../utils/Logger';\r\nimport BaseStack from './BaseStack';\r\n\r\nconst FirefoxStack = (specInput) => {\r\n  Logger.info('Starting Firefox stack');\r\n  const that = BaseStack(specInput);\r\n  const defaultSimulcastSpatialLayers = 2;\r\n\r\n  const possibleLayers = [\r\n    { rid: 'low', scaleResolutionDownBy: 3 },\r\n    { rid: 'med', scaleResolutionDownBy: 2 },\r\n    { rid: 'high' },\r\n  ];\r\n\r\n  const getSimulcastParameters = (sender) => {\r\n    let numSpatialLayers = that.simulcast.numSpatialLayers || defaultSimulcastSpatialLayers;\r\n    const totalLayers = possibleLayers.length;\r\n    numSpatialLayers = numSpatialLayers < totalLayers ?\r\n                          numSpatialLayers : totalLayers;\r\n    const parameters = sender.getParameters() || {};\r\n    parameters.encodings = [];\r\n\r\n    for (let layer = totalLayers - 1; layer >= totalLayers - numSpatialLayers; layer -= 1) {\r\n      parameters.encodings.push(possibleLayers[layer]);\r\n    }\r\n    return sender.setParameters(parameters);\r\n  };\r\n\r\n  const enableSimulcast = () => {\r\n    if (!that.simulcast) {\r\n      return [];\r\n    }\r\n    const promises = [];\r\n    that.peerConnection.getSenders().forEach((sender) => {\r\n      if (sender.track.kind === 'video') {\r\n        promises.push(getSimulcastParameters(sender));\r\n      }\r\n    });\r\n    return promises;\r\n  };\r\n\r\n  that.enableSimulcast = sdp => sdp;\r\n\r\n  const baseCreateOffer = that.createOffer;\r\n\r\n  that.createOffer = (isSubscribe, forceOfferToReceive = false, streamId = '') => {\r\n    let promises = [];\r\n    if (isSubscribe !== true) {\r\n      promises = enableSimulcast();\r\n    }\r\n    Promise.all(promises).then(() => {\r\n      baseCreateOffer(isSubscribe, forceOfferToReceive, streamId);\r\n    });\r\n  };\r\n\r\n  return that;\r\n};\r\n\r\nexport default FirefoxStack;\r\n","import Logger from '../utils/Logger';\r\n\r\nconst FcStack = (spec) => {\r\n  /*\r\n  spec.callback({\r\n      type: sessionDescription.type,\r\n      sdp: sessionDescription.sdp\r\n  });\r\n  */\r\n  const that = {};\r\n\r\n  that.pcConfig = {};\r\n\r\n  that.peerConnection = {};\r\n  that.desc = {};\r\n  that.signalCallback = undefined;\r\n\r\n  that.close = () => {\r\n    Logger.info('Close FcStack');\r\n  };\r\n\r\n  that.createOffer = () => {\r\n    Logger.debug('FCSTACK: CreateOffer');\r\n  };\r\n\r\n  that.addStream = (stream) => {\r\n    Logger.debug('FCSTACK: addStream', stream);\r\n  };\r\n\r\n  that.processSignalingMessage = (msg) => {\r\n    Logger.debug('FCSTACK: processSignaling', msg);\r\n    if (that.signalCallback !== undefined) { that.signalCallback(msg); }\r\n  };\r\n\r\n  that.sendSignalingMessage = (msg) => {\r\n    Logger.debug('FCSTACK: Sending signaling Message', msg);\r\n    spec.callback(msg);\r\n  };\r\n\r\n  that.setSignalingCallback = (callback = () => {}) => {\r\n    Logger.debug('FCSTACK: Setting signalling callback');\r\n    that.signalCallback = callback;\r\n  };\r\n  return that;\r\n};\r\n\r\nexport default FcStack;\r\n","/* global */\r\nimport Logger from './utils/Logger';\r\n\r\n/*\r\n * Class EventDispatcher provides event handling to sub-classes.\r\n * It is inherited from Publisher, Room, etc.\r\n */\r\nconst EventDispatcher = () => {\r\n  const that = {};\r\n  // Private vars\r\n  const dispatcher = {\r\n    eventListeners: {},\r\n  };\r\n\r\n  // Public functions\r\n\r\n  // It adds an event listener attached to an event type.\r\n  that.addEventListener = (eventType, listener) => {\r\n    if (dispatcher.eventListeners[eventType] === undefined) {\r\n      dispatcher.eventListeners[eventType] = [];\r\n    }\r\n    dispatcher.eventListeners[eventType].push(listener);\r\n  };\r\n\r\n  // It removes an available event listener.\r\n  that.removeEventListener = (eventType, listener) => {\r\n    if (!dispatcher.eventListeners[eventType]) {\r\n      return;\r\n    }\r\n    const index = dispatcher.eventListeners[eventType].indexOf(listener);\r\n    if (index !== -1) {\r\n      dispatcher.eventListeners[eventType].splice(index, 1);\r\n    }\r\n  };\r\n\r\n  that.removeAllListeners = () => {\r\n    dispatcher.eventListeners = {};\r\n  };\r\n\r\n  // It dispatch a new event to the event listeners, based on the type\r\n  // of event. All events are intended to be LicodeEvents.\r\n  that.dispatchEvent = (event) => {\r\n    if (!event || !event.type) {\r\n      throw new Error('Undefined event');\r\n    }\r\n    Logger.debug(`Event: ${event.type}`);\r\n    const listeners = dispatcher.eventListeners[event.type] || [];\r\n    for (let i = 0; i < listeners.length; i += 1) {\r\n      listeners[i](event);\r\n    }\r\n  };\r\n\r\n  that.on = that.addEventListener;\r\n  that.off = that.removeEventListener;\r\n  that.emit = that.dispatchEvent;\r\n\r\n  return that;\r\n};\r\n\r\nclass EventEmitter {\r\n  constructor() {\r\n    this.emitter = EventDispatcher();\r\n  }\r\n  addEventListener(eventType, listener) {\r\n    this.emitter.addEventListener(eventType, listener);\r\n  }\r\n  removeEventListener(eventType, listener) {\r\n    this.emitter.removeEventListener(eventType, listener);\r\n  }\r\n  dispatchEvent(evt) {\r\n    this.emitter.dispatchEvent(evt);\r\n  }\r\n  on(eventType, listener) {\r\n    this.addEventListener(eventType, listener);\r\n  }\r\n  off(eventType, listener) {\r\n    this.removeEventListener(eventType, listener);\r\n  }\r\n  emit(evt) {\r\n    this.dispatchEvent(evt);\r\n  }\r\n}\r\n\r\n\r\n// **** EVENTS ****\r\n\r\n/*\r\n * Class LicodeEvent represents a generic Event in the library.\r\n * It handles the type of event, that is important when adding\r\n * event listeners to EventDispatchers and dispatching new events.\r\n * A LicodeEvent can be initialized this way:\r\n * var event = LicodeEvent({type: \"room-connected\"});\r\n */\r\nconst LicodeEvent = (spec) => {\r\n  const that = {};\r\n\r\n  // Event type. Examples are: 'room-connected', 'stream-added', etc.\r\n  that.type = spec.type;\r\n\r\n  return that;\r\n};\r\n\r\n/*\r\n * Class ConnectionEvent represents an Event that happens in a Room. It is a\r\n * LicodeEvent.\r\n * It is usually initialized as:\r\n * var roomEvent = RoomEvent({type:\"stream-added\", streams:[stream1, stream2]});\r\n * Event types:\r\n * 'stream-added' - a stream has been added to the connection.\r\n * 'stream-removed' - a stream has been removed from the connection.\r\n * 'ice-state-change' - ICE state changed\r\n */\r\nconst ConnectionEvent = (spec) => {\r\n  const that = LicodeEvent(spec);\r\n\r\n  that.stream = spec.stream;\r\n  that.state = spec.state;\r\n\r\n  return that;\r\n};\r\n\r\n/*\r\n * Class RoomEvent represents an Event that happens in a Room. It is a\r\n * LicodeEvent.\r\n * It is usually initialized as:\r\n * var roomEvent = RoomEvent({type:\"room-connected\", streams:[stream1, stream2]});\r\n * Event types:\r\n * 'room-connected' - points out that the user has been successfully connected to the room.\r\n * 'room-disconnected' - shows that the user has been already disconnected.\r\n */\r\nconst RoomEvent = (spec) => {\r\n  const that = LicodeEvent(spec);\r\n\r\n  // A list with the streams that are published in the room.\r\n  that.streams = spec.streams;\r\n  that.message = spec.message;\r\n\r\n  return that;\r\n};\r\n\r\n/*\r\n * Class StreamEvent represents an event related to a stream. It is a LicodeEvent.\r\n * It is usually initialized this way:\r\n * var streamEvent = StreamEvent({type:\"stream-added\", stream:stream1});\r\n * Event types:\r\n * 'stream-added' - indicates that there is a new stream available in the room.\r\n * 'stream-removed' - shows that a previous available stream has been removed from the room.\r\n */\r\nconst StreamEvent = (spec) => {\r\n  const that = LicodeEvent(spec);\r\n\r\n  // The stream related to this event.\r\n  that.stream = spec.stream;\r\n\r\n  that.msg = spec.msg;\r\n  that.bandwidth = spec.bandwidth;\r\n  that.attrs = spec.attrs;\r\n\r\n  return that;\r\n};\r\n\r\n/*\r\n * Class PublisherEvent represents an event related to a publisher. It is a LicodeEvent.\r\n * It usually initializes as:\r\n * var publisherEvent = PublisherEvent({})\r\n * Event types:\r\n * 'access-accepted' - indicates that the user has accepted to share his camera and microphone\r\n */\r\nconst PublisherEvent = (spec) => {\r\n  const that = LicodeEvent(spec);\r\n\r\n  return that;\r\n};\r\n\r\nexport { EventDispatcher, EventEmitter, LicodeEvent, RoomEvent, StreamEvent, PublisherEvent,\r\n  ConnectionEvent };\r\n","/* global unescape */\r\n\r\nconst ErizoMap = () => {\r\n  const that = {};\r\n  let values = {};\r\n\r\n  that.add = (id, value) => {\r\n    values[id] = value;\r\n  };\r\n\r\n  that.get = id => values[id];\r\n\r\n  that.has = id => values[id] !== undefined;\r\n\r\n  that.size = () => Object.keys(values).length;\r\n\r\n  that.forEach = (func) => {\r\n    const keys = Object.keys(values);\r\n    for (let index = 0; index < keys.length; index += 1) {\r\n      const key = keys[index];\r\n      const value = values[key];\r\n      func(value, key);\r\n    }\r\n  };\r\n\r\n  that.keys = () => Object.keys(values);\r\n\r\n  that.remove = (id) => {\r\n    delete values[id];\r\n  };\r\n\r\n  that.clear = () => {\r\n    values = {};\r\n  };\r\n\r\n  return that;\r\n};\r\n\r\nexport default ErizoMap;\r\n","/* global */\r\nimport ChromeStableStack from './webrtc-stacks/ChromeStableStack';\r\nimport FirefoxStack from './webrtc-stacks/FirefoxStack';\r\nimport FcStack from './webrtc-stacks/FcStack';\r\nimport Logger from './utils/Logger';\r\nimport { EventEmitter, ConnectionEvent } from './Events';\r\nimport ErizoMap from './utils/ErizoMap';\r\nimport ConnectionHelpers from './utils/ConnectionHelpers';\r\n\r\nconst EventEmitterConst = EventEmitter; // makes google-closure-compiler happy\r\nlet ErizoSessionId = 103;\r\n\r\nclass ErizoConnection extends EventEmitterConst {\r\n  constructor(specInput, erizoId = undefined) {\r\n    super();\r\n    Logger.debug('Building a new Connection');\r\n    this.stack = {};\r\n\r\n    this.erizoId = erizoId;\r\n    this.streamsMap = ErizoMap(); // key:streamId, value: stream\r\n\r\n    const spec = specInput;\r\n    ErizoSessionId += 1;\r\n    spec.sessionId = ErizoSessionId;\r\n    this.sessionId = ErizoSessionId;\r\n\r\n    // Check which WebRTC Stack is installed.\r\n    this.browser = ConnectionHelpers.getBrowser();\r\n    if (this.browser === 'fake') {\r\n      Logger.warning('Publish/subscribe video/audio streams not supported in erizofc yet');\r\n      this.stack = FcStack(spec);\r\n    } else if (this.browser === 'mozilla') {\r\n      Logger.debug('Firefox Stack');\r\n      this.stack = FirefoxStack(spec);\r\n    } else if (this.browser === 'safari') {\r\n      Logger.debug('Safari using Chrome Stable Stack');\r\n      this.stack = ChromeStableStack(spec);\r\n    } else if (this.browser === 'chrome-stable' || this.browser === 'electron') {\r\n      Logger.debug('Chrome Stable Stack');\r\n      this.stack = ChromeStableStack(spec);\r\n    } else {\r\n      Logger.error('No stack available for this browser');\r\n      throw new Error('WebRTC stack not available');\r\n    }\r\n    if (!this.stack.updateSpec) {\r\n      this.stack.updateSpec = (newSpec, callback = () => {}) => {\r\n        Logger.error('Update Configuration not implemented in this browser');\r\n        callback('unimplemented');\r\n      };\r\n    }\r\n    if (!this.stack.setSignallingCallback) {\r\n      this.stack.setSignallingCallback = () => {\r\n        Logger.error('setSignallingCallback is not implemented in this stack');\r\n      };\r\n    }\r\n\r\n    // PeerConnection Events\r\n    if (this.stack.peerConnection) {\r\n      this.peerConnection = this.stack.peerConnection; // For backwards compatibility\r\n      this.stack.peerConnection.onaddstream = (evt) => {\r\n        this.emit(ConnectionEvent({ type: 'add-stream', stream: evt.stream }));\r\n      };\r\n\r\n      this.stack.peerConnection.onremovestream = (evt) => {\r\n        this.emit(ConnectionEvent({ type: 'remove-stream', stream: evt.stream }));\r\n      };\r\n\r\n      this.stack.peerConnection.oniceconnectionstatechange = () => {\r\n        const state = this.stack.peerConnection.iceConnectionState;\r\n        this.emit(ConnectionEvent({ type: 'ice-state-change', state }));\r\n      };\r\n    }\r\n  }\r\n\r\n  close() {\r\n    Logger.debug('Closing ErizoConnection');\r\n    this.streamsMap.clear();\r\n    this.stack.close();\r\n  }\r\n\r\n  createOffer(isSubscribe, forceOfferToReceive, streamId) {\r\n    this.stack.createOffer(isSubscribe, forceOfferToReceive, streamId);\r\n  }\r\n\r\n  addStream(stream) {\r\n    Logger.debug(`message: Adding stream to Connection, streamId: ${stream.getID()}`);\r\n    this.streamsMap.add(stream.getID(), stream);\r\n    if (stream.local) {\r\n      this.stack.addStream(stream.stream);\r\n    }\r\n  }\r\n\r\n  removeStream(stream) {\r\n    const streamId = stream.getID();\r\n    if (!this.streamsMap.has(streamId)) {\r\n      Logger.warning(`message: Cannot remove stream not in map, streamId: ${streamId}`);\r\n      return;\r\n    }\r\n    if (stream.local) {\r\n      this.stack.removeStream(stream.stream);\r\n    }\r\n    this.streamsMap.remove(streamId);\r\n  }\r\n\r\n  processSignalingMessage(msg) {\r\n    this.stack.processSignalingMessage(msg);\r\n  }\r\n\r\n  sendSignalingMessage(msg) {\r\n    this.stack.sendSignalingMessage(msg);\r\n  }\r\n\r\n  setSimulcast(enable) {\r\n    this.stack.setSimulcast(enable);\r\n  }\r\n\r\n  setVideo(video) {\r\n    this.stack.setVideo(video);\r\n  }\r\n\r\n  setAudio(audio) {\r\n    this.stack.setAudio(audio);\r\n  }\r\n\r\n  updateSpec(configInput, streamId, callback) {\r\n    this.stack.updateSpec(configInput, streamId, callback);\r\n  }\r\n}\r\n\r\nclass ErizoConnectionManager {\r\n  constructor() {\r\n    this.ErizoConnectionsMap = new Map(); // key: erizoId, value: {connectionId: connection}\r\n  }\r\n\r\n  getOrBuildErizoConnection(specInput, erizoId = undefined, singlePC = false) {\r\n    Logger.debug(`message: getOrBuildErizoConnection, erizoId: ${erizoId}`);\r\n    let connection = {};\r\n\r\n    if (erizoId === undefined) {\r\n      // we have no erizoJS id - p2p\r\n      return new ErizoConnection(specInput);\r\n    }\r\n    if (singlePC) {\r\n      let connectionEntry;\r\n      if (this.ErizoConnectionsMap.has(erizoId)) {\r\n        connectionEntry = this.ErizoConnectionsMap.get(erizoId);\r\n      } else {\r\n        connectionEntry = {};\r\n        this.ErizoConnectionsMap.set(erizoId, connectionEntry);\r\n      }\r\n      if (!connectionEntry['single-pc']) {\r\n        connectionEntry['single-pc'] = new ErizoConnection(specInput, erizoId);\r\n      }\r\n      connection = connectionEntry['single-pc'];\r\n    } else {\r\n      connection = new ErizoConnection(specInput, erizoId);\r\n      if (this.ErizoConnectionsMap.has(erizoId)) {\r\n        this.ErizoConnectionsMap.get(erizoId)[connection.sessionId] = connection;\r\n      } else {\r\n        const connectionEntry = {};\r\n        connectionEntry[connection.sessionId] = connection;\r\n        this.ErizoConnectionsMap.set(erizoId, connectionEntry);\r\n      }\r\n    }\r\n    if (specInput.simulcast) {\r\n      connection.setSimulcast(specInput.simulcast);\r\n    }\r\n    if (specInput.video) {\r\n      connection.setVideo(specInput.video);\r\n    }\r\n    if (specInput.audio) {\r\n      connection.setVideo(specInput.audio);\r\n    }\r\n\r\n    return connection;\r\n  }\r\n\r\n  maybeCloseConnection(connection) {\r\n    Logger.debug(`Trying to remove connection ${connection.sessionId}\r\n       with erizoId ${connection.erizoId}`);\r\n    if (connection.streamsMap.size() === 0) {\r\n      connection.close();\r\n      if (this.ErizoConnectionsMap.get(connection.erizoId) !== undefined) {\r\n        delete this.ErizoConnectionsMap.get(connection.erizoId)[connection.sessionId];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErizoConnectionManager;\r\n","/* global */\r\n\r\nimport io from '../lib/socket.io';\r\nimport Logger from './utils/Logger';\r\n\r\nimport { EventDispatcher, LicodeEvent } from './Events';\r\n\r\nconst SocketEvent = (type, specInput) => {\r\n  const that = LicodeEvent({ type });\r\n  that.args = specInput.args;\r\n  return that;\r\n};\r\n\r\n/*\r\n * Class Stream represents a local or a remote Stream in the Room. It will handle the WebRTC\r\n * stream and identify the stream and where it should be drawn.\r\n */\r\nconst Socket = (newIo) => {\r\n  const that = EventDispatcher();\r\n  const defaultCallback = () => {};\r\n  const messageBuffer = [];\r\n\r\n  that.CONNECTED = Symbol('connected');\r\n  that.RECONNECTING = Symbol('reconnecting');\r\n  that.DISCONNECTED = Symbol('disconnected');\r\n\r\n  const WEBSOCKET_NORMAL_CLOSURE = 1000;\r\n  that.state = that.DISCONNECTED;\r\n  that.IO = newIo === undefined ? io : newIo;\r\n\r\n  let socket;\r\n\r\n  const emit = (type, ...args) => {\r\n    that.emit(SocketEvent(type, { args }));\r\n  };\r\n\r\n  const addToBuffer = (type, message, callback, error) => {\r\n    messageBuffer.push([type, message, callback, error]);\r\n  };\r\n\r\n  const flushBuffer = () => {\r\n    if (that.state !== that.CONNECTED) {\r\n      return;\r\n    }\r\n    messageBuffer.forEach((message) => {\r\n      that.sendMessage(...message);\r\n    });\r\n  };\r\n\r\n  that.connect = (token, userOptions, callback = defaultCallback, error = defaultCallback) => {\r\n    const options = {\r\n      reconnection: true,\r\n      reconnectionAttempts: 3,\r\n      secure: token.secure,\r\n      forceNew: true,\r\n      transports: ['websocket'],\r\n      rejectUnauthorized: false,\r\n    };\r\n    const transport = token.secure ? 'wss://' : 'ws://';\r\n    const host = token.host;\r\n    socket = that.IO.connect(transport + host, options);\r\n\r\n    // Hack to know the exact reason of the WS closure (socket.io does not publish it)\r\n    let closeCode = WEBSOCKET_NORMAL_CLOSURE;\r\n    const socketOnCloseFunction = socket.io.engine.transport.ws.onclose;\r\n    socket.io.engine.transport.ws.onclose = (closeEvent) => {\r\n      Logger.warning('WebSocket closed, code:', closeEvent.code);\r\n      closeCode = closeEvent.code;\r\n      socketOnCloseFunction(closeEvent);\r\n    };\r\n    that.socket = socket;\r\n    socket.on('onAddStream', emit.bind(that, 'onAddStream'));\r\n\r\n    socket.on('signaling_message_erizo', emit.bind(that, 'signaling_message_erizo'));\r\n    socket.on('signaling_message_peer', emit.bind(that, 'signaling_message_peer'));\r\n    socket.on('publish_me', emit.bind(that, 'publish_me'));\r\n    socket.on('unpublish_me', emit.bind(that, 'unpublish_me'));\r\n    socket.on('onBandwidthAlert', emit.bind(that, 'onBandwidthAlert'));\r\n\r\n    // We receive an event of new data in one of the streams\r\n    socket.on('onDataStream', emit.bind(that, 'onDataStream'));\r\n\r\n    // We receive an event of new data in one of the streams\r\n    socket.on('onUpdateAttributeStream', emit.bind(that, 'onUpdateAttributeStream'));\r\n\r\n    // We receive an event of a stream removed from the room\r\n    socket.on('onRemoveStream', emit.bind(that, 'onRemoveStream'));\r\n\r\n    // The socket has disconnected\r\n    socket.on('disconnect', (reason) => {\r\n      Logger.debug('disconnect', that.id, reason);\r\n      if (closeCode !== WEBSOCKET_NORMAL_CLOSURE) {\r\n        that.state = that.RECONNECTING;\r\n        return;\r\n      }\r\n      emit('disconnect', reason);\r\n      socket.close();\r\n    });\r\n\r\n    socket.on('connection_failed', (evt) => {\r\n      Logger.error('connection failed, id:', that.id);\r\n      emit('connection_failed', evt);\r\n    });\r\n    socket.on('error', (err) => {\r\n      Logger.warning('socket error, id:', that.id, ', error:', err.message);\r\n      emit('error');\r\n    });\r\n    socket.on('connect_error', (err) => {\r\n      Logger.warning('connect error, id:', that.id, ', error:', err.message);\r\n    });\r\n\r\n    socket.on('connect_timeout', (err) => {\r\n      Logger.warning('connect timeout, id:', that.id, ', error:', err.message);\r\n    });\r\n\r\n    socket.on('reconnecting', (attemptNumber) => {\r\n      Logger.debug('reconnecting, id:', that.id, ', attempet:', attemptNumber);\r\n    });\r\n\r\n    socket.on('reconnect', (attemptNumber) => {\r\n      Logger.debug('reconnected, id:', that.id, ', attempet:', attemptNumber);\r\n      that.state = that.CONNECTED;\r\n      socket.emit('reconnected', that.id);\r\n      flushBuffer();\r\n    });\r\n\r\n    socket.on('reconnect_attempt', (attemptNumber) => {\r\n      Logger.debug('reconnect attempt, id:', that.id, ', attempet:', attemptNumber);\r\n    });\r\n\r\n    socket.on('reconnect_error', (err) => {\r\n      Logger.debug('error reconnecting, id:', that.id, ', error:', err.message);\r\n    });\r\n\r\n    socket.on('reconnect_failed', () => {\r\n      Logger.warning('reconnect failed, id:', that.id);\r\n      that.state = that.DISCONNECTED;\r\n      emit('disconnect', 'reconnect failed');\r\n    });\r\n\r\n    // First message with the token\r\n    const message = userOptions;\r\n    message.token = token;\r\n    that.sendMessage('token', message, (response) => {\r\n      that.state = that.CONNECTED;\r\n      that.id = response.clientId;\r\n      callback(response);\r\n    }, error);\r\n  };\r\n\r\n  that.disconnect = () => {\r\n    that.state = that.DISCONNECTED;\r\n    socket.disconnect();\r\n  };\r\n\r\n  // Function to send a message to the server using socket.io\r\n  that.sendMessage = (type, msg, callback = defaultCallback, error = defaultCallback) => {\r\n    if (that.state === that.DISCONNECTED && type !== 'token') {\r\n      Logger.error('Trying to send a message over a disconnected Socket');\r\n      return;\r\n    }\r\n    if (that.state === that.RECONNECTING) {\r\n      addToBuffer(type, msg, callback, error);\r\n      return;\r\n    }\r\n    socket.emit(type, msg, (respType, resp) => {\r\n      if (respType === 'success') {\r\n        callback(resp);\r\n      } else if (respType === 'error') {\r\n        error(resp);\r\n      } else {\r\n        callback(respType, resp);\r\n      }\r\n    });\r\n  };\r\n\r\n  // It sends a SDP message to the server using socket.io\r\n  that.sendSDP = (type, options, sdp, callback = defaultCallback) => {\r\n    if (that.state === that.DISCONNECTED) {\r\n      Logger.error('Trying to send a message over a disconnected Socket');\r\n      return;\r\n    }\r\n    socket.emit(type, options, sdp, (...args) => {\r\n      callback(...args);\r\n    });\r\n  };\r\n  return that;\r\n};\r\n\r\nexport { SocketEvent, Socket };\r\n","/*\r\n * View class represents a HTML component\r\n * Every view is an EventDispatcher.\r\n */\r\n\r\nimport { EventDispatcher } from '../Events';\r\n\r\nconst View = () => {\r\n  const that = EventDispatcher({});\r\n\r\n  // Variables\r\n\r\n  // URL where it will look for icons and assets\r\n  that.url = '';\r\n  return that;\r\n};\r\n\r\nexport default View;\r\n","/* global document */\r\n\r\nimport View from './View';\r\n\r\n/*\r\n * Speaker represents the volume icon that will be shown in the mediaPlayer, for example.\r\n * It manages the volume level of the media tag given in the constructor.\r\n * Every Speaker is a View.\r\n * Ex.: var speaker = Speaker({elementID: element, media: mediaTag, id: id});\r\n */\r\nconst Speaker = (spec) => {\r\n  const that = View({});\r\n  let lastVolume = 50;\r\n\r\n  const mute = () => {\r\n    that.media.muted = true;\r\n    that.icon.setAttribute('src', `${that.url}/assets/mute48.png`);\r\n    if (that.stream.local) {\r\n      that.stream.stream.getAudioTracks()[0].enabled = false;\r\n    } else {\r\n      lastVolume = that.picker.value;\r\n      that.picker.value = 0;\r\n      that.media.volume = 0;\r\n    }\r\n  };\r\n\r\n  const unmute = () => {\r\n    that.media.muted = false;\r\n    that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\r\n    if (that.stream.local) {\r\n      that.stream.stream.getAudioTracks()[0].enabled = true;\r\n    } else {\r\n      that.picker.value = lastVolume;\r\n      that.media.volume = that.picker.value / 100;\r\n    }\r\n  };\r\n\r\n  // Variables\r\n\r\n  // DOM element in which the Speaker will be appended\r\n  that.elementID = spec.elementID;\r\n\r\n  // media tag\r\n  that.media = spec.media;\r\n\r\n  // Speaker id\r\n  that.id = spec.id;\r\n\r\n  // MediaStream\r\n  that.stream = spec.stream;\r\n\r\n  // Container\r\n  that.div = document.createElement('div');\r\n  that.div.setAttribute('style', 'width: 40%; height: 100%; max-width: 32px; ' +\r\n                                   'position: absolute; right: 0;z-index:0;');\r\n\r\n  // Volume icon\r\n  that.icon = document.createElement('img');\r\n  that.icon.setAttribute('id', `volume_${that.id}`);\r\n  that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\r\n  that.icon.setAttribute('style', 'width: 80%; height: 100%; position: absolute;');\r\n  that.div.appendChild(that.icon);\r\n\r\n  that.icon.onclick = () => {\r\n    if (that.media.muted) {\r\n      unmute();\r\n    } else {\r\n      mute();\r\n    }\r\n  };\r\n\r\n  if (!that.stream.local) {\r\n    // Volume bar\r\n    that.picker = document.createElement('input');\r\n    that.picker.setAttribute('id', `picker_${that.id}`);\r\n    that.picker.type = 'range';\r\n    that.picker.min = 0;\r\n    that.picker.max = 100;\r\n    that.picker.step = 10;\r\n    that.picker.value = lastVolume;\r\n    //  FireFox supports range sliders as of version 23\r\n    that.picker.setAttribute('orient', 'vertical');\r\n    that.div.appendChild(that.picker);\r\n    that.media.volume = that.picker.value / 100;\r\n    that.media.muted = false;\r\n\r\n    that.picker.oninput = () => {\r\n      if (that.picker.value > 0) {\r\n        that.media.muted = false;\r\n        that.icon.setAttribute('src', `${that.url}/assets/sound48.png`);\r\n      } else {\r\n        that.media.muted = true;\r\n        that.icon.setAttribute('src', `${that.url}/assets/mute48.png`);\r\n      }\r\n      that.media.volume = that.picker.value / 100;\r\n    };\r\n\r\n    // Private functions\r\n    const show = (displaying) => {\r\n      that.picker.setAttribute('style', `background: transparent; width: 32px;\r\n                                         height: 100px; position: absolute; bottom: 90%;\r\n                                         z-index: 1; right: 0px; -webkit-appearance: slider-vertical;\r\n                                         bottom: ${that.div.offsetHeight}px; display: ${displaying}`);\r\n    };\r\n\r\n    // Public functions\r\n    that.div.onmouseover = () => {\r\n      show('block');\r\n    };\r\n\r\n    that.div.onmouseout = () => {\r\n      show('none');\r\n    };\r\n\r\n    show('none');\r\n  }\r\n\r\n  document.getElementById(that.elementID).appendChild(that.div);\r\n  return that;\r\n};\r\n\r\nexport default Speaker;\r\n","/* global document, clearTimeout, setTimeout */\r\n\r\nimport View from './View';\r\nimport Speaker from './Speaker';\r\n\r\n/*\r\n * Bar represents the bottom menu bar of every mediaPlayer.\r\n * It contains a Speaker and an icon.\r\n * Every Bar is a View.\r\n * Ex.: var bar = Bar({elementID: element, id: id});\r\n */\r\nconst Bar = (spec) => {\r\n  const that = View({});\r\n  let waiting;\r\n\r\n  // Variables\r\n\r\n  // DOM element in which the Bar will be appended\r\n  that.elementID = spec.elementID;\r\n\r\n  // Bar ID\r\n  that.id = spec.id;\r\n\r\n  // Container\r\n  that.div = document.createElement('div');\r\n  that.div.setAttribute('id', `bar_${that.id}`);\r\n  that.div.setAttribute('class', 'licode_bar');\r\n\r\n  // Bottom bar\r\n  that.bar = document.createElement('div');\r\n  that.bar.setAttribute('style', 'width: 100%; height: 15%; max-height: 30px; ' +\r\n                                 'position: absolute; bottom: 0; right: 0; ' +\r\n                                 'background-color: rgba(255,255,255,0.62)');\r\n  that.bar.setAttribute('id', `subbar_${that.id}`);\r\n  that.bar.setAttribute('class', 'licode_subbar');\r\n\r\n  // Lynckia icon\r\n  that.link = document.createElement('a');\r\n  that.link.setAttribute('href', 'http://www.lynckia.com/');\r\n  that.link.setAttribute('class', 'licode_link');\r\n  that.link.setAttribute('target', '_blank');\r\n\r\n  that.logo = document.createElement('img');\r\n  that.logo.setAttribute('style', 'width: 100%; height: 100%; max-width: 30px; ' +\r\n                                  'position: absolute; top: 0; left: 2px;');\r\n  that.logo.setAttribute('class', 'licode_logo');\r\n  that.logo.setAttribute('alt', 'Lynckia');\r\n  that.logo.setAttribute('src', `${that.url}/assets/star.svg`);\r\n\r\n  // Private functions\r\n  const show = (displaying) => {\r\n    let action = displaying;\r\n    if (displaying !== 'block') {\r\n      action = 'none';\r\n    } else {\r\n      clearTimeout(waiting);\r\n    }\r\n\r\n    that.div.setAttribute('style',\r\n      `width: 100%; height: 100%; position: relative; bottom: 0; right: 0; display: ${action}`);\r\n  };\r\n\r\n  // Public functions\r\n  that.display = () => {\r\n    show('block');\r\n  };\r\n\r\n  that.hide = () => {\r\n    waiting = setTimeout(show, 1000);\r\n  };\r\n\r\n  document.getElementById(that.elementID).appendChild(that.div);\r\n  that.div.appendChild(that.bar);\r\n  that.bar.appendChild(that.link);\r\n  that.link.appendChild(that.logo);\r\n\r\n  // Speaker component\r\n  if (!spec.stream.screen && (spec.options === undefined ||\r\n                              spec.options.speaker === undefined ||\r\n                              spec.options.speaker === true)) {\r\n    that.speaker = Speaker({ elementID: `subbar_${that.id}`,\r\n      id: that.id,\r\n      stream: spec.stream,\r\n      media: spec.media });\r\n  }\r\n\r\n  that.display();\r\n  that.hide();\r\n\r\n  return that;\r\n};\r\n\r\nexport default Bar;\r\n","/* global document, L */\r\n\r\nimport View from './View';\r\nimport Bar from './Bar';\r\n\r\n/*\r\n * VideoPlayer represents a Licode video component that shows either a local or a remote video.\r\n * Ex.: var player = VideoPlayer({id: id, stream: stream, elementID: elementID});\r\n * A VideoPlayer is also a View component.\r\n */\r\nconst VideoPlayer = (spec) => {\r\n  const that = View({});\r\n\r\n  // Variables\r\n\r\n  // VideoPlayer ID\r\n  that.id = spec.id;\r\n\r\n  // Stream that the VideoPlayer will play\r\n  that.stream = spec.stream.stream;\r\n\r\n  // DOM element in which the VideoPlayer will be appended\r\n  that.elementID = spec.elementID;\r\n\r\n  // Private functions\r\n  const onmouseover = () => {\r\n    that.bar.display();\r\n  };\r\n\r\n  const onmouseout = () => {\r\n    that.bar.hide();\r\n  };\r\n\r\n  const applyRatio = (ratio, width, height, reverse) => {\r\n    const condition = !reverse ? width * (1 / ratio) < height : width * (1 / ratio) > height;\r\n    if (condition) {\r\n      that.video.style.width = `${width}px`;\r\n      that.video.style.height = `${(1 / ratio) * width}px`;\r\n\r\n      that.video.style.top = `${-((((1 / ratio) * width) / 2) - (height / 2))}px`;\r\n      that.video.style.left = '0px';\r\n    } else {\r\n      that.video.style.height = `${height}px`;\r\n      that.video.style.width = `${ratio * height}px`;\r\n\r\n      that.video.style.left = `${-(((ratio * height) / 2) - (width / 2))}px`;\r\n      that.video.style.top = '0px';\r\n    }\r\n  };\r\n\r\n  // Public functions\r\n\r\n  // It will stop the VideoPlayer and remove it from the HTML\r\n  that.destroy = () => {\r\n    that.video.pause();\r\n    delete that.resizer;\r\n    that.parentNode.removeChild(that.div);\r\n  };\r\n\r\n  that.resize = () => {\r\n    const width = that.container.offsetWidth;\r\n    const height = that.container.offsetHeight;\r\n\r\n    if (spec.stream.screen || spec.options.crop === false) {\r\n      applyRatio(16 / 9, width, height, false);\r\n    } else if (width !== that.containerWidth || height !== that.containerHeight) {\r\n      applyRatio(4 / 3, width, height, true);\r\n    }\r\n\r\n    that.containerWidth = width;\r\n    that.containerHeight = height;\r\n  };\r\n\r\n  /* window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\r\n      document.getElementById(key).value = unescape(value);\r\n  }); */\r\n\r\n  // Container\r\n  that.div = document.createElement('div');\r\n  that.div.setAttribute('id', `player_${that.id}`);\r\n  that.div.setAttribute('class', 'licode_player');\r\n  that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; ' +\r\n                                   'background-color: black; overflow: hidden;');\r\n\r\n  // Loader icon\r\n  if (spec.options.loader !== false) {\r\n    that.loader = document.createElement('img');\r\n    that.loader.setAttribute('style', 'width: 16px; height: 16px; position: absolute; ' +\r\n                                        'top: 50%; left: 50%; margin-top: -8px; margin-left: -8px');\r\n    that.loader.setAttribute('id', `back_${that.id}`);\r\n    that.loader.setAttribute('class', 'licode_loader');\r\n    that.loader.setAttribute('src', `${that.url}/assets/loader.gif`);\r\n  }\r\n\r\n  // Video tag\r\n  that.video = document.createElement('video');\r\n  that.video.setAttribute('id', `stream${that.id}`);\r\n  that.video.setAttribute('class', 'licode_stream');\r\n  that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute');\r\n  that.video.setAttribute('autoplay', 'autoplay');\r\n  that.video.setAttribute('playsinline', 'playsinline');\r\n\r\n  if (spec.stream.local) { that.video.volume = 0; }\r\n\r\n  if (that.elementID !== undefined) {\r\n    // Check for a passed DOM node.\r\n    if (typeof that.elementID === 'object' &&\r\n          typeof that.elementID.appendChild === 'function') {\r\n      that.container = that.elementID;\r\n    } else {\r\n      that.container = document.getElementById(that.elementID);\r\n    }\r\n  } else {\r\n    that.container = document.body;\r\n  }\r\n  that.container.appendChild(that.div);\r\n\r\n  that.parentNode = that.div.parentNode;\r\n\r\n  if (that.loader) {\r\n    that.div.appendChild(that.loader);\r\n  }\r\n  that.div.appendChild(that.video);\r\n\r\n  that.containerWidth = 0;\r\n  that.containerHeight = 0;\r\n\r\n  if (spec.options.resizer !== false) {\r\n    that.resizer = L.ResizeSensor(that.container, that.resize);\r\n\r\n    that.resize();\r\n  }\r\n\r\n  // Bottom Bar\r\n  if (spec.options.bar !== false) {\r\n    that.bar = Bar({ elementID: `player_${that.id}`,\r\n      id: that.id,\r\n      stream: spec.stream,\r\n      media: that.video,\r\n      options: spec.options });\r\n\r\n    that.div.onmouseover = onmouseover;\r\n    that.div.onmouseout = onmouseout;\r\n  } else {\r\n    // Expose a consistent object to manipulate the media.\r\n    that.media = that.video;\r\n  }\r\n\r\n  that.video.srcObject = that.stream;\r\n\r\n  return that;\r\n};\r\n\r\nexport default VideoPlayer;\r\n","/* global document */\r\n\r\nimport View from './View';\r\nimport Bar from './Bar';\r\n\r\n/*\r\n * AudioPlayer represents a Licode Audio component that shows either a local or a remote Audio.\r\n * Ex.: var player = AudioPlayer({id: id, stream: stream, elementID: elementID});\r\n * A AudioPlayer is also a View component.\r\n */\r\n\r\nconst AudioPlayer = (spec) => {\r\n  const that = View({});\r\n  let onmouseover;\r\n  let onmouseout;\r\n\r\n  // Variables\r\n\r\n  // AudioPlayer ID\r\n  that.id = spec.id;\r\n\r\n  // Stream that the AudioPlayer will play\r\n  that.stream = spec.stream.stream;\r\n\r\n  // DOM element in which the AudioPlayer will be appended\r\n  that.elementID = spec.elementID;\r\n\r\n\r\n    // Audio tag\r\n  that.audio = document.createElement('audio');\r\n  that.audio.setAttribute('id', `stream${that.id}`);\r\n  that.audio.setAttribute('class', 'licode_stream');\r\n  that.audio.setAttribute('style', 'width: 100%; height: 100%; position: absolute');\r\n  that.audio.setAttribute('autoplay', 'autoplay');\r\n\r\n  if (spec.stream.local) { that.audio.volume = 0; }\r\n\r\n  if (that.elementID !== undefined) {\r\n    // It will stop the AudioPlayer and remove it from the HTML\r\n    that.destroy = () => {\r\n      that.audio.pause();\r\n      that.parentNode.removeChild(that.div);\r\n    };\r\n\r\n    onmouseover = () => {\r\n      that.bar.display();\r\n    };\r\n\r\n    onmouseout = () => {\r\n      that.bar.hide();\r\n    };\r\n\r\n    // Container\r\n    that.div = document.createElement('div');\r\n    that.div.setAttribute('id', `player_${that.id}`);\r\n    that.div.setAttribute('class', 'licode_player');\r\n    that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; ' +\r\n                              'overflow: hidden;');\r\n\r\n    // Check for a passed DOM node.\r\n    if (typeof that.elementID === 'object' &&\r\n          typeof that.elementID.appendChild === 'function') {\r\n      that.container = that.elementID;\r\n    } else {\r\n      that.container = document.getElementById(that.elementID);\r\n    }\r\n    that.container.appendChild(that.div);\r\n\r\n    that.parentNode = that.div.parentNode;\r\n\r\n    that.div.appendChild(that.audio);\r\n\r\n    // Bottom Bar\r\n    if (spec.options.bar !== false) {\r\n      that.bar = Bar({ elementID: `player_${that.id}`,\r\n        id: that.id,\r\n        stream: spec.stream,\r\n        media: that.audio,\r\n        options: spec.options });\r\n\r\n      that.div.onmouseover = onmouseover;\r\n      that.div.onmouseout = onmouseout;\r\n    } else {\r\n      // Expose a consistent object to manipulate the media.\r\n      that.media = that.audio;\r\n    }\r\n  } else {\r\n    // It will stop the AudioPlayer and remove it from the HTML\r\n    that.destroy = () => {\r\n      that.audio.pause();\r\n      that.parentNode.removeChild(that.audio);\r\n    };\r\n\r\n    document.body.appendChild(that.audio);\r\n    that.parentNode = document.body;\r\n  }\r\n\r\n  that.audio.srcObject = that.stream;\r\n\r\n  return that;\r\n};\r\n\r\nexport default AudioPlayer;\r\n","/* global document */\r\n\r\nimport { EventDispatcher, StreamEvent } from './Events';\r\nimport ConnectionHelpers from './utils/ConnectionHelpers';\r\nimport ErizoMap from './utils/ErizoMap';\r\nimport VideoPlayer from './views/VideoPlayer';\r\nimport AudioPlayer from './views/AudioPlayer';\r\nimport Logger from './utils/Logger';\r\n\r\n/*\r\n * Class Stream represents a local or a remote Stream in the Room. It will handle the WebRTC\r\n * stream and identify the stream and where it should be drawn.\r\n */\r\nconst Stream = (altConnectionHelpers, specInput) => {\r\n  const spec = specInput;\r\n  const that = EventDispatcher(spec);\r\n\r\n  that.stream = spec.stream;\r\n  that.url = spec.url;\r\n  that.recording = spec.recording;\r\n  that.room = undefined;\r\n  that.showing = false;\r\n  that.local = false;\r\n  that.video = spec.video;\r\n  that.audio = spec.audio;\r\n  that.screen = spec.screen;\r\n  that.videoSize = spec.videoSize;\r\n  that.videoFrameRate = spec.videoFrameRate;\r\n  that.extensionId = spec.extensionId;\r\n  that.desktopStreamId = spec.desktopStreamId;\r\n  that.audioMuted = false;\r\n  that.videoMuted = false;\r\n  that.p2p = false;\r\n  that.ConnectionHelpers =\r\n    altConnectionHelpers === undefined ? ConnectionHelpers : altConnectionHelpers;\r\n\r\n  const onStreamAddedToPC = (evt) => {\r\n    if (evt.stream.id === that.getLabel()) {\r\n      that.emit(StreamEvent({ type: 'added', stream: evt.stream }));\r\n    }\r\n  };\r\n\r\n  const onStreamRemovedFroPC = (evt) => {\r\n    if (evt.stream.id === that.getLabel()) {\r\n      that.emit(StreamEvent({ type: 'removed', stream: that }));\r\n    }\r\n  };\r\n\r\n  const onICEConnectionStateChange = (msg) => {\r\n    that.emit(StreamEvent({ type: 'icestatechanged', msg }));\r\n  };\r\n\r\n  if (that.videoSize !== undefined &&\r\n        (!(that.videoSize instanceof Array) ||\r\n           that.videoSize.length !== 4)) {\r\n    throw Error('Invalid Video Size');\r\n  }\r\n  if (spec.local === undefined || spec.local === true) {\r\n    that.local = true;\r\n  }\r\n\r\n  // Public functions\r\n  that.getID = () => {\r\n    let id;\r\n    // Unpublished local streams don't yet have an ID.\r\n    if (that.local && !spec.streamID) {\r\n      id = 'local';\r\n    } else {\r\n      id = spec.streamID;\r\n    }\r\n    return id;\r\n  };\r\n\r\n  that.getLabel = () => {\r\n    if (that.stream && that.stream.id) {\r\n      return that.stream.id;\r\n    }\r\n    return spec.label;\r\n  };\r\n\r\n  // Get attributes of this stream.\r\n  that.getAttributes = () => spec.attributes;\r\n\r\n  // Changes the attributes of this stream in the room.\r\n  that.setAttributes = (attrs) => {\r\n    if (that.local) {\r\n      that.emit(StreamEvent({ type: 'internal-set-attributes', stream: that, attrs }));\r\n      return;\r\n    }\r\n    Logger.error('Failed to set attributes data. This Stream object has not been published.');\r\n  };\r\n\r\n  that.updateLocalAttributes = (attrs) => {\r\n    spec.attributes = attrs;\r\n  };\r\n\r\n  // Indicates if the stream has audio activated\r\n  that.hasAudio = () => spec.audio !== false && spec.audio !== undefined;\r\n\r\n  // Indicates if the stream has video activated\r\n  that.hasVideo = () => spec.video !== false && spec.video !== undefined;\r\n\r\n  // Indicates if the stream has data activated\r\n  that.hasData = () => spec.data !== false && spec.data !== undefined;\r\n\r\n  // Indicates if the stream has screen activated\r\n  that.hasScreen = () => spec.screen;\r\n\r\n  that.hasMedia = () => spec.audio || spec.video || spec.screen;\r\n\r\n  that.isExternal = () => that.url !== undefined || that.recording !== undefined;\r\n\r\n  that.addPC = (pc, p2pKey = undefined) => {\r\n    if (p2pKey) {\r\n      that.p2p = true;\r\n      if (that.pc === undefined) {\r\n        that.pc = ErizoMap();\r\n      }\r\n      that.pc.add(p2pKey, pc);\r\n      pc.on('ice-state-change', onICEConnectionStateChange);\r\n      return;\r\n    }\r\n    if (that.pc) {\r\n      that.pc.off('add-stream', onStreamAddedToPC);\r\n      that.pc.off('remove-stream', onStreamRemovedFroPC);\r\n      that.pc.off('ice-state-change', onICEConnectionStateChange);\r\n    }\r\n    that.pc = pc;\r\n    that.pc.on('add-stream', onStreamAddedToPC);\r\n    that.pc.on('remove-stream', onStreamRemovedFroPC);\r\n    that.pc.on('ice-state-change', onICEConnectionStateChange);\r\n  };\r\n\r\n  // Sends data through this stream.\r\n  that.sendData = (msg) => {\r\n    if (that.local && that.hasData()) {\r\n      that.emit(StreamEvent({ type: 'internal-send-data', stream: that, msg }));\r\n      return;\r\n    }\r\n    Logger.error('Failed to send data. This Stream object has not been published.');\r\n  };\r\n\r\n  // Initializes the stream and tries to retrieve a stream from local video and audio\r\n  // We need to call this method before we can publish it in the room.\r\n  that.init = () => {\r\n    try {\r\n      if ((spec.audio || spec.video || spec.screen) && spec.url === undefined) {\r\n        Logger.info('Requested access to local media');\r\n        let videoOpt = spec.video;\r\n        if (videoOpt === true || spec.screen === true) {\r\n          videoOpt = videoOpt === true ? {} : videoOpt;\r\n          if (that.videoSize !== undefined) {\r\n            videoOpt.width = {\r\n              min: that.videoSize[0],\r\n              max: that.videoSize[2],\r\n            };\r\n\r\n            videoOpt.height = {\r\n              min: that.videoSize[1],\r\n              max: that.videoSize[3],\r\n            };\r\n          }\r\n\r\n          if (that.videoFrameRate !== undefined) {\r\n            videoOpt.frameRate = {\r\n              min: that.videoFrameRate[0],\r\n              max: that.videoFrameRate[1],\r\n            };\r\n          }\r\n        } else if (spec.screen === true && videoOpt === undefined) {\r\n          videoOpt = true;\r\n        }\r\n        const opt = { video: videoOpt,\r\n          audio: spec.audio,\r\n          fake: spec.fake,\r\n          screen: spec.screen,\r\n          extensionId: that.extensionId,\r\n          desktopStreamId: that.desktopStreamId };\r\n\r\n        that.ConnectionHelpers.GetUserMedia(opt, (stream) => {\r\n          Logger.info('User has granted access to local media.');\r\n          that.stream = stream;\r\n\r\n          that.dispatchEvent(StreamEvent({ type: 'access-accepted' }));\r\n\r\n          that.stream.getTracks().forEach((trackInput) => {\r\n            Logger.info('getTracks', trackInput);\r\n            const track = trackInput;\r\n            track.onended = () => {\r\n              that.stream.getTracks().forEach((secondTrackInput) => {\r\n                const secondTrack = secondTrackInput;\r\n                secondTrack.onended = null;\r\n              });\r\n              const streamEvent = StreamEvent({ type: 'stream-ended',\r\n                stream: that,\r\n                msg: track.kind });\r\n              that.dispatchEvent(streamEvent);\r\n            };\r\n          });\r\n        }, (error) => {\r\n          Logger.error(`Failed to get access to local media. Error code was ${\r\n                           error.code}.`);\r\n          const streamEvent = StreamEvent({ type: 'access-denied', msg: error });\r\n          that.dispatchEvent(streamEvent);\r\n        });\r\n      } else {\r\n        const streamEvent = StreamEvent({ type: 'access-accepted' });\r\n        that.dispatchEvent(streamEvent);\r\n      }\r\n    } catch (e) {\r\n      Logger.error(`Failed to get access to local media. Error was ${e}.`);\r\n      const streamEvent = StreamEvent({ type: 'access-denied', msg: e });\r\n      that.dispatchEvent(streamEvent);\r\n    }\r\n  };\r\n\r\n\r\n  that.close = () => {\r\n    if (that.local) {\r\n      if (that.room !== undefined) {\r\n        that.room.unpublish(that);\r\n      }\r\n      // Remove HTML element\r\n      that.hide();\r\n      if (that.stream !== undefined) {\r\n        that.stream.getTracks().forEach((trackInput) => {\r\n          const track = trackInput;\r\n          track.onended = null;\r\n          track.stop();\r\n        });\r\n      }\r\n      that.stream = undefined;\r\n    }\r\n    if (that.pc && !that.p2p) {\r\n      that.pc.off('add-stream', onStreamAddedToPC);\r\n      that.pc.off('remove-stream', onStreamRemovedFroPC);\r\n      that.pc.off('ice-state-change', onICEConnectionStateChange);\r\n    } else if (that.pc && that.p2p) {\r\n      that.pc.forEach((pc) => {\r\n        pc.off('add-stream', onStreamAddedToPC);\r\n        pc.off('remove-stream', onStreamRemovedFroPC);\r\n        pc.off('ice-state-change', onICEConnectionStateChange);\r\n      });\r\n    }\r\n  };\r\n\r\n  that.play = (elementID, optionsInput) => {\r\n    const options = optionsInput || {};\r\n    that.elementID = elementID;\r\n    let player;\r\n    if (that.hasVideo() || that.hasScreen()) {\r\n      // Draw on HTML\r\n      if (elementID !== undefined) {\r\n        player = VideoPlayer({ id: that.getID(),\r\n          stream: that,\r\n          elementID,\r\n          options });\r\n        that.player = player;\r\n        that.showing = true;\r\n      }\r\n    } else if (that.hasAudio()) {\r\n      player = AudioPlayer({ id: that.getID(),\r\n        stream: that,\r\n        elementID,\r\n        options });\r\n      that.player = player;\r\n      that.showing = true;\r\n    }\r\n  };\r\n\r\n  that.stop = () => {\r\n    if (that.showing) {\r\n      if (that.player !== undefined) {\r\n        that.player.destroy();\r\n        that.showing = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  that.show = that.play;\r\n  that.hide = that.stop;\r\n\r\n  const getFrame = () => {\r\n    if (that.player !== undefined && that.stream !== undefined) {\r\n      const video = that.player.video;\r\n      const style = document.defaultView.getComputedStyle(video);\r\n      const width = parseInt(style.getPropertyValue('width'), 10);\r\n      const height = parseInt(style.getPropertyValue('height'), 10);\r\n      const left = parseInt(style.getPropertyValue('left'), 10);\r\n      const top = parseInt(style.getPropertyValue('top'), 10);\r\n\r\n      let div;\r\n      if (typeof that.elementID === 'object' &&\r\n              typeof that.elementID.appendChild === 'function') {\r\n        div = that.elementID;\r\n      } else {\r\n        div = document.getElementById(that.elementID);\r\n      }\r\n\r\n      const divStyle = document.defaultView.getComputedStyle(div);\r\n      const divWidth = parseInt(divStyle.getPropertyValue('width'), 10);\r\n      const divHeight = parseInt(divStyle.getPropertyValue('height'), 10);\r\n      const canvas = document.createElement('canvas');\r\n\r\n      canvas.id = 'testing';\r\n      canvas.width = divWidth;\r\n      canvas.height = divHeight;\r\n      canvas.setAttribute('style', 'display: none');\r\n      // document.body.appendChild(canvas);\r\n      const context = canvas.getContext('2d');\r\n\r\n      context.drawImage(video, left, top, width, height);\r\n\r\n      return canvas;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  that.getVideoFrameURL = (format) => {\r\n    const canvas = getFrame();\r\n    if (canvas !== null) {\r\n      if (format) {\r\n        return canvas.toDataURL(format);\r\n      }\r\n      return canvas.toDataURL();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  that.getVideoFrame = () => {\r\n    const canvas = getFrame();\r\n    if (canvas !== null) {\r\n      return canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  that.checkOptions = (configInput, isUpdate) => {\r\n    const config = configInput;\r\n    // TODO: Check for any incompatible options\r\n    if (isUpdate === true) {  // We are updating the stream\r\n      if (config.audio || config.screen) {\r\n        Logger.warning('Cannot update type of subscription');\r\n        config.audio = undefined;\r\n        config.screen = undefined;\r\n      }\r\n    } else if (that.local === false) { // check what we can subscribe to\r\n      if (config.video === true && that.hasVideo() === false) {\r\n        Logger.warning('Trying to subscribe to video when there is no ' +\r\n                                   'video, won\\'t subscribe to video');\r\n        config.video = false;\r\n      }\r\n      if (config.audio === true && that.hasAudio() === false) {\r\n        Logger.warning('Trying to subscribe to audio when there is no ' +\r\n                                   'audio, won\\'t subscribe to audio');\r\n        config.audio = false;\r\n      }\r\n    }\r\n    if (that.local === false) {\r\n      if (!that.hasVideo() && (config.slideShowMode === true)) {\r\n        Logger.warning('Cannot enable slideShowMode if it is not a video ' +\r\n                                 'subscription, please check your parameters');\r\n        config.slideShowMode = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const muteStream = (callback = () => {}) => {\r\n    if (that.room && that.room.p2p) {\r\n      Logger.warning('muteAudio/muteVideo are not implemented in p2p streams');\r\n      callback('error');\r\n      return;\r\n    }\r\n    if (that.stream) {\r\n      for (let index = 0; index < that.stream.getVideoTracks().length; index += 1) {\r\n        const track = that.stream.getVideoTracks()[index];\r\n        track.enabled = !that.videoMuted;\r\n      }\r\n    }\r\n    const config = { muteStream: { audio: that.audioMuted, video: that.videoMuted } };\r\n    that.checkOptions(config, true);\r\n    if (that.pc) {\r\n      that.pc.updateSpec(config, that.getID(), callback);\r\n    }\r\n  };\r\n\r\n  that.muteAudio = (isMuted, callback = () => {}) => {\r\n    that.audioMuted = isMuted;\r\n    muteStream(callback);\r\n  };\r\n\r\n  that.muteVideo = (isMuted, callback = () => {}) => {\r\n    that.videoMuted = isMuted;\r\n    muteStream(callback);\r\n  };\r\n\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  that._setStaticQualityLayer = (spatialLayer, temporalLayer, callback = () => {}) => {\r\n    if (that.room && that.room.p2p) {\r\n      Logger.warning('setStaticQualityLayer is not implemented in p2p streams');\r\n      callback('error');\r\n      return;\r\n    }\r\n    const config = { qualityLayer: { spatialLayer, temporalLayer } };\r\n    that.checkOptions(config, true);\r\n    that.pc.updateSpec(config, that.getID(), callback);\r\n  };\r\n\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  that._setDynamicQualityLayer = (callback) => {\r\n    if (that.room && that.room.p2p) {\r\n      Logger.warning('setDynamicQualityLayer is not implemented in p2p streams');\r\n      callback('error');\r\n      return;\r\n    }\r\n    const config = { qualityLayer: { spatialLayer: -1, temporalLayer: -1 } };\r\n    that.checkOptions(config, true);\r\n    that.pc.updateSpec(config, that.getID(), callback);\r\n  };\r\n\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  that._setMinSpatialLayer = (spatialLayer, callback = () => {}) => {\r\n    if (that.room && that.room.p2p) {\r\n      Logger.warning('setMinSpatialLayer is not implemented in p2p streams');\r\n      callback('error');\r\n      return;\r\n    }\r\n    const config = { minLayer: { spatialLayer } };\r\n    that.checkOptions(config, true);\r\n    Logger.debug('Calling updateSpec with config', config);\r\n    that.pc.updateSpec(config, that.getID(), callback);\r\n  };\r\n\r\n  const controlHandler = (handlersInput, publisherSideInput, enable) => {\r\n    let publisherSide = publisherSideInput;\r\n    let handlers = handlersInput;\r\n    if (publisherSide !== true) {\r\n      publisherSide = false;\r\n    }\r\n\r\n    handlers = (typeof handlers === 'string') ? [handlers] : handlers;\r\n    handlers = (handlers instanceof Array) ? handlers : [];\r\n\r\n    if (handlers.length > 0) {\r\n      that.room.sendControlMessage(that, 'control', { name: 'controlhandlers',\r\n        enable,\r\n        publisherSide,\r\n        handlers });\r\n    }\r\n  };\r\n\r\n  that.disableHandlers = (handlers, publisherSide) => {\r\n    controlHandler(handlers, publisherSide, false);\r\n  };\r\n\r\n  that.enableHandlers = (handlers, publisherSide) => {\r\n    controlHandler(handlers, publisherSide, true);\r\n  };\r\n\r\n  that.updateConfiguration = (config, callback = () => {}) => {\r\n    if (config === undefined) { return; }\r\n    if (that.pc) {\r\n      that.checkOptions(config, true);\r\n      if (that.local) {\r\n        if (that.room.p2p) {\r\n          for (let index = 0; index < that.pc.length; index += 1) {\r\n            that.pc[index].updateSpec(config, that.getID(), callback);\r\n          }\r\n        } else {\r\n          that.pc.updateSpec(config, that.getID(), callback);\r\n        }\r\n      } else {\r\n        that.pc.updateSpec(config, that.getID(), callback);\r\n      }\r\n    } else {\r\n      callback('This stream has no peerConnection attached, ignoring');\r\n    }\r\n  };\r\n\r\n  return that;\r\n};\r\n\r\nexport default Stream;\r\n","/* global unescape */\r\n\r\nconst Base64 = (() => {\r\n  let base64Str;\r\n  let base64Count;\r\n\r\n  const END_OF_INPUT = -1;\r\n  const base64Chars = [\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\r\n    'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\r\n    'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\r\n    'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',\r\n    'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\r\n    'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\r\n    'w', 'x', 'y', 'z', '0', '1', '2', '3',\r\n    '4', '5', '6', '7', '8', '9', '+', '/',\r\n  ];\r\n\r\n  const reverseBase64Chars = [];\r\n\r\n  for (let i = 0; i < base64Chars.length; i += 1) {\r\n    reverseBase64Chars[base64Chars[i]] = i;\r\n  }\r\n\r\n  const setBase64Str = (str) => {\r\n    base64Str = str;\r\n    base64Count = 0;\r\n  };\r\n\r\n  const readBase64 = () => {\r\n    if (!base64Str) {\r\n      return END_OF_INPUT;\r\n    }\r\n    if (base64Count >= base64Str.length) {\r\n      return END_OF_INPUT;\r\n    }\r\n    const c = base64Str.charCodeAt(base64Count) & 0xff;  // eslint-disable-line no-bitwise\r\n    base64Count += 1;\r\n    return c;\r\n  };\r\n\r\n  const encodeBase64 = (str) => {\r\n    let result;\r\n    let lineCount;\r\n    let done;\r\n    setBase64Str(str);\r\n    result = '';\r\n    const inBuffer = new Array(3);\r\n    lineCount = 0;\r\n    done = false;\r\n    while (!done && (inBuffer[0] = readBase64()) !== END_OF_INPUT) {\r\n      inBuffer[1] = readBase64();\r\n      inBuffer[2] = readBase64();\r\n      // eslint-disable-next-line no-bitwise\r\n      result += (base64Chars[inBuffer[0] >> 2]);\r\n      if (inBuffer[1] !== END_OF_INPUT) {\r\n        // eslint-disable-next-line no-bitwise\r\n        result += (base64Chars[((inBuffer[0] << 4) & 0x30) | (inBuffer[1] >> 4)]);\r\n        if (inBuffer[2] !== END_OF_INPUT) {\r\n          // eslint-disable-next-line no-bitwise\r\n          result += (base64Chars[((inBuffer[1] << 2) & 0x3c) | (inBuffer[2] >> 6)]);\r\n          // eslint-disable-next-line no-bitwise\r\n          result += (base64Chars[inBuffer[2] & 0x3F]);\r\n        } else {\r\n          // eslint-disable-next-line no-bitwise\r\n          result += (base64Chars[((inBuffer[1] << 2) & 0x3c)]);\r\n          result = `${result}=`;\r\n          done = true;\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line no-bitwise\r\n        result += (base64Chars[((inBuffer[0] << 4) & 0x30)]);\r\n        result = `${result}=`;\r\n        result = `${result}=`;\r\n        done = true;\r\n      }\r\n      lineCount += 4;\r\n      if (lineCount >= 76) {\r\n        result = `${result}\\n`;\r\n        lineCount = 0;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const readReverseBase64 = () => {\r\n    if (!base64Str) {\r\n      return END_OF_INPUT;\r\n    }\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      if (base64Count >= base64Str.length) {\r\n        return END_OF_INPUT;\r\n      }\r\n      const nextCharacter = base64Str.charAt(base64Count);\r\n      base64Count += 1;\r\n      if (reverseBase64Chars[nextCharacter]) {\r\n        return reverseBase64Chars[nextCharacter];\r\n      }\r\n      if (nextCharacter === 'A') {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const ntos = (value) => {\r\n    let n = value.toString(16);\r\n    if (n.length === 1) {\r\n      n = `0${n}`;\r\n    }\r\n    n = `%${n}`;\r\n    return unescape(n);\r\n  };\r\n\r\n  const decodeBase64 = (str) => {\r\n    let result;\r\n    let done;\r\n    setBase64Str(str);\r\n    result = '';\r\n    const inBuffer = new Array(4);\r\n    done = false;\r\n    while (!done &&\r\n              (inBuffer[0] = readReverseBase64()) !== END_OF_INPUT &&\r\n              (inBuffer[1] = readReverseBase64()) !== END_OF_INPUT) {\r\n      inBuffer[2] = readReverseBase64();\r\n      inBuffer[3] = readReverseBase64();\r\n      // eslint-disable-next-line no-bitwise,no-mixed-operators\r\n      result += ntos((((inBuffer[0] << 2) & 0xff) | inBuffer[1] >> 4));\r\n      if (inBuffer[2] !== END_OF_INPUT) {\r\n        // eslint-disable-next-line no-bitwise,no-mixed-operators\r\n        result += ntos((((inBuffer[1] << 4) & 0xff) | inBuffer[2] >> 2));\r\n        if (inBuffer[3] !== END_OF_INPUT) {\r\n          // eslint-disable-next-line no-bitwise\r\n          result += ntos((((inBuffer[2] << 6) & 0xff) | inBuffer[3]));\r\n        } else {\r\n          done = true;\r\n        }\r\n      } else {\r\n        done = true;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return {\r\n    encodeBase64,\r\n    decodeBase64,\r\n  };\r\n})();\r\n\r\nexport default Base64;\r\n","import ErizoConnectionManager from './ErizoConnectionManager';\r\nimport ConnectionHelpers from './utils/ConnectionHelpers';\r\nimport { EventDispatcher, StreamEvent, RoomEvent } from './Events';\r\nimport { Socket } from './Socket';\r\nimport Stream from './Stream';\r\nimport ErizoMap from './utils/ErizoMap';\r\nimport Base64 from './utils/Base64';\r\nimport Logger from './utils/Logger';\r\n\r\n/*\r\n * Class Room represents a Licode Room. It will handle the connection, local stream publication and\r\n * remote stream subscription.\r\n * Typical Room initialization would be:\r\n * var room = Erizo.Room({token:'213h8012hwduahd-321ueiwqewq'});\r\n * It also handles RoomEvents and StreamEvents. For example:\r\n * Event 'room-connected' points out that the user has been successfully connected to the room.\r\n * Event 'room-disconnected' shows that the user has been already disconnected.\r\n * Event 'stream-added' indicates that there is a new stream available in the room.\r\n * Event 'stream-removed' shows that a previous available stream has been removed from the room.\r\n */\r\nconst Room = (altIo, altConnectionHelpers, altConnectionManager, specInput) => {\r\n  const spec = specInput;\r\n  const that = EventDispatcher(specInput);\r\n  const DISCONNECTED = 0;\r\n  const CONNECTING = 1;\r\n  const CONNECTED = 2;\r\n\r\n\r\n  that.remoteStreams = ErizoMap();\r\n  that.localStreams = ErizoMap();\r\n  that.roomID = '';\r\n  that.state = DISCONNECTED;\r\n  that.p2p = false;\r\n  that.ConnectionHelpers =\r\n    altConnectionHelpers === undefined ? ConnectionHelpers : altConnectionHelpers;\r\n\r\n  that.erizoConnectionManager =\r\n    altConnectionManager === undefined ? new ErizoConnectionManager()\r\n    : new altConnectionManager.ErizoConnectionManager();\r\n\r\n  let socket = Socket(altIo);\r\n  that.socket = socket;\r\n  let remoteStreams = that.remoteStreams;\r\n  let localStreams = that.localStreams;\r\n  // Private functions\r\n  const removeStream = (streamInput) => {\r\n    const stream = streamInput;\r\n    stream.removeAllListeners();\r\n\r\n    if (stream.pc && !that.p2p) {\r\n      stream.pc.removeStream(stream);\r\n    }\r\n\r\n    Logger.debug('Removed stream');\r\n    if (stream.stream) {\r\n      // Remove HTML element\r\n      stream.hide();\r\n\r\n      stream.stop();\r\n      stream.close();\r\n      delete stream.stream;\r\n    }\r\n\r\n    // Close PC stream\r\n    if (stream.pc) {\r\n      if (stream.local && that.p2p) {\r\n        stream.pc.forEach((connection, id) => {\r\n          connection.close();\r\n          stream.pc.remove(id);\r\n        });\r\n      } else {\r\n        that.erizoConnectionManager.maybeCloseConnection(stream.pc);\r\n        delete stream.pc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onStreamFailed = (streamInput, message) => {\r\n    const stream = streamInput;\r\n    if (that.state !== DISCONNECTED && stream && !stream.failed) {\r\n      stream.failed = true;\r\n      const streamFailedEvt = StreamEvent(\r\n        { type: 'stream-failed',\r\n          msg: message || 'Stream failed after connection',\r\n          stream });\r\n      that.dispatchEvent(streamFailedEvt);\r\n      if (stream.local) {\r\n        that.unpublish(stream);\r\n      } else {\r\n        that.unsubscribe(stream);\r\n      }\r\n    }\r\n  };\r\n\r\n  const dispatchStreamSubscribed = (streamInput, evt) => {\r\n    const stream = streamInput;\r\n    // Draw on html\r\n    Logger.info('Stream subscribed');\r\n    stream.stream = evt.stream;\r\n    if (!that.p2p) {\r\n      stream.pc.addStream(stream);\r\n    }\r\n    const evt2 = StreamEvent({ type: 'stream-subscribed', stream });\r\n    that.dispatchEvent(evt2);\r\n  };\r\n\r\n  const getP2PConnectionOptions = (stream, peerSocket) => {\r\n    const options = {\r\n      callback(msg) {\r\n        socket.sendSDP('signaling_message', {\r\n          streamId: stream.getID(),\r\n          peerSocket,\r\n          msg });\r\n      },\r\n      audio: stream.hasAudio(),\r\n      video: stream.hasVideo(),\r\n      iceServers: that.iceServers,\r\n      maxAudioBW: stream.maxAudioBW,\r\n      maxVideoBW: stream.maxVideoBW,\r\n      limitMaxAudioBW: spec.maxAudioBW,\r\n      limitMaxVideoBW: spec.maxVideoBW,\r\n      forceTurn: stream.forceTurn,\r\n      p2p: true,\r\n    };\r\n    return options;\r\n  };\r\n\r\n  const createRemoteStreamP2PConnection = (streamInput, peerSocket) => {\r\n    const stream = streamInput;\r\n    stream.addPC(that.erizoConnectionManager.getOrBuildErizoConnection(\r\n      getP2PConnectionOptions(stream, peerSocket)));\r\n    stream.on('added', dispatchStreamSubscribed.bind(null, stream));\r\n    stream.on('icestatechanged', (evt) => {\r\n      Logger.info(`${stream.getID()} - iceConnectionState: ${evt.msg.state}`);\r\n      if (evt.msg.state === 'failed') {\r\n        onStreamFailed(stream);\r\n      }\r\n    });\r\n  };\r\n\r\n  const createLocalStreamP2PConnection = (streamInput, peerSocket) => {\r\n    const stream = streamInput;\r\n    const connection = that.erizoConnectionManager.getOrBuildErizoConnection(\r\n      getP2PConnectionOptions(stream, peerSocket));\r\n\r\n    stream.addPC(connection, peerSocket);\r\n\r\n    stream.on('icestatechanged', (evt) => {\r\n      Logger.info(`${stream.getID()} - iceConnectionState: ${evt.msg.state}`);\r\n      if (evt.msg.state === 'failed') {\r\n        stream.pc.get(peerSocket).close();\r\n        stream.pc.remove(peerSocket);\r\n      }\r\n    });\r\n    connection.addStream(stream);\r\n    connection.createOffer();\r\n  };\r\n\r\n  const removeLocalStreamP2PConnection = (streamInput, peerSocket) => {\r\n    const stream = streamInput;\r\n    if (stream.pc === undefined || !stream.pc.has(peerSocket)) {\r\n      return;\r\n    }\r\n    const pc = stream.pc.get(peerSocket);\r\n    pc.close();\r\n    stream.pc.remove(peerSocket);\r\n  };\r\n\r\n  const getErizoConnectionOptions = (stream, options, isRemote) => {\r\n    const connectionOpts = {\r\n      callback(message, streamId = stream.getID()) {\r\n        Logger.info('Sending message', message, stream.getID(), streamId);\r\n        socket.sendSDP('signaling_message', {\r\n          streamId,\r\n          msg: message,\r\n          browser: stream.pc && stream.pc.browser }, undefined, () => {});\r\n      },\r\n      nop2p: true,\r\n      audio: options.audio && stream.hasAudio(),\r\n      video: options.video && stream.hasVideo(),\r\n      maxAudioBW: options.maxAudioBW,\r\n      maxVideoBW: options.maxVideoBW,\r\n      limitMaxAudioBW: spec.maxAudioBW,\r\n      limitMaxVideoBW: spec.maxVideoBW,\r\n      label: stream.getLabel(),\r\n      iceServers: that.iceServers,\r\n      forceTurn: stream.forceTurn,\r\n      p2p: false,\r\n    };\r\n    if (!isRemote) {\r\n      connectionOpts.simulcast = options.simulcast;\r\n      connectionOpts.startVideoBW = options.startVideoBW;\r\n      connectionOpts.hardMinVideoBW = options.hardMinVideoBW;\r\n    }\r\n    return connectionOpts;\r\n  };\r\n\r\n  const createRemoteStreamErizoConnection = (streamInput, erizoId, options) => {\r\n    const stream = streamInput;\r\n    stream.addPC(that.erizoConnectionManager.getOrBuildErizoConnection(\r\n      getErizoConnectionOptions(stream, options, true), erizoId, spec.singlePC));\r\n    stream.on('added', dispatchStreamSubscribed.bind(null, stream));\r\n    stream.on('icestatechanged', (evt) => {\r\n      Logger.info(`${stream.getID()} - iceConnectionState: ${evt.msg.state}`);\r\n      if (evt.msg.state === 'failed') {\r\n        onStreamFailed(stream);\r\n      }\r\n    });\r\n    stream.pc.createOffer(true, false, stream.getID());\r\n  };\r\n\r\n  const createLocalStreamErizoConnection = (streamInput, erizoId, options) => {\r\n    const stream = streamInput;\r\n    stream.addPC(that.erizoConnectionManager.getOrBuildErizoConnection(\r\n      getErizoConnectionOptions(stream, options), erizoId, spec.singlePC));\r\n\r\n    stream.on('icestatechanged', (evt) => {\r\n      Logger.info(`${stream.getID()} - iceConnectionState: ${evt.msg.state}`);\r\n      if (evt.msg.state === 'failed') {\r\n        onStreamFailed(stream);\r\n      }\r\n    });\r\n    stream.pc.addStream(stream);\r\n    if (!options.createOffer) { stream.pc.createOffer(false, spec.singlePC, stream.getID()); }\r\n  };\r\n\r\n  // We receive an event with a new stream in the room.\r\n  // type can be \"media\" or \"data\"\r\n\r\n  const socketOnAddStream = (arg) => {\r\n    if (remoteStreams.has(arg.id)) {\r\n      return;\r\n    }\r\n    const stream = Stream(that.Connection, { streamID: arg.id,\r\n      local: localStreams.has(arg.id),\r\n      audio: arg.audio,\r\n      video: arg.video,\r\n      data: arg.data,\r\n      label: arg.label,\r\n      screen: arg.screen,\r\n      attributes: arg.attributes });\r\n    stream.room = that;\r\n    remoteStreams.add(arg.id, stream);\r\n    const evt = StreamEvent({ type: 'stream-added', stream });\r\n    that.dispatchEvent(evt);\r\n  };\r\n\r\n  const socketOnErizoMessage = (arg) => {\r\n    let stream;\r\n    if (arg.peerId) {\r\n      stream = remoteStreams.get(arg.peerId);\r\n    } else {\r\n      stream = localStreams.get(arg.streamId);\r\n    }\r\n\r\n    if (stream && stream.pc && !stream.failed) {\r\n      stream.pc.processSignalingMessage(arg.mess);\r\n    }\r\n  };\r\n\r\n  const socketOnPeerMessage = (arg) => {\r\n    let stream = localStreams.get(arg.streamId);\r\n\r\n    if (stream && !stream.failed) {\r\n      stream.pc.get(arg.peerSocket).processSignalingMessage(arg.msg);\r\n    } else {\r\n      stream = remoteStreams.get(arg.streamId);\r\n\r\n      if (!stream.pc) {\r\n        createRemoteStreamP2PConnection(stream, arg.peerSocket);\r\n      }\r\n      stream.pc.processSignalingMessage(arg.msg);\r\n    }\r\n  };\r\n\r\n  const socketOnPublishMe = (arg) => {\r\n    const myStream = localStreams.get(arg.streamId);\r\n\r\n    createLocalStreamP2PConnection(myStream, arg.peerSocket);\r\n  };\r\n\r\n  const socketOnUnpublishMe = (arg) => {\r\n    const myStream = localStreams.get(arg.streamId);\r\n    if (myStream) {\r\n      removeLocalStreamP2PConnection(myStream, arg.peerSocket);\r\n    }\r\n  };\r\n\r\n  const socketOnBandwidthAlert = (arg) => {\r\n    Logger.info('Bandwidth Alert on', arg.streamID, 'message',\r\n                        arg.message, 'BW:', arg.bandwidth);\r\n    if (arg.streamID) {\r\n      const stream = remoteStreams.get(arg.streamID);\r\n      if (stream && !stream.failed) {\r\n        const evt = StreamEvent({ type: 'bandwidth-alert',\r\n          stream,\r\n          msg: arg.message,\r\n          bandwidth: arg.bandwidth });\r\n        stream.dispatchEvent(evt);\r\n      }\r\n    }\r\n  };\r\n\r\n  // We receive an event of new data in one of the streams\r\n  const socketOnDataStream = (arg) => {\r\n    const stream = remoteStreams.get(arg.id);\r\n    const evt = StreamEvent({ type: 'stream-data', msg: arg.msg, stream });\r\n    stream.dispatchEvent(evt);\r\n  };\r\n\r\n  // We receive an event of new data in one of the streams\r\n  const socketOnUpdateAttributeStream = (arg) => {\r\n    const stream = remoteStreams.get(arg.id);\r\n    const evt = StreamEvent({ type: 'stream-attributes-update',\r\n      attrs: arg.attrs,\r\n      stream });\r\n    stream.updateLocalAttributes(arg.attrs);\r\n    stream.dispatchEvent(evt);\r\n  };\r\n\r\n  // We receive an event of a stream removed from the room\r\n  const socketOnRemoveStream = (arg) => {\r\n    let stream = localStreams.get(arg.id);\r\n    if (stream) {\r\n      onStreamFailed(stream);\r\n      return;\r\n    }\r\n    stream = remoteStreams.get(arg.id);\r\n    if (stream) {\r\n      removeStream(stream);\r\n      remoteStreams.remove(arg.id);\r\n      const evt = StreamEvent({ type: 'stream-removed', stream });\r\n      that.dispatchEvent(evt);\r\n    }\r\n  };\r\n\r\n  // The socket has disconnected\r\n  const socketOnDisconnect = () => {\r\n    Logger.info('Socket disconnected, lost connection to ErizoController');\r\n    if (that.state !== DISCONNECTED) {\r\n      Logger.error('Unexpected disconnection from ErizoController');\r\n      const disconnectEvt = RoomEvent({ type: 'room-disconnected',\r\n        message: 'unexpected-disconnection' });\r\n      that.dispatchEvent(disconnectEvt);\r\n    }\r\n  };\r\n\r\n  const socketOnICEConnectionFailed = (arg) => {\r\n    let stream;\r\n    if (!arg.streamId) {\r\n      return;\r\n    }\r\n    const message = `ICE Connection Failed on ${arg.type} ${arg.streamId} ${that.state}`;\r\n    Logger.error(message);\r\n    if (arg.type === 'publish') {\r\n      stream = localStreams.get(arg.streamId);\r\n    } else {\r\n      stream = remoteStreams.get(arg.streamId);\r\n    }\r\n    onStreamFailed(stream, message);\r\n  };\r\n\r\n  const socketOnError = (e) => {\r\n    Logger.error('Cannot connect to erizo Controller');\r\n    const connectEvt = RoomEvent({ type: 'room-error', message: e });\r\n    that.dispatchEvent(connectEvt);\r\n  };\r\n\r\n  const sendDataSocketFromStreamEvent = (evt) => {\r\n    const stream = evt.stream;\r\n    const msg = evt.msg;\r\n    if (stream.local) {\r\n      socket.sendMessage('sendDataStream', { id: stream.getID(), msg });\r\n    } else {\r\n      Logger.error('You can not send data through a remote stream');\r\n    }\r\n  };\r\n\r\n  const updateAttributesFromStreamEvent = (evt) => {\r\n    const stream = evt.stream;\r\n    const attrs = evt.attrs;\r\n    if (stream.local) {\r\n      stream.updateLocalAttributes(attrs);\r\n      socket.sendMessage('updateStreamAttributes', { id: stream.getID(), attrs });\r\n    } else {\r\n      Logger.error('You can not update attributes in a remote stream');\r\n    }\r\n  };\r\n\r\n  const socketEventToArgs = (func, event) => {\r\n    if (event.args) {\r\n      func(...event.args);\r\n    } else {\r\n      func();\r\n    }\r\n  };\r\n\r\n  const createSdpConstraints = (type, stream, options) => ({\r\n    state: type,\r\n    data: stream.hasData(),\r\n    audio: stream.hasAudio(),\r\n    video: stream.hasVideo(),\r\n    label: stream.getLabel(),\r\n    screen: stream.hasScreen(),\r\n    attributes: stream.getAttributes(),\r\n    metadata: options.metadata,\r\n    createOffer: options.createOffer,\r\n    muteStream: options.muteStream,\r\n  });\r\n\r\n  const populateStreamFunctions = (id, streamInput, error, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    if (id === null) {\r\n      Logger.error('Error when publishing the stream', error);\r\n      // Unauth -1052488119\r\n      // Network -5\r\n      callback(undefined, error);\r\n      return;\r\n    }\r\n    Logger.info('Stream published');\r\n    stream.getID = () => id;\r\n    stream.on('internal-send-data', sendDataSocketFromStreamEvent);\r\n    stream.on('internal-set-attributes', updateAttributesFromStreamEvent);\r\n    localStreams.add(id, stream);\r\n    stream.room = that;\r\n    callback(id);\r\n  };\r\n\r\n  const publishExternal = (streamInput, options, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    let type;\r\n    let arg;\r\n    if (stream.url) {\r\n      type = 'url';\r\n      arg = stream.url;\r\n    } else {\r\n      type = 'recording';\r\n      arg = stream.recording;\r\n    }\r\n    Logger.info('Checking publish options for', stream.getID());\r\n    stream.checkOptions(options);\r\n    socket.sendSDP('publish', createSdpConstraints(type, stream, options), arg,\r\n      (id, error) => {\r\n        populateStreamFunctions(id, stream, error, callback);\r\n      });\r\n  };\r\n\r\n  const publishP2P = (streamInput, options, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    // We save them now to be used when actually publishing in P2P mode.\r\n    stream.maxAudioBW = options.maxAudioBW;\r\n    stream.maxVideoBW = options.maxVideoBW;\r\n    socket.sendSDP('publish', createSdpConstraints('p2p', stream, options), undefined, (id, error) => {\r\n      populateStreamFunctions(id, stream, error, callback);\r\n    });\r\n  };\r\n\r\n  const publishData = (streamInput, options, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    socket.sendSDP('publish', createSdpConstraints('data', stream, options), undefined, (id, error) => {\r\n      populateStreamFunctions(id, stream, error, callback);\r\n    });\r\n  };\r\n\r\n  const publishErizo = (streamInput, options, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    Logger.info('Publishing to Erizo Normally, is createOffer', options.createOffer);\r\n    const constraints = createSdpConstraints('erizo', stream, options);\r\n    constraints.minVideoBW = options.minVideoBW;\r\n    constraints.maxVideoBW = options.maxVideoBW;\r\n    constraints.scheme = options.scheme;\r\n\r\n    socket.sendSDP('publish', constraints, undefined, (id, erizoId, error) => {\r\n      if (id === null) {\r\n        Logger.error('Error publishing stream', error);\r\n        callback(undefined, error);\r\n        return;\r\n      }\r\n      populateStreamFunctions(id, stream, error, undefined);\r\n      createLocalStreamErizoConnection(stream, erizoId, options);\r\n      callback(id);\r\n    });\r\n  };\r\n\r\n  const getVideoConstraints = (stream, video) => {\r\n    const hasVideo = video && stream.hasVideo();\r\n    const width = video && video.width;\r\n    const height = video && video.height;\r\n    const frameRate = video && video.frameRate;\r\n    if (width || height || frameRate) {\r\n      return { width, height, frameRate };\r\n    }\r\n    return hasVideo;\r\n  };\r\n\r\n  const subscribeErizo = (streamInput, optionsInput, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    const options = optionsInput;\r\n    options.maxVideoBW = options.maxVideoBW || spec.defaultVideoBW;\r\n    if (options.maxVideoBW > spec.maxVideoBW) {\r\n      options.maxVideoBW = spec.maxVideoBW;\r\n    }\r\n    options.audio = (options.audio === undefined) ? true : options.audio;\r\n    options.video = (options.video === undefined) ? true : options.video;\r\n    options.data = (options.data === undefined) ? true : options.data;\r\n    stream.checkOptions(options);\r\n    const constraint = { streamId: stream.getID(),\r\n      audio: options.audio && stream.hasAudio(),\r\n      video: getVideoConstraints(stream, options.video),\r\n      maxVideoBW: options.maxVideoBW,\r\n      data: options.data && stream.hasData(),\r\n      browser: that.ConnectionHelpers.getBrowser(),\r\n      createOffer: options.createOffer,\r\n      metadata: options.metadata,\r\n      muteStream: options.muteStream,\r\n      slideShowMode: options.slideShowMode };\r\n    socket.sendSDP('subscribe', constraint, undefined, (result, erizoId, error) => {\r\n      if (result === null) {\r\n        Logger.error('Error subscribing to stream ', error);\r\n        callback(undefined, error);\r\n        return;\r\n      }\r\n\r\n      Logger.info('Subscriber added');\r\n      createRemoteStreamErizoConnection(stream, erizoId, options);\r\n\r\n      callback(true);\r\n    });\r\n  };\r\n\r\n  const subscribeData = (streamInput, options, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    socket.sendSDP('subscribe',\r\n      { streamId: stream.getID(),\r\n        data: options.data,\r\n        metadata: options.metadata },\r\n      undefined, (result, error) => {\r\n        if (result === null) {\r\n          Logger.error('Error subscribing to stream ', error);\r\n          callback(undefined, error);\r\n          return;\r\n        }\r\n        Logger.info('Stream subscribed');\r\n        const evt = StreamEvent({ type: 'stream-subscribed', stream });\r\n        that.dispatchEvent(evt);\r\n        callback(true);\r\n      });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    that.state = DISCONNECTED;\r\n    socket.state = socket.DISCONNECTED;\r\n\r\n    // Remove all streams\r\n    remoteStreams.forEach((stream, id) => {\r\n      removeStream(stream);\r\n      remoteStreams.remove(id);\r\n      if (stream && !stream.failed) {\r\n        const evt2 = StreamEvent({ type: 'stream-removed', stream });\r\n        that.dispatchEvent(evt2);\r\n      }\r\n    });\r\n    remoteStreams = ErizoMap();\r\n\r\n    // Close Peer Connections\r\n    localStreams.forEach((stream, id) => {\r\n      removeStream(stream);\r\n      localStreams.remove(id);\r\n    });\r\n    localStreams = ErizoMap();\r\n\r\n    // Close socket\r\n    try {\r\n      socket.disconnect();\r\n    } catch (error) {\r\n      Logger.debug('Socket already disconnected');\r\n    }\r\n    socket = undefined;\r\n  };\r\n\r\n  // Public functions\r\n\r\n  // It stablishes a connection to the room.\r\n  // Once it is done it throws a RoomEvent(\"room-connected\")\r\n  that.connect = (options = {}) => {\r\n    const token = Base64.decodeBase64(spec.token);\r\n\r\n    if (that.state !== DISCONNECTED) {\r\n      Logger.warning('Room already connected');\r\n    }\r\n\r\n    // 1- Connect to Erizo-Controller\r\n    that.state = CONNECTING;\r\n    socket.connect(JSON.parse(token), options, (response) => {\r\n      let stream;\r\n      const streamList = [];\r\n      const streams = response.streams || [];\r\n      const roomId = response.id;\r\n\r\n      that.p2p = response.p2p;\r\n      that.iceServers = response.iceServers;\r\n      that.state = CONNECTED;\r\n      spec.singlePC = response.singlePC;\r\n      spec.defaultVideoBW = response.defaultVideoBW;\r\n      spec.maxVideoBW = response.maxVideoBW;\r\n\r\n      // 2- Retrieve list of streams\r\n      const streamIndices = Object.keys(streams);\r\n      for (let index = 0; index < streamIndices.length; index += 1) {\r\n        const arg = streams[streamIndices[index]];\r\n        stream = Stream(that.ConnectionHelpers, { streamID: arg.id,\r\n          local: false,\r\n          audio: arg.audio,\r\n          video: arg.video,\r\n          data: arg.data,\r\n          label: arg.label,\r\n          screen: arg.screen,\r\n          attributes: arg.attributes });\r\n        stream.room = that;\r\n        streamList.push(stream);\r\n        remoteStreams.add(arg.id, stream);\r\n      }\r\n\r\n      // 3 - Update RoomID\r\n      that.roomID = roomId;\r\n\r\n      Logger.info(`Connected to room ${that.roomID}`);\r\n\r\n      const connectEvt = RoomEvent({ type: 'room-connected', streams: streamList });\r\n      that.dispatchEvent(connectEvt);\r\n    }, (error) => {\r\n      Logger.error(`Not Connected! Error: ${error}`);\r\n      const connectEvt = RoomEvent({ type: 'room-error', message: error });\r\n      that.dispatchEvent(connectEvt);\r\n    });\r\n  };\r\n\r\n  // It disconnects from the room, dispatching a new RoomEvent(\"room-disconnected\")\r\n  that.disconnect = () => {\r\n    Logger.debug('Disconnection requested');\r\n    // 1- Disconnect from room\r\n    const disconnectEvt = RoomEvent({ type: 'room-disconnected',\r\n      message: 'expected-disconnection' });\r\n    that.dispatchEvent(disconnectEvt);\r\n  };\r\n\r\n  // It publishes the stream provided as argument. Once it is added it throws a\r\n  // StreamEvent(\"stream-added\").\r\n  that.publish = (streamInput, optionsInput = {}, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    const options = optionsInput;\r\n\r\n    options.maxVideoBW = options.maxVideoBW || spec.defaultVideoBW;\r\n    if (options.maxVideoBW > spec.maxVideoBW) {\r\n      options.maxVideoBW = spec.maxVideoBW;\r\n    }\r\n\r\n    if (options.minVideoBW === undefined) {\r\n      options.minVideoBW = 0;\r\n    }\r\n\r\n    if (options.minVideoBW > spec.defaultVideoBW) {\r\n      options.minVideoBW = spec.defaultVideoBW;\r\n    }\r\n\r\n    stream.forceTurn = options.forceTurn;\r\n\r\n    options.simulcast = options.simulcast || false;\r\n\r\n    options.muteStream = {\r\n      audio: stream.audioMuted,\r\n      video: stream.videoMuted,\r\n    };\r\n\r\n    // 1- If the stream is not local or it is a failed stream we do nothing.\r\n    if (stream && stream.local && !stream.failed && !localStreams.has(stream.getID())) {\r\n      // 2- Publish Media Stream to Erizo-Controller\r\n      if (stream.hasMedia()) {\r\n        if (stream.isExternal()) {\r\n          publishExternal(stream, options, callback);\r\n        } else if (that.p2p) {\r\n          publishP2P(stream, options, callback);\r\n        } else {\r\n          publishErizo(stream, options, callback);\r\n        }\r\n      } else if (stream.hasData()) {\r\n        publishData(stream, options, callback);\r\n      }\r\n    } else {\r\n      Logger.error('Trying to publish invalid stream');\r\n      callback(undefined, 'Invalid Stream');\r\n    }\r\n  };\r\n\r\n  // Returns callback(id, error)\r\n  that.startRecording = (stream, callback = () => {}) => {\r\n    if (stream === undefined) {\r\n      Logger.error('Trying to start recording on an invalid stream', stream);\r\n      callback(undefined, 'Invalid Stream');\r\n      return;\r\n    }\r\n    Logger.debug(`Start Recording stream: ${stream.getID()}`);\r\n    socket.sendMessage('startRecorder', { to: stream.getID() }, (id, error) => {\r\n      if (id === null) {\r\n        Logger.error('Error on start recording', error);\r\n        callback(undefined, error);\r\n        return;\r\n      }\r\n\r\n      Logger.info('Start recording', id);\r\n      callback(id);\r\n    });\r\n  };\r\n\r\n  // Returns callback(id, error)\r\n  that.stopRecording = (recordingId, callback = () => {}) => {\r\n    socket.sendMessage('stopRecorder', { id: recordingId }, (result, error) => {\r\n      if (result === null) {\r\n        Logger.error('Error on stop recording', error);\r\n        callback(undefined, error);\r\n        return;\r\n      }\r\n      Logger.info('Stop recording', recordingId);\r\n      callback(true);\r\n    });\r\n  };\r\n\r\n  // It unpublishes the local stream in the room, dispatching a StreamEvent(\"stream-removed\")\r\n  that.unpublish = (streamInput, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    // Unpublish stream from Erizo-Controller\r\n    if (stream && stream.local) {\r\n      // Media stream\r\n      socket.sendMessage('unpublish', stream.getID(), (result, error) => {\r\n        if (result === null) {\r\n          Logger.error('Error unpublishing stream', error);\r\n          callback(undefined, error);\r\n          return;\r\n        }\r\n\r\n        delete stream.failed;\r\n        callback(true);\r\n      });\r\n\r\n      Logger.info('Stream unpublished');\r\n      stream.room = undefined;\r\n      if (stream.hasMedia() && !stream.isExternal()) {\r\n        const localStream = localStreams.has(stream.getID()) ?\r\n                              localStreams.get(stream.getID()) : stream;\r\n        removeStream(localStream);\r\n      }\r\n      localStreams.remove(stream.getID());\r\n\r\n      stream.getID = () => {};\r\n      stream.off('internal-send-data', sendDataSocketFromStreamEvent);\r\n      stream.off('internal-set-attributes', updateAttributesFromStreamEvent);\r\n    } else {\r\n      const error = 'Cannot unpublish, stream does not exist or is not local';\r\n      Logger.error(error);\r\n      callback(undefined, error);\r\n    }\r\n  };\r\n\r\n  that.sendControlMessage = (stream, type, action) => {\r\n    if (stream && stream.getID()) {\r\n      const msg = { type: 'control', action };\r\n      socket.sendSDP('signaling_message', { streamId: stream.getID(), msg });\r\n    }\r\n  };\r\n\r\n  // It subscribe to a remote stream and draws it inside the HTML tag given by the ID='elementID'\r\n  that.subscribe = (streamInput, optionsInput = {}, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    const options = optionsInput;\r\n\r\n    if (stream && !stream.local && !stream.failed) {\r\n      if (stream.hasMedia()) {\r\n        // 1- Subscribe to Stream\r\n        if (!stream.hasVideo() && !stream.hasScreen()) {\r\n          options.video = false;\r\n        }\r\n        if (!stream.hasAudio()) {\r\n          options.audio = false;\r\n        }\r\n\r\n        options.muteStream = {\r\n          audio: stream.audioMuted,\r\n          video: stream.videoMuted,\r\n        };\r\n\r\n        stream.forceTurn = options.forceTurn;\r\n\r\n        if (that.p2p) {\r\n          socket.sendSDP('subscribe', { streamId: stream.getID(), metadata: options.metadata });\r\n          callback(true);\r\n        } else {\r\n          subscribeErizo(stream, options, callback);\r\n        }\r\n      } else if (stream.hasData() && options.data !== false) {\r\n        subscribeData(stream, options, callback);\r\n      } else {\r\n        Logger.warning('There\\'s nothing to subscribe to');\r\n        callback(undefined, 'Nothing to subscribe to');\r\n        return;\r\n      }\r\n      // Subscribe to stream stream\r\n      Logger.info(`Subscribing to: ${stream.getID()}`);\r\n    } else {\r\n      let error = 'Error on subscribe';\r\n      if (!stream) {\r\n        Logger.warning('Cannot subscribe to invalid stream');\r\n        error = 'Invalid or undefined stream';\r\n      } else if (stream.local) {\r\n        Logger.warning('Cannot subscribe to local stream, you should ' +\r\n                         'subscribe to the remote version of your local stream');\r\n        error = 'Local copy of stream';\r\n      } else if (stream.failed) {\r\n        Logger.warning('Cannot subscribe to failed stream.');\r\n        error = 'Failed stream';\r\n      }\r\n      callback(undefined, error);\r\n    }\r\n  };\r\n\r\n  // It unsubscribes from the stream, removing the HTML element.\r\n  that.unsubscribe = (streamInput, callback = () => {}) => {\r\n    const stream = streamInput;\r\n    // Unsubscribe from stream\r\n    if (socket !== undefined) {\r\n      if (stream && !stream.local) {\r\n        socket.sendMessage('unsubscribe', stream.getID(), (result, error) => {\r\n          if (result === null) {\r\n            callback(undefined, error);\r\n            return;\r\n          }\r\n          removeStream(stream);\r\n          delete stream.failed;\r\n          callback(true);\r\n        }, () => {\r\n          Logger.error('Error calling unsubscribe.');\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  that.getStreamStats = (stream, callback = () => {}) => {\r\n    if (!socket) {\r\n      return 'Error getting stats - no socket';\r\n    }\r\n    if (!stream) {\r\n      return 'Error getting stats - no stream';\r\n    }\r\n\r\n    socket.sendMessage('getStreamStats', stream.getID(), (result) => {\r\n      if (result) {\r\n        callback(result);\r\n      }\r\n    });\r\n    return undefined;\r\n  };\r\n\r\n  // It searchs the streams that have \"name\" attribute with \"value\" value\r\n  that.getStreamsByAttribute = (name, value) => {\r\n    const streams = [];\r\n\r\n    remoteStreams.forEach((stream) => {\r\n      if (stream.getAttributes() !== undefined && stream.getAttributes()[name] === value) {\r\n        streams.push(stream);\r\n      }\r\n    });\r\n\r\n    return streams;\r\n  };\r\n\r\n  that.on('room-disconnected', clearAll);\r\n\r\n  socket.on('onAddStream', socketEventToArgs.bind(null, socketOnAddStream));\r\n  socket.on('signaling_message_erizo', socketEventToArgs.bind(null, socketOnErizoMessage));\r\n  socket.on('signaling_message_peer', socketEventToArgs.bind(null, socketOnPeerMessage));\r\n  socket.on('publish_me', socketEventToArgs.bind(null, socketOnPublishMe));\r\n  socket.on('unpublish_me', socketEventToArgs.bind(null, socketOnUnpublishMe));\r\n  socket.on('onBandwidthAlert', socketEventToArgs.bind(null, socketOnBandwidthAlert));\r\n  socket.on('onDataStream', socketEventToArgs.bind(null, socketOnDataStream));\r\n  socket.on('onUpdateAttributeStream', socketEventToArgs.bind(null, socketOnUpdateAttributeStream));\r\n  socket.on('onRemoveStream', socketEventToArgs.bind(null, socketOnRemoveStream));\r\n  socket.on('disconnect', socketEventToArgs.bind(null, socketOnDisconnect));\r\n  socket.on('connection_failed', socketEventToArgs.bind(null, socketOnICEConnectionFailed));\r\n  socket.on('error', socketEventToArgs.bind(null, socketOnError));\r\n\r\n  return that;\r\n};\r\n\r\nexport default Room;\r\n","import Room from './Room';\r\nimport { LicodeEvent, RoomEvent, StreamEvent } from './Events';\r\nimport Stream from './Stream';\r\nimport Logger from './utils/Logger';\r\n\r\n// eslint-disable-next-line \r\nrequire('expose-loader?adapter!../lib/adapter.js');\r\n// eslint-disable-next-line\r\nrequire('script-loader!./utils/L.Resizer.js');\r\n\r\n\r\nconst Erizo = {\r\n  Room: Room.bind(null, undefined, undefined, undefined),\r\n  LicodeEvent,\r\n  RoomEvent,\r\n  StreamEvent,\r\n  Stream: Stream.bind(null, undefined),\r\n  Logger,\r\n};\r\n\r\nexport default Erizo;\r\n"],"sourceRoot":""}